'use strict';

angular.module('dgdtoolApp', ['LocalStorageModule', 'tmh.dynamicLocale', 'pascalprecht.translate', 
               'ui.bootstrap', // for modal dialogs
    'ngResource', 'ui.router', 'ngCookies', 'ngAria', 'ngCacheBuster', 'ngFileUpload', 'infinite-scroll'])

    .run(["$rootScope", "$location", "$window", "$http", "$state", "$translate", "Language", "Auth", "Principal", "ENV", "VERSION", function ($rootScope, $location, $window, $http, $state, $translate, Language, Auth, Principal, ENV, VERSION) {
        $rootScope.ENV = ENV;
        $rootScope.VERSION = VERSION;
        $rootScope.$on('$stateChangeStart', function (event, toState, toStateParams) {
            $rootScope.toState = toState;
            $rootScope.toStateParams = toStateParams;

            if (Principal.isIdentityResolved()) {
                Auth.authorize();
            }
            
            // Update the language
            Language.getCurrent().then(function (language) {
                $translate.use(language);
            });
            
        });

        $rootScope.$on('$stateChangeSuccess',  function(event, toState, toParams, fromState, fromParams) {
            var titleKey = 'global.title' ;

            // Remember previous state unless we've been redirected to login or we've just
            // reset the state memory after logout. If we're redirected to login, our
            // previousState is already set in the authExpiredInterceptor. If we're going
            // to login directly, we don't want to be sent to some previous state anyway
            if (toState.name != 'login' && $rootScope.previousStateName) {
              $rootScope.previousStateName = fromState.name;
              $rootScope.previousStateParams = fromParams;
            }

            // Set the page title key to the one configured in state or use default one
            if (toState.data.pageTitle) {
                titleKey = toState.data.pageTitle;
            }
            
            $translate(titleKey).then(function (title) {
                // Change window title with translated one
                $window.document.title = title;
            });
            
        });

        $rootScope.back = function() {
            // If previous state is 'activate' or do not exist go to 'home'
            if ($rootScope.previousStateName === 'activate' || $state.get($rootScope.previousStateName) === null) {
                $state.go('home');
            } else {
                $state.go($rootScope.previousStateName, $rootScope.previousStateParams);
            }
        };
    }])
    .config(["$stateProvider", "$urlRouterProvider", "$httpProvider", "$locationProvider", "$translateProvider", "tmhDynamicLocaleProvider", "httpRequestInterceptorCacheBusterProvider", function ($stateProvider, $urlRouterProvider, $httpProvider, $locationProvider, $translateProvider, tmhDynamicLocaleProvider, httpRequestInterceptorCacheBusterProvider) {

        //enable CSRF
        $httpProvider.defaults.xsrfCookieName = 'CSRF-TOKEN';
        $httpProvider.defaults.xsrfHeaderName = 'X-CSRF-TOKEN';

        //Cache everything except rest api requests
        httpRequestInterceptorCacheBusterProvider.setMatchlist([/.*api.*/, /.*protected.*/], true);

        $urlRouterProvider.otherwise('/');
        $stateProvider.state('site', {
            'abstract': true,
            views: {
                'navbar@': {
                    templateUrl: 'scripts/components/navbar/navbar.html',
                    controller: 'NavbarController'
                }
            },
            resolve: {
                authorize: ['Auth',
                    function (Auth) {
                        return Auth.authorize();
                    }
                ],
                translatePartialLoader: ['$translate', '$translatePartialLoader', function ($translate, $translatePartialLoader) {
                    $translatePartialLoader.addPart('global');
                }]
            }
        });

        $httpProvider.interceptors.push('errorHandlerInterceptor');
        $httpProvider.interceptors.push('authExpiredInterceptor');
        $httpProvider.interceptors.push('notificationInterceptor');
        
        // Initialize angular-translate
        $translateProvider.useLoader('$translatePartialLoader', {
            urlTemplate: 'i18n/{lang}/{part}.json'
        });

        $translateProvider.preferredLanguage('en');
        $translateProvider.useCookieStorage();
        $translateProvider.useSanitizeValueStrategy('escaped');
        $translateProvider.addInterpolation('$translateMessageFormatInterpolation');

        tmhDynamicLocaleProvider.localeLocationPattern('bower_components/angular-i18n/angular-locale_{{locale}}.js');
        tmhDynamicLocaleProvider.useCookieStorage();
        tmhDynamicLocaleProvider.storageKey('NG_TRANSLATE_LANG_KEY');
        
    }])
    .config(['$urlMatcherFactoryProvider', function($urlMatcherFactory) {
        $urlMatcherFactory.type('boolean', {
            name : 'boolean',
            decode: function(val) { return val == true ? true : val == "true" ? true : false },
            encode: function(val) { return val ? 1 : 0; },
            equals: function(a, b) { return this.is(a) && a === b; },
            is: function(val) { return [true,false,0,1].indexOf(val) >= 0 },
            pattern: /bool|true|0|1/
        });
    }]);;

"use strict";
// DO NOT EDIT THIS FILE, EDIT THE GRUNT TASK NGCONSTANT SETTINGS INSTEAD WHICH GENERATES THIS FILE
angular.module('dgdtoolApp')

.constant('ENV', 'prod')

.constant('VERSION', '0.0.1-SNAPSHOT')

;
"use strict";
// DO NOT EDIT THIS FILE, EDIT THE GRUNT TASK NGCONSTANT SETTINGS INSTEAD WHICH GENERATES THIS FILE
angular.module('dgdtoolApp')

.constant('ENV', 'dev')

.constant('VERSION', '0.0.1-SNAPSHOT')

;
'use strict';

angular.module('dgdtoolApp')
    .factory('Auth', ["$rootScope", "$state", "$q", "$translate", "Principal", "AuthServerProvider", "Account", "Register", "Activate", "Password", "PasswordResetInit", "PasswordResetFinish", function Auth($rootScope, $state, $q, $translate, Principal, AuthServerProvider, Account, Register, Activate, Password, PasswordResetInit, PasswordResetFinish) {
        return {
            login: function (credentials, callback) {
                var cb = callback || angular.noop;
                var deferred = $q.defer();

                AuthServerProvider.login(credentials).then(function (data) {
                    // retrieve the logged account information
                    Principal.identity(true).then(function(account) {
                        // After the login the language will be changed to
                        // the language selected by the user during his registration
                        $translate.use(account.langKey).then(function(){
                            $translate.refresh();
                        });
                        deferred.resolve(data);
                    });
                    return cb();
                })['catch'](function (err) {
                    this.logout();
                    deferred.reject(err);
                    return cb(err);
                }.bind(this));

                return deferred.promise;
            },

            logout: function () {
                AuthServerProvider.logout();
                Principal.authenticate(null);
                // Reset state memory
                $rootScope.previousStateName = undefined;
                $rootScope.previousStateNameParams = undefined;
            },

            authorize: function(force) {
                return Principal.identity(force)
                    .then(function() {
                        var isAuthenticated = Principal.isAuthenticated();

                        // an authenticated user can't access to login and register pages
                        if (isAuthenticated && $rootScope.toState.parent === 'account' && ($rootScope.toState.name === 'login' || $rootScope.toState.name === 'register')) {
                            $state.go('home');
                        }

                        if ($rootScope.toState.data.authorities && $rootScope.toState.data.authorities.length > 0 && !Principal.hasAnyAuthority($rootScope.toState.data.authorities)) {
                            if (isAuthenticated) {
                                // user is signed in but not authorized for desired state
                                $state.go('accessdenied');
                            }
                            else {
                                // user is not authenticated. stow the state they wanted before you
                                // send them to the signin state, so you can return them when you're done
                                $rootScope.previousStateName = $rootScope.toState;
                                $rootScope.previousStateNameParams = $rootScope.toStateParams;

                                // now, send them to the signin state so they can log in
                                $state.go('login');
                            }
                        }
                    });
            },
            createAccount: function (account, callback) {
                var cb = callback || angular.noop;

                return Register.save(account,
                    function () {
                        return cb(account);
                    },
                    function (err) {
                        this.logout();
                        return cb(err);
                    }.bind(this)).$promise;
            },

            updateAccount: function (account, callback) {
                var cb = callback || angular.noop;

                return Account.save(account,
                    function () {
                        return cb(account);
                    },
                    function (err) {
                        return cb(err);
                    }.bind(this)).$promise;
            },

            activateAccount: function (key, callback) {
                var cb = callback || angular.noop;

                return Activate.get(key,
                    function (response) {
                        return cb(response);
                    },
                    function (err) {
                        return cb(err);
                    }.bind(this)).$promise;
            },

            changePassword: function (newPassword, callback) {
                var cb = callback || angular.noop;

                return Password.save(newPassword, function () {
                    return cb();
                }, function (err) {
                    return cb(err);
                }).$promise;
            },

            resetPasswordInit: function (mail, callback) {
                var cb = callback || angular.noop;

                return PasswordResetInit.save(mail, function() {
                    return cb();
                }, function (err) {
                    return cb(err);
                }).$promise;
            },

            resetPasswordFinish: function(keyAndPassword, callback) {
                var cb = callback || angular.noop;

                return PasswordResetFinish.save(keyAndPassword, function () {
                    return cb();
                }, function (err) {
                    return cb(err);
                }).$promise;
            }
        };
    }]);

'use strict';

angular.module('dgdtoolApp')
    .factory('Principal', ["$q", "Account", function Principal($q, Account) {
        var _identity,
            _authenticated = false;

        return {
            isIdentityResolved: function () {
                return angular.isDefined(_identity);
            },
            isAuthenticated: function () {
                return _authenticated;
            },
            hasAuthority: function (authority) {
                if (!_authenticated) {
                    return $q.when(false);
                }

                return this.identity().then(function(_id) {
                    return _id.authorities && _id.authorities.indexOf(authority) !== -1;
                }, function(err){
                    return false;
                });
            },
            hasAnyAuthority: function (authorities) {
                if (!_authenticated || !_identity || !_identity.authorities) {
                    return false;
                }

                for (var i = 0; i < authorities.length; i++) {
                    if (_identity.authorities.indexOf(authorities[i]) !== -1) {
                        return true;
                    }
                }

                return false;
            },
            authenticate: function (identity) {
                _identity = identity;
                _authenticated = identity !== null;
            },
            identity: function (force) {
                var deferred = $q.defer();

                if (force === true) {
                    _identity = undefined;
                }

                // check and see if we have retrieved the identity data from the server.
                // if we have, reuse it by immediately resolving
                if (angular.isDefined(_identity)) {
                    deferred.resolve(_identity);

                    return deferred.promise;
                }

                // retrieve the identity data from the server, update the identity object, and then resolve.
                Account.get().$promise
                    .then(function (account) {
                        _identity = account.data;
                        _authenticated = true;
                        deferred.resolve(_identity);
                    })
                    ['catch'](function() {
                        _identity = null;
                        _authenticated = false;
                        deferred.resolve(_identity);
                    });
                return deferred.promise;
            }
        };
    }]);

'use strict';

angular.module('dgdtoolApp')
    .directive('hasAnyAuthority', ['Principal', function (Principal) {
        return {
            restrict: 'A',
            link: function (scope, element, attrs) {
                var setVisible = function () {
                        element.removeClass('hidden');
                    },
                    setHidden = function () {
                        element.addClass('hidden');
                    },
                    defineVisibility = function (reset) {
                        var result;
                        if (reset) {
                            setVisible();
                        }

                        result = Principal.hasAnyAuthority(authorities);
                        if (result) {
                            setVisible();
                        } else {
                            setHidden();
                        }
                    },
                    authorities = attrs.hasAnyAuthority.replace(/\s+/g, '').split(',');

                if (authorities.length > 0) {
                    defineVisibility(true);
                }
            }
        };
    }])
    .directive('hasAuthority', ['Principal', function (Principal) {
        return {
            restrict: 'A',
            link: function (scope, element, attrs) {
                var setVisible = function () {
                        element.removeClass('hidden');
                    },
                    setHidden = function () {
                        element.addClass('hidden');
                    },
                    defineVisibility = function (reset) {

                        if (reset) {
                            setVisible();
                        }

                        Principal.hasAuthority(authority)
                            .then(function (result) {
                                if (result) {
                                    setVisible();
                                } else {
                                    setHidden();
                                }
                            });
                    },
                    authority = attrs.hasAuthority.replace(/\s+/g, '');

                if (authority.length > 0) {
                    defineVisibility(true);
                }
            }
        };
    }]);

'use strict';

angular.module('dgdtoolApp')
    .factory('Account', ["$resource", function Account($resource) {
        return $resource('api/account', {}, {
            'get': { method: 'GET', params: {}, isArray: false,
                interceptor: {
                    response: function(response) {
                        // expose response
                        return response;
                    }
                }
            }
        });
    }]);

'use strict';

angular.module('dgdtoolApp')
    .factory('Activate', ["$resource", function ($resource) {
        return $resource('api/activate', {}, {
            'get': { method: 'GET', params: {}, isArray: false}
        });
    }]);



'use strict';

angular.module('dgdtoolApp')
    .factory('Password', ["$resource", function ($resource) {
        return $resource('api/account/change_password', {}, {
        });
    }]);

angular.module('dgdtoolApp')
    .factory('PasswordResetInit', ["$resource", function ($resource) {
        return $resource('api/account/reset_password/init', {}, {
        })
    }]);

angular.module('dgdtoolApp')
    .factory('PasswordResetFinish', ["$resource", function ($resource) {
        return $resource('api/account/reset_password/finish', {}, {
        })
    }]);

'use strict';

angular.module('dgdtoolApp')
    .factory('Register', ["$resource", function ($resource) {
        return $resource('api/register', {}, {
        });
    }]);



/* globals $ */
'use strict';

angular.module('dgdtoolApp')
    .directive('showValidation', function() {
        return {
            restrict: 'A',
            require: 'form',
            link: function (scope, element) {
                element.find('.form-group').each(function() {
                    var $formGroup = $(this);
                    var $inputs = $formGroup.find('input[ng-model],textarea[ng-model],select[ng-model]');

                    if ($inputs.length > 0) {
                        $inputs.each(function() {
                            var $input = $(this);
                            scope.$watch(function() {
                                return $input.hasClass('ng-invalid') && $input.hasClass('ng-dirty');
                            }, function(isInvalid) {
                                $formGroup.toggleClass('has-error', isInvalid);
                            });
                        });
                    }
                });
            }
        };
    });

/* globals $ */
'use strict';

angular.module('dgdtoolApp')
    .directive('maxbytes', ["$q", function ($q) {
        function endsWith(suffix, str) {
            return str.indexOf(suffix, str.length - suffix.length) !== -1;
        }

        function paddingSize(base64String) {
            if (endsWith('==', base64String)) {
                return 2;
            }
            if (endsWith('=', base64String)) {
                return 1;
            }
            return 0;
        }

        function numberOfBytes(base64String) {
            return base64String.length / 4 * 3 - paddingSize(base64String);
        }

        return {
            restrict: 'A',
            require: '?ngModel',
            link: function (scope, element, attrs, ngModel) {
                if (!ngModel) return;

                ngModel.$validators.maxbytes = function (modelValue) {
                    return ngModel.$isEmpty(modelValue) || numberOfBytes(modelValue) <= attrs.maxbytes;
                };
            }
        };
    }]);

/* globals $ */
'use strict';

angular.module('dgdtoolApp')
    .directive('minbytes', ["$q", function ($q) {
        function endsWith(suffix, str) {
            return str.indexOf(suffix, str.length - suffix.length) !== -1;
        }

        function paddingSize(base64String) {
            if (endsWith('==', base64String)) {
                return 2;
            }
            if (endsWith('=', base64String)) {
                return 1;
            }
            return 0;
        }

        function numberOfBytes(base64String) {
            return base64String.length / 4 * 3 - paddingSize(base64String);
        }

        return {
            restrict: 'A',
            require: '?ngModel',
            link: function (scope, element, attrs, ngModel) {
                if (!ngModel) return;

                ngModel.$validators.minbytes = function (modelValue) {
                    return ngModel.$isEmpty(modelValue) || numberOfBytes(modelValue) >= attrs.minbytes;
                };
            }
        };
    }]);

/* globals $ */
'use strict';

angular.module('dgdtoolApp')
    .directive('dgdtoolAppPager', function() {
        return {
            templateUrl: 'scripts/components/form/pager.html'
        };
    });

/* globals $ */
'use strict';

angular.module('dgdtoolApp')
    .directive('dgdtoolAppPagination', function() {
        return {
            templateUrl: 'scripts/components/form/pagination.html'
        };
    });

'use strict';

angular.module('dgdtoolApp')
    .factory('AuditsService', ["$http", function ($http) {
        return {
            findAll: function () {
                return $http.get('api/audits/').then(function (response) {
                    return response.data;
                });
            },
            findByDates: function (fromDate, toDate) {

                var formatDate =  function (dateToFormat) {
                    if (dateToFormat !== undefined && !angular.isString(dateToFormat)) {
                        return dateToFormat.getYear() + '-' + dateToFormat.getMonth() + '-' + dateToFormat.getDay();
                    }
                    return dateToFormat;
                };

                return $http.get('api/audits/', {params: {fromDate: formatDate(fromDate), toDate: formatDate(toDate)}}).then(function (response) {
                    return response.data;
                });
            }
        };
    }]);

'use strict';

angular.module('dgdtoolApp')
    .factory('LogsService', ["$resource", function ($resource) {
        return $resource('api/logs', {}, {
            'findAll': { method: 'GET', isArray: true},
            'changeLevel': { method: 'PUT'}
        });
    }]);

'use strict';

angular.module('dgdtoolApp')
    .factory('ConfigurationService', ["$rootScope", "$filter", "$http", function ($rootScope, $filter, $http) {
        return {
            get: function() {
                return $http.get('configprops').then(function (response) {
                    var properties = [];
                    angular.forEach(response.data, function (data) {
                        properties.push(data);
                    });
                    var orderBy = $filter('orderBy');
                    return orderBy(properties, 'prefix');
                });
            }
        };
    }]);

'use strict';

angular.module('dgdtoolApp')
    .factory('MonitoringService', ["$rootScope", "$http", function ($rootScope, $http) {
        return {
            getMetrics: function () {
                return $http.get('metrics/metrics').then(function (response) {
                    return response.data;
                });
            },

            checkHealth: function () {
                return $http.get('health').then(function (response) {
                    return response.data;
                });
            },

            threadDump: function () {
                return $http.get('dump').then(function (response) {
                    return response.data;
                });
            }
        };
    }]);

'use strict';

angular.module('dgdtoolApp')
    .factory('authExpiredInterceptor', ["$rootScope", "$q", "$injector", "localStorageService", function ($rootScope, $q, $injector, localStorageService) {
        return {
            responseError: function(response) {
                // If we have an unauthorized request we redirect to the login page
                // Don't do this check on the account API to avoid infinite loop
                if (response.status == 401 && response.data.path !== undefined && response.data.path.indexOf("/api/account") == -1){
                    var Auth = $injector.get('Auth');
                    var $state = $injector.get('$state');
                    var to = $rootScope.toState;
                    var params = $rootScope.toStateParams;
                    Auth.logout();
                    $rootScope.previousStateName = to;
                    $rootScope.previousStateNameParams = params;
                    $state.go('login');
                }
                return $q.reject(response);
            }
        };
    }]);

'use strict';

angular.module('dgdtoolApp')
    .factory('errorHandlerInterceptor', ["$q", "$rootScope", function ($q, $rootScope) {
        return {
            'responseError': function (response) {
                if (!(response.status == 401 && response.data.path.indexOf("/api/account") == 0 )){
	                $rootScope.$emit('dgdtoolApp.httpError', response);
	            }
                return $q.reject(response);
            }
        };
    }]);
 'use strict';

angular.module('dgdtoolApp')
    .factory('notificationInterceptor', ["$q", "AlertService", function ($q, AlertService) {
        return {
            response: function(response) {
                var alertKey = response.headers('X-dgdtoolApp-alert');
                if (angular.isString(alertKey)) {
                    AlertService.success(alertKey, { param : response.headers('X-dgdtoolApp-params')});
                }
                return response;
            }
        };
    }]);

'use strict';

angular.module('dgdtoolApp')
    .directive('activeMenu', ["$translate", "$locale", "tmhDynamicLocale", function($translate, $locale, tmhDynamicLocale) {
        return {
            restrict: 'A',
            link: function (scope, element, attrs) {
                var language = attrs.activeMenu;

                scope.$watch(function() {
                    return $translate.use();
                }, function(selectedLanguage) {
                    if (language === selectedLanguage) {
                        tmhDynamicLocale.set(language);
                        element.addClass('active');
                    } else {
                        element.removeClass('active');
                    }
                });
            }
        };
    }])
    .directive('activeLink', ["location", function(location) {
        return {
            restrict: 'A',
            link: function (scope, element, attrs) {
                var clazz = attrs.activeLink;
                var path = attrs.href;
                path = path.substring(1); //hack because path does bot return including hashbang
                scope.location = location;
                scope.$watch('location.path()', function(newPath) {
                    if (path === newPath) {
                        element.addClass(clazz);
                    } else {
                        element.removeClass(clazz);
                    }
                });
            }
        };
    }]);

'use strict';

angular.module('dgdtoolApp')
    .controller('NavbarController', ["$scope", "$location", "$state", "Auth", "Principal", "ENV", function ($scope, $location, $state, Auth, Principal, ENV) {
        $scope.isAuthenticated = Principal.isAuthenticated;
        $scope.$state = $state;
        $scope.inProduction = ENV === 'prod';

        $scope.logout = function () {
            Auth.logout();
            $state.go('home');
        };
    }]);

'use strict';

angular.module('dgdtoolApp')
    .factory('User', ["$resource", function ($resource) {
        return $resource('api/users/:login', {}, {
                'query': {method: 'GET', isArray: true},
                'get': {
                    method: 'GET',
                    transformResponse: function (data) {
                        data = angular.fromJson(data);
                        return data;
                    }
                },
                'update': { method:'PUT' }
            });
        }]);

'use strict';

angular.module('dgdtoolApp')
    .filter('characters', function () {
        return function (input, chars, breakOnWord) {
            if (isNaN(chars)) {
                return input;
            }
            if (chars <= 0) {
                return '';
            }
            if (input && input.length > chars) {
                input = input.substring(0, chars);

                if (!breakOnWord) {
                    var lastspace = input.lastIndexOf(' ');
                    // Get last space
                    if (lastspace !== -1) {
                        input = input.substr(0, lastspace);
                    }
                } else {
                    while (input.charAt(input.length-1) === ' ') {
                        input = input.substr(0, input.length - 1);
                    }
                }
                return input + '...';
            }
            return input;
        };
    })
    .filter('words', function () {
        return function (input, words) {
            if (isNaN(words)) {
                return input;
            }
            if (words <= 0) {
                return '';
            }
            if (input) {
                var inputWords = input.split(/\s+/);
                if (inputWords.length > words) {
                    input = inputWords.slice(0, words).join(' ') + '...';
                }
            }
            return input;
        };
    });

/*jshint bitwise: false*/
'use strict';

angular.module('dgdtoolApp')
    .service('Base64', function () {
        var keyStr = 'ABCDEFGHIJKLMNOP' +
            'QRSTUVWXYZabcdef' +
            'ghijklmnopqrstuv' +
            'wxyz0123456789+/' +
            '=';
        this.encode = function (input) {
            var output = '',
                chr1, chr2, chr3 = '',
                enc1, enc2, enc3, enc4 = '',
                i = 0;

            while (i < input.length) {
                chr1 = input.charCodeAt(i++);
                chr2 = input.charCodeAt(i++);
                chr3 = input.charCodeAt(i++);

                enc1 = chr1 >> 2;
                enc2 = ((chr1 & 3) << 4) | (chr2 >> 4);
                enc3 = ((chr2 & 15) << 2) | (chr3 >> 6);
                enc4 = chr3 & 63;

                if (isNaN(chr2)) {
                    enc3 = enc4 = 64;
                } else if (isNaN(chr3)) {
                    enc4 = 64;
                }

                output = output +
                    keyStr.charAt(enc1) +
                    keyStr.charAt(enc2) +
                    keyStr.charAt(enc3) +
                    keyStr.charAt(enc4);
                chr1 = chr2 = chr3 = '';
                enc1 = enc2 = enc3 = enc4 = '';
            }

            return output;
        };

        this.decode = function (input) {
            var output = '',
                chr1, chr2, chr3 = '',
                enc1, enc2, enc3, enc4 = '',
                i = 0;

            // remove all characters that are not A-Z, a-z, 0-9, +, /, or =
            input = input.replace(/[^A-Za-z0-9\+\/\=]/g, '');

            while (i < input.length) {
                enc1 = keyStr.indexOf(input.charAt(i++));
                enc2 = keyStr.indexOf(input.charAt(i++));
                enc3 = keyStr.indexOf(input.charAt(i++));
                enc4 = keyStr.indexOf(input.charAt(i++));

                chr1 = (enc1 << 2) | (enc2 >> 4);
                chr2 = ((enc2 & 15) << 4) | (enc3 >> 2);
                chr3 = ((enc3 & 3) << 6) | enc4;

                output = output + String.fromCharCode(chr1);

                if (enc3 !== 64) {
                    output = output + String.fromCharCode(chr2);
                }
                if (enc4 !== 64) {
                    output = output + String.fromCharCode(chr3);
                }

                chr1 = chr2 = chr3 = '';
                enc1 = enc2 = enc3 = enc4 = '';
            }
        };
    })
    .factory('StorageService', ["$window", function ($window) {
        return {

            get: function (key) {
                return JSON.parse($window.localStorage.getItem(key));
            },

            save: function (key, data) {
                $window.localStorage.setItem(key, JSON.stringify(data));
            },

            remove: function (key) {
                $window.localStorage.removeItem(key);
            },

            clearAll : function () {
                $window.localStorage.clear();
            }
        };
    }]);


'use strict';

angular.module('dgdtoolApp')
    .filter('capitalize', function () {
        return function (input, scope) {
            if (input != null)
                input = input.toLowerCase();
            return input.substring(0, 1).toUpperCase() + input.substring(1);
        }
    });

'use strict';

angular.module('dgdtoolApp')
    .factory('AlertService', ["$timeout", "$sce", "$translate", function ($timeout, $sce,$translate) {
        var exports = {
            factory: factory,
            add: addAlert,
            closeAlert: closeAlert,
            closeAlertByIndex: closeAlertByIndex,
            clear: clear,
            get: get,
            success: success,
            error: error,
            info: info,
            warning : warning
        },
        alertId = 0, // unique id for each alert. Starts from 0.
        alerts = [],
        timeout = 5000; // default timeout

        function clear() {
            alerts = [];
        }

        function get() {
            return alerts;
        }

        function success(msg, params) {
            this.add({
                type: "success",
                msg: msg,
                params: params,
                timeout: timeout
            });
        }

        function error(msg, params) {
            this.add({
                type: "danger",
                msg: msg,
                params: params,
                timeout: timeout
            });
        }

        function warning(msg, params) {
            this.add({
                type: "warning",
                msg: msg,
                params: params,
                timeout: timeout
            });
        }

        function info(msg, params) {
            this.add({
                type: "info",
                msg: msg,
                params: params,
                timeout: timeout
            });
        }

        function factory(alertOptions) {
            return alerts.push({
                type: alertOptions.type,
                msg: $sce.trustAsHtml(alertOptions.msg),
                id: alertOptions.alertId,
                timeout: alertOptions.timeout,
                close: function () {
                    return exports.closeAlert(this.id);
                }
            });
        }

        function addAlert(alertOptions) {
            alertOptions.alertId = alertId++;
            alertOptions.msg = $translate.instant(alertOptions.msg, alertOptions.params);
            var that = this;
            this.factory(alertOptions);
            if (alertOptions.timeout && alertOptions.timeout > 0) {
                $timeout(function () {
                    that.closeAlert(alertOptions.alertId);
                }, alertOptions.timeout);
            }
        }

        function closeAlert(id) {
            return this.closeAlertByIndex(alerts.map(function(e) { return e.id; }).indexOf(id));
        }

        function closeAlertByIndex(index) {
            return alerts.splice(index, 1);
        }

        return exports;

    }]);
'use strict';

angular.module('dgdtoolApp')
    .directive('jhAlert', ["AlertService", function(AlertService) {
        return {
            restrict: 'E',
            template: '<div class="alerts" ng-cloak="">' +
                            '<alert ng-cloak="" ng-repeat="alert in alerts" type="{{alert.type}}" close="alert.close()"><pre>{{ alert.msg }}</pre></alert>' +
                        '</div>',
            controller: ['$scope',
                function($scope) {
                    $scope.alerts = AlertService.get();
                    $scope.$on('$destroy', function () {
                        $scope.alerts = [];
                    });
                }
            ]
        }
    }])
    .directive('jhAlertError', ["AlertService", "$rootScope", "$translate", function(AlertService, $rootScope, $translate) {
        return {
            restrict: 'E',
            template: '<div class="alerts" ng-cloak="">' +
                            '<alert ng-cloak="" ng-repeat="alert in alerts" type="{{alert.type}}" close="alert.close()"><pre>{{ alert.msg }}</pre></alert>' +
                        '</div>',
            controller: ['$scope',
                function($scope) {
                    $scope.alerts = AlertService.get();

                    var cleanHttpErrorListener = $rootScope.$on('dgdtoolApp.httpError', function (event, httpResponse) {
                        var i;
                        event.stopPropagation();
                        switch (httpResponse.status) {
                            // connection refused, server not reachable
                            case 0:
                                addErrorAlert("Server not reachable",'error.serverNotReachable');
                                break;

                            case 400:
                                if (httpResponse.data && httpResponse.data.fieldErrors) {
                                    for (i = 0; i < httpResponse.data.fieldErrors.length; i++) {
                                        var fieldError = httpResponse.data.fieldErrors[i];
                                        // convert 'something[14].other[4].id' to 'something[].other[].id' so translations can be written to it
                                        var convertedField = fieldError.field.replace(/\[\d*\]/g, "[]");
                                        var fieldName = $translate.instant('dgdtoolApp.' + fieldError.objectName + '.' + convertedField);
                                        addErrorAlert('Field ' + fieldName + ' cannot be empty', 'error.' + fieldError.message, {fieldName: fieldName});
                                    }
                                } else if (httpResponse.data && httpResponse.data.message) {
                                  addErrorAlert(httpResponse.data.message, httpResponse.data.message, httpResponse.data);
                                } else {
                                  addErrorAlert(httpResponse.data);
                                }
                                break;

                            default:
                                if (httpResponse.data && httpResponse.data.message) {
                                    addErrorAlert(httpResponse.data.message);
                                } else {
                                    addErrorAlert(JSON.stringify(httpResponse));
                                }
                        }
                    });

                    $scope.$on('$destroy', function () {
                        if(cleanHttpErrorListener !== undefined && cleanHttpErrorListener !== null){
                            cleanHttpErrorListener();
                        }
                    });

                    var addErrorAlert = function (message, key, data) {
                        
                        key = key && key != null ? key : message;
                        AlertService.error(key, data); 

                    }
                }
            ]
        }
    }]);

'use strict';

angular.module('dgdtoolApp')
    .service('ParseLinks', function () {
        this.parse = function (header) {
            if (header.length == 0) {
                throw new Error("input must not be of zero length");
            }

            // Split parts by comma
            var parts = header.split(',');
            var links = {};
            // Parse each part into a named link
            angular.forEach(parts, function (p) {
                var section = p.split(';');
                if (section.length != 2) {
                    throw new Error("section could not be split on ';'");
                }
                var url = section[0].replace(/<(.*)>/, '$1').trim();
                var queryString = {};
                url.replace(
                    new RegExp("([^?=&]+)(=([^&]*))?", "g"),
                    function($0, $1, $2, $3) { queryString[$1] = $3; }
                );
                var page = queryString['page'];
                if( angular.isString(page) ) {
                    page = parseInt(page);
                }
                var name = section[1].replace(/rel="(.*)"/, '$1').trim();
                links[name] = page;
            });

            return links;
        }
    });

'use strict';

angular.module('dgdtoolApp')
    .service('DateUtils', ["$filter", function ($filter) {
      this.convertLocaleDateToServer = function(date) {
        if (date) {
          return $filter('date')(date, 'yyyy-MM-dd');
        } else {
          return null;
        }
      };
      this.convertLocaleDateFromServer = function(date) {
        if (date) {
          var dateString = date.split("-");
          return new Date(dateString[0], dateString[1] - 1, dateString[2]);
        }
        return null;
      };
      this.convertDateTimeFromServer = function(date) {
        if (date) {
          return new Date(date);
        } else {
          return null;
        }
      }
    }]);

'use strict';

angular.module('dgdtoolApp')
    .config(["$stateProvider", function ($stateProvider) {
        $stateProvider
            .state('account', {
                abstract: true,
                parent: 'site'
            });
    }]);

'use strict';

angular.module('dgdtoolApp')
    .config(["$stateProvider", function ($stateProvider) {
        $stateProvider
            .state('activate', {
                parent: 'account',
                url: '/activate?key',
                data: {
                    authorities: [],
                    pageTitle: 'activate.title'
                },
                views: {
                    'content@': {
                        templateUrl: 'scripts/app/account/activate/activate.html',
                        controller: 'ActivationController'
                    }
                },
                resolve: {
                    translatePartialLoader: ['$translate', '$translatePartialLoader', function ($translate, $translatePartialLoader) {
                        $translatePartialLoader.addPart('activate');
                        return $translate.refresh();
                    }]
                }
            });
    }]);

'use strict';

angular.module('dgdtoolApp')
    .controller('ActivationController', ["$scope", "$stateParams", "Auth", function ($scope, $stateParams, Auth) {
        Auth.activateAccount({key: $stateParams.key}).then(function () {
            $scope.error = null;
            $scope.success = 'OK';
        }).catch(function () {
            $scope.success = null;
            $scope.error = 'ERROR';
        });
    }]);


'use strict';

angular.module('dgdtoolApp')
    .config(["$stateProvider", function ($stateProvider) {
        $stateProvider
            .state('login', {
                parent: 'account',
                url: '/login',
                data: {
                    authorities: [], 
                    pageTitle: 'login.title'
                },
                views: {
                    'content@': {
                        templateUrl: 'scripts/app/account/login/login.html',
                        controller: 'LoginController'
                    }
                },
                resolve: {
                    translatePartialLoader: ['$translate', '$translatePartialLoader', function ($translate, $translatePartialLoader) {
                        $translatePartialLoader.addPart('login');
                        return $translate.refresh();
                    }]
                }
            });
    }]);

'use strict';

angular.module('dgdtoolApp')
    .controller('LoginController', ["$rootScope", "$scope", "$state", "$timeout", "Auth", function ($rootScope, $scope, $state, $timeout, Auth) {
        $scope.user = {};
        $scope.errors = {};

        $scope.rememberMe = true;
        $timeout(function (){angular.element('[ng-model="username"]').focus();});
        $scope.login = function (event) {
            event.preventDefault();
            Auth.login({
                username: $scope.username,
                password: $scope.password,
                rememberMe: $scope.rememberMe
            }).then(function () {
                $scope.authenticationError = false;
                if ($rootScope.previousStateName === 'register') {
                    $state.go('home');
                } else {
                    $rootScope.back();
                }
            }).catch(function () {
                $scope.authenticationError = true;
            });
        };
    }]);

'use strict';

angular.module('dgdtoolApp')
    .config(["$stateProvider", function ($stateProvider) {
        $stateProvider
            .state('password', {
                parent: 'account',
                url: '/password',
                data: {
                    authorities: ['ROLE_USER'],
                    pageTitle: 'global.menu.account.password'
                },
                views: {
                    'content@': {
                        templateUrl: 'scripts/app/account/password/password.html',
                        controller: 'PasswordController'
                    }
                },
                resolve: {
                    translatePartialLoader: ['$translate', '$translatePartialLoader', function ($translate, $translatePartialLoader) {
                        $translatePartialLoader.addPart('password');
                        return $translate.refresh();
                    }]
                }
            });
    }]);

'use strict';

angular.module('dgdtoolApp')
    .controller('PasswordController', ["$scope", "Auth", "Principal", function ($scope, Auth, Principal) {
        Principal.identity().then(function(account) {
            $scope.account = account;
        });

        $scope.success = null;
        $scope.error = null;
        $scope.doNotMatch = null;
        $scope.changePassword = function () {
            if ($scope.password !== $scope.confirmPassword) {
                $scope.doNotMatch = 'ERROR';
            } else {
                $scope.doNotMatch = null;
                Auth.changePassword($scope.password).then(function () {
                    $scope.error = null;
                    $scope.success = 'OK';
                })['catch'](function () {
                    $scope.success = null;
                    $scope.error = 'ERROR';
                });
            }
        };
    }]);

/* globals $ */
'use strict';

angular.module('dgdtoolApp')
    .directive('passwordStrengthBar', function () {
        return {
            replace: true,
            restrict: 'E',
            template: '<div id="strength">' +
                '<small translate="global.messages.validate.newpassword.strength">Password strength:</small>' +
                '<ul id="strengthBar">' +
                '<li class="point"></li><li class="point"></li><li class="point"></li><li class="point"></li><li class="point"></li>' +
                '</ul>' +
                '</div>',
            link: function (scope, iElement, attr) {
                var strength = {
                    colors: ['#F00', '#F90', '#FF0', '#9F0', '#0F0'],
                    mesureStrength: function (p) {

                        var _force = 0;
                        var _regex = /[$-/:-?{-~!"^_`\[\]]/g; // "

                        var _lowerLetters = /[a-z]+/.test(p);
                        var _upperLetters = /[A-Z]+/.test(p);
                        var _numbers = /[0-9]+/.test(p);
                        var _symbols = _regex.test(p);

                        var _flags = [_lowerLetters, _upperLetters, _numbers, _symbols];
                        var _passedMatches = $.grep(_flags, function (el) {
                            return el === true;
                        }).length;

                        _force += 2 * p.length + ((p.length >= 10) ? 1 : 0);
                        _force += _passedMatches * 10;

                        // penality (short password)
                        _force = (p.length <= 6) ? Math.min(_force, 10) : _force;

                        // penality (poor variety of characters)
                        _force = (_passedMatches === 1) ? Math.min(_force, 10) : _force;
                        _force = (_passedMatches === 2) ? Math.min(_force, 20) : _force;
                        _force = (_passedMatches === 3) ? Math.min(_force, 40) : _force;

                        return _force;

                    },
                    getColor: function (s) {

                        var idx = 0;
                        if (s <= 10) {
                            idx = 0;
                        }
                        else if (s <= 20) {
                            idx = 1;
                        }
                        else if (s <= 30) {
                            idx = 2;
                        }
                        else if (s <= 40) {
                            idx = 3;
                        }
                        else {
                            idx = 4;
                        }

                        return { idx: idx + 1, col: this.colors[idx] };
                    }
                };
                scope.$watch(attr.passwordToCheck, function (password) {
                    if (password) {
                        var c = strength.getColor(strength.mesureStrength(password));
                        iElement.removeClass('ng-hide');
                        iElement.find('ul').children('li')
                            .css({ 'background': '#DDD' })
                            .slice(0, c.idx)
                            .css({ 'background': c.col });
                    }
                });
            }
        };
    });

'use strict';

angular.module('dgdtoolApp')
    .config(["$stateProvider", function ($stateProvider) {
        $stateProvider
            .state('register', {
                parent: 'account',
                url: '/register',
                data: {
                    authorities: [],
                    pageTitle: 'register.title'
                },
                views: {
                    'content@': {
                        templateUrl: 'scripts/app/account/register/register.html',
                        controller: 'RegisterController'
                    }
                },
                resolve: {
                    translatePartialLoader: ['$translate', '$translatePartialLoader', function ($translate, $translatePartialLoader) {
                        $translatePartialLoader.addPart('register');
                        return $translate.refresh();
                    }]
                }
            });
    }]);

'use strict';

angular.module('dgdtoolApp')
    .controller('RegisterController', ["$scope", "$translate", "$timeout", "Auth", function ($scope, $translate, $timeout, Auth) {
        $scope.success = null;
        $scope.error = null;
        $scope.doNotMatch = null;
        $scope.errorUserExists = null;
        $scope.registerAccount = {};
        $timeout(function (){angular.element('[ng-model="registerAccount.login"]').focus();});

        $scope.register = function () {
            if ($scope.registerAccount.password !== $scope.confirmPassword) {
                $scope.doNotMatch = 'ERROR';
            } else {
                $scope.registerAccount.langKey = $translate.use();
                $scope.doNotMatch = null;
                $scope.error = null;
                $scope.errorUserExists = null;
                $scope.errorEmailExists = null;

                Auth.createAccount($scope.registerAccount).then(function () {
                    $scope.success = 'OK';
                })['catch'](function (response) {
                    $scope.success = null;
                    if (response.status === 400 && response.data === 'login already in use') {
                        $scope.errorUserExists = 'ERROR';
                    } else if (response.status === 400 && response.data === 'e-mail address already in use') {
                        $scope.errorEmailExists = 'ERROR';
                    } else {
                        $scope.error = 'ERROR';
                    }
                });
            }
        };
    }]);

'use strict';

angular.module('dgdtoolApp')
    .config(["$stateProvider", function ($stateProvider) {
        $stateProvider
            .state('settings', {
                parent: 'account',
                url: '/settings',
                data: {
                    authorities: ['ROLE_USER'],
                    pageTitle: 'global.menu.account.settings'
                },
                views: {
                    'content@': {
                        templateUrl: 'scripts/app/account/settings/settings.html',
                        controller: 'SettingsController'
                    }
                },
                resolve: {
                    translatePartialLoader: ['$translate', '$translatePartialLoader', function ($translate, $translatePartialLoader) {
                        $translatePartialLoader.addPart('settings');
                        return $translate.refresh();
                    }]
                }
            });
    }]);

'use strict';

angular.module('dgdtoolApp')
    .controller('SettingsController', ["$scope", "Principal", "Auth", "Language", "$translate", function ($scope, Principal, Auth, Language, $translate) {
        $scope.success = null;
        $scope.error = null;
        Principal.identity(true).then(function(account) {
            $scope.settingsAccount = account;
        });

        $scope.save = function () {
            Auth.updateAccount($scope.settingsAccount).then(function() {
                $scope.error = null;
                $scope.success = 'OK';
                Principal.identity().then(function(account) {
                    $scope.settingsAccount = account;
                });
                Language.getCurrent().then(function(current) {
                    if ($scope.settingsAccount.langKey !== current) {
                        $translate.use($scope.settingsAccount.langKey);
                    }
                });
            })['catch'](function() {
                $scope.success = null;
                $scope.error = 'ERROR';
            });
        };
    }]);

'use strict';

angular.module('dgdtoolApp')
    .controller('ResetFinishController', ["$scope", "$stateParams", "$timeout", "Auth", function ($scope, $stateParams, $timeout, Auth) {

        $scope.keyMissing = $stateParams.key === undefined;
        $scope.doNotMatch = null;

        $scope.resetAccount = {};
        $timeout(function (){angular.element('[ng-model="resetAccount.password"]').focus();});

        $scope.finishReset = function() {
            if ($scope.resetAccount.password !== $scope.confirmPassword) {
                $scope.doNotMatch = 'ERROR';
            } else {
                Auth.resetPasswordFinish({key: $stateParams.key, newPassword: $scope.resetAccount.password}).then(function () {
                    $scope.success = 'OK';
                })['catch'](function (response) {
                    $scope.success = null;
                    $scope.error = 'ERROR';

                });
            }

        };
    }]);

'use strict';

angular.module('dgdtoolApp')
    .config(["$stateProvider", function ($stateProvider) {
        $stateProvider
            .state('finishReset', {
                parent: 'account',
                url: '/reset/finish?key',
                data: {
                    authorities: []
                },
                views: {
                    'content@': {
                        templateUrl: 'scripts/app/account/reset/finish/reset.finish.html',
                        controller: 'ResetFinishController'
                    }
                },
                resolve: {
                    translatePartialLoader: ['$translate', '$translatePartialLoader', function ($translate, $translatePartialLoader) {
                        $translatePartialLoader.addPart('reset');
                        return $translate.refresh();
                    }]
                }
            });
    }]);

'use strict';

angular.module('dgdtoolApp')
    .controller('RequestResetController', ["$rootScope", "$scope", "$state", "$timeout", "Auth", function ($rootScope, $scope, $state, $timeout, Auth) {

        $scope.success = null;
        $scope.error = null;
        $scope.errorEmailNotExists = null;
        $scope.resetAccount = {};
        $timeout(function (){angular.element('[ng-model="resetAccount.email"]').focus();});

        $scope.requestReset = function () {

            $scope.error = null;
            $scope.errorEmailNotExists = null;

            Auth.resetPasswordInit($scope.resetAccount.email).then(function () {
                $scope.success = 'OK';
            })['catch'](function (response) {
                $scope.success = null;
                if (response.status === 400 && response.data === 'e-mail address not registered') {
                    $scope.errorEmailNotExists = 'ERROR';
                } else {
                    $scope.error = 'ERROR';
                }
            });
        }

    }]);

'use strict';

angular.module('dgdtoolApp')
    .config(["$stateProvider", function ($stateProvider) {
        $stateProvider
            .state('requestReset', {
                parent: 'account',
                url: '/reset/request',
                data: {
                    authorities: []
                },
                views: {
                    'content@': {
                        templateUrl: 'scripts/app/account/reset/request/reset.request.html',
                        controller: 'RequestResetController'
                    }
                },
                resolve: {
                    translatePartialLoader: ['$translate', '$translatePartialLoader', function ($translate, $translatePartialLoader) {
                        $translatePartialLoader.addPart('reset');
                        return $translate.refresh();
                    }]
                }
            });
    }]);

'use strict';

angular.module('dgdtoolApp')
    .config(["$stateProvider", function ($stateProvider) {
        $stateProvider
            .state('admin', {
                abstract: true,
                parent: 'site'
            });
    }]);

'use strict';

angular.module('dgdtoolApp')
    .config(["$stateProvider", function ($stateProvider) {
        $stateProvider
            .state('audits', {
                parent: 'admin',
                url: '/audits',
                data: {
                    authorities: ['ROLE_ADMIN'],
                    pageTitle: 'audits.title'
                },
                views: {
                    'content@': {
                        templateUrl: 'scripts/app/admin/audits/audits.html',
                        controller: 'AuditsController'
                    }
                },
                resolve: {
                    translatePartialLoader: ['$translate', '$translatePartialLoader', function ($translate, $translatePartialLoader) {
                        $translatePartialLoader.addPart('audits');
                        return $translate.refresh();
                    }]
                }
            });
    }]);

'use strict';

angular.module('dgdtoolApp')
    .controller('AuditsController', ["$scope", "$filter", "AuditsService", function ($scope, $filter, AuditsService) {
        $scope.onChangeDate = function () {
            var dateFormat = 'yyyy-MM-dd';
            var fromDate = $filter('date')($scope.fromDate, dateFormat);
            var toDate = $filter('date')($scope.toDate, dateFormat);

            AuditsService.findByDates(fromDate, toDate).then(function (data) {
                $scope.audits = data;
            });
        };

        // Date picker configuration
        $scope.today = function () {
            // Today + 1 day - needed if the current day must be included
            var today = new Date();
            $scope.toDate = new Date(today.getFullYear(), today.getMonth(), today.getDate() + 1);
        };

        $scope.previousMonth = function () {
            var fromDate = new Date();
            if (fromDate.getMonth() === 0) {
                fromDate = new Date(fromDate.getFullYear() - 1, 0, fromDate.getDate());
            } else {
                fromDate = new Date(fromDate.getFullYear(), fromDate.getMonth() - 1, fromDate.getDate());
            }

            $scope.fromDate = fromDate;
        };

        $scope.today();
        $scope.previousMonth();
        $scope.onChangeDate();
    }]);

'use strict';

angular.module('dgdtoolApp')
    .config(["$stateProvider", function ($stateProvider) {
        $stateProvider
            .state('configuration', {
                parent: 'admin',
                url: '/configuration',
                data: {
                    authorities: ['ROLE_ADMIN'],
                    pageTitle: 'configuration.title'
                },
                views: {
                    'content@': {
                        templateUrl: 'scripts/app/admin/configuration/configuration.html',
                        controller: 'ConfigurationController'
                    }
                },
                resolve: {
                    translatePartialLoader: ['$translate', '$translatePartialLoader', function ($translate, $translatePartialLoader) {
                        $translatePartialLoader.addPart('configuration');
                        return $translate.refresh();
                    }]
                }
            });
    }]);

'use strict';

angular.module('dgdtoolApp')
    .controller('ConfigurationController', ["$scope", "ConfigurationService", function ($scope, ConfigurationService) {
        ConfigurationService.get().then(function(configuration) {
            $scope.configuration = configuration;
        });
    }]);

'use strict';

angular.module('dgdtoolApp')
    .config(["$stateProvider", function ($stateProvider) {
        $stateProvider
            .state('docs', {
                parent: 'admin',
                url: '/docs',
                data: {
                    authorities: ['ROLE_ADMIN'],
                    pageTitle: 'global.menu.admin.apidocs'
                },
                views: {
                    'content@': {
                        templateUrl: 'scripts/app/admin/docs/docs.html'
                    }
                },
                resolve: {
                    translatePartialLoader: ['$translate', function ($translate) {
                        return $translate.refresh();
                    }]
                }
            });
    }]);

'use strict';

angular.module('dgdtoolApp')
    .config(["$stateProvider", function ($stateProvider) {
        $stateProvider
            .state('health', {
                parent: 'admin',
                url: '/health',
                data: {
                    authorities: ['ROLE_ADMIN'],
                    pageTitle: 'health.title'
                },
                views: {
                    'content@': {
                        templateUrl: 'scripts/app/admin/health/health.html',
                        controller: 'HealthController'
                    }
                },
                resolve: {
                    translatePartialLoader: ['$translate', '$translatePartialLoader', function ($translate, $translatePartialLoader) {
                        $translatePartialLoader.addPart('health');
                        return $translate.refresh();
                    }]
                }
            });
    }]);

'use strict';

angular.module('dgdtoolApp')
    .controller('HealthController', ["$scope", "MonitoringService", "$modal", function ($scope, MonitoringService, $modal) {
        $scope.updatingHealth = true;
        $scope.separator = '.';

        $scope.refresh = function () {
            $scope.updatingHealth = true;
            MonitoringService.checkHealth().then(function (response) {
                $scope.healthData = $scope.transformHealthData(response);
                $scope.updatingHealth = false;
            }, function (response) {
                $scope.healthData =  $scope.transformHealthData(response.data);
                $scope.updatingHealth = false;
            });
        };

        $scope.refresh();

        $scope.getLabelClass = function (statusState) {
            if (statusState === 'UP') {
                return 'label-success';
            } else {
                return 'label-danger';
            }
        };

        $scope.transformHealthData = function (data) {
            var response = [];
            $scope.flattenHealthData(response, null, data);
            return response;
        };

        $scope.flattenHealthData = function (result, path, data) {
            angular.forEach(data, function (value, key) {
                if ($scope.isHealthObject(value)) {
                    if ($scope.hasSubSystem(value)) {
                        $scope.addHealthObject(result, false, value, $scope.getModuleName(path, key));
                        $scope.flattenHealthData(result, $scope.getModuleName(path, key), value);
                    } else {
                        $scope.addHealthObject(result, true, value, $scope.getModuleName(path, key));
                    }
                }
            });
            return result;
        };

        $scope.getModuleName = function (path, name) {
            var result;
            if (path && name) {
                result = path + $scope.separator + name;
            }  else if (path) {
                result = path;
            } else if (name) {
                result = name;
            } else {
                result = '';
            }
            return result;
        };


        $scope.showHealth = function(health) {
            var modalInstance = $modal.open({
                templateUrl: 'scripts/app/admin/health/health.modal.html',
                controller: 'HealthModalController',
                size: 'lg',
                resolve: {
                    currentHealth: function() {
                        return health;
                    },
                    baseName: function() {
                        return $scope.baseName;
                    },
                    subSystemName: function() {
                        return $scope.subSystemName;
                    }

                }
            });
        };

        $scope.addHealthObject = function (result, isLeaf, healthObject, name) {

            var healthData = {
                'name': name
            };
            var details = {};
            var hasDetails = false;

            angular.forEach(healthObject, function (value, key) {
                if (key === 'status' || key === 'error') {
                    healthData[key] = value;
                } else {
                    if (!$scope.isHealthObject(value)) {
                        details[key] = value;
                        hasDetails = true;
                    }
                }
            });

            // Add the of the details
            if (hasDetails) {
                angular.extend(healthData, { 'details': details});
            }

            // Only add nodes if they provide additional information
            if (isLeaf || hasDetails || healthData.error) {
                result.push(healthData);
            }
            return healthData;
        };

        $scope.hasSubSystem = function (healthObject) {
            var result = false;
            angular.forEach(healthObject, function (value) {
                if (value && value.status) {
                    result = true;
                }
            });
            return result;
        };

        $scope.isHealthObject = function (healthObject) {
            var result = false;
            angular.forEach(healthObject, function (value, key) {
                if (key === 'status') {
                    result = true;
                }
            });
            return result;
        };

        $scope.baseName = function (name) {
            if (name) {
              var split = name.split('.');
              return split[0];
            }
        };

        $scope.subSystemName = function (name) {
            if (name) {
              var split = name.split('.');
              split.splice(0, 1);
              var remainder = split.join('.');
              return remainder ? ' - ' + remainder : '';
            }
        };
    }]);

'use strict';

angular.module('dgdtoolApp')
    .controller('HealthModalController', ["$scope", "$modalInstance", "currentHealth", "baseName", "subSystemName", function($scope, $modalInstance, currentHealth, baseName, subSystemName) {

        $scope.currentHealth = currentHealth;
        $scope.baseName = baseName, $scope.subSystemName = subSystemName;

        $scope.cancel = function() {
            $modalInstance.dismiss('cancel');
        };
    }]);

'use strict';

angular.module('dgdtoolApp')
    .config(["$stateProvider", function ($stateProvider) {
        $stateProvider
            .state('logs', {
                parent: 'admin',
                url: '/logs',
                data: {
                    authorities: ['ROLE_ADMIN'],
                    pageTitle: 'logs.title'
                },
                views: {
                    'content@': {
                        templateUrl: 'scripts/app/admin/logs/logs.html',
                        controller: 'LogsController'
                    }
                },
                resolve: {
                    translatePartialLoader: ['$translate', '$translatePartialLoader', function ($translate, $translatePartialLoader) {
                        $translatePartialLoader.addPart('logs');
                        return $translate.refresh();
                    }]
                }
            });
    }]);

'use strict';

angular.module('dgdtoolApp')
    .controller('LogsController', ["$scope", "LogsService", function ($scope, LogsService) {
        $scope.loggers = LogsService.findAll();

        $scope.changeLevel = function (name, level) {
            LogsService.changeLevel({name: name, level: level}, function () {
                $scope.loggers = LogsService.findAll();
            });
        };
    }]);

'use strict';

angular.module('dgdtoolApp')
    .config(["$stateProvider", function ($stateProvider) {
        $stateProvider
            .state('metrics', {
                parent: 'admin',
                url: '/metrics',
                data: {
                    authorities: ['ROLE_ADMIN'],
                    pageTitle: 'metrics.title'
                },
                views: {
                    'content@': {
                        templateUrl: 'scripts/app/admin/metrics/metrics.html',
                        controller: 'MetricsController'
                    }
                },
                resolve: {
                    translatePartialLoader: ['$translate', '$translatePartialLoader', function ($translate, $translatePartialLoader) {
                        $translatePartialLoader.addPart('metrics');
                        return $translate.refresh();
                    }]
                }
            });
    }]);

'use strict';

angular.module('dgdtoolApp')
    .controller('MetricsController', ["$scope", "MonitoringService", "$modal", function ($scope, MonitoringService, $modal) {
        $scope.metrics = {};
        $scope.updatingMetrics = true;

        $scope.refresh = function () {
            $scope.updatingMetrics = true;
            MonitoringService.getMetrics().then(function (promise) {
                $scope.metrics = promise;
                $scope.updatingMetrics = false;
            }, function (promise) {
                $scope.metrics = promise.data;
                $scope.updatingMetrics = false;
            });
        };

        $scope.$watch('metrics', function (newValue) {
            $scope.servicesStats = {};
            $scope.cachesStats = {};
            angular.forEach(newValue.timers, function (value, key) {
                if (key.indexOf('web.rest') !== -1 || key.indexOf('service') !== -1) {
                    $scope.servicesStats[key] = value;
                }
                if (key.indexOf('net.sf.ehcache.Cache') !== -1) {
                    // remove gets or puts
                    var index = key.lastIndexOf('.');
                    var newKey = key.substr(0, index);

                    // Keep the name of the domain
                    index = newKey.lastIndexOf('.');
                    $scope.cachesStats[newKey] = {
                        'name': newKey.substr(index + 1),
                        'value': value
                    };
                }
            });
        });

        $scope.refresh();

        $scope.refreshThreadDumpData = function() {
            MonitoringService.threadDump().then(function(data) {

                var modalInstance = $modal.open({
                    templateUrl: 'scripts/app/admin/metrics/metrics.modal.html',
                    controller: 'MetricsModalController',
                    size: 'lg',
                    resolve: {
                        threadDump: function() {
                            return data;
                        }

                    }
                });
            });
        };
    }]);

'use strict';

angular.module('dgdtoolApp')
    .controller('MetricsModalController', ["$scope", "$modalInstance", "threadDump", function($scope, $modalInstance, threadDump) {

        $scope.threadDump = threadDump;
        $scope.threadDumpRunnable = 0;
        $scope.threadDumpWaiting = 0;
        $scope.threadDumpTimedWaiting = 0;
        $scope.threadDumpBlocked = 0;

        angular.forEach(threadDump, function(value) {
            if (value.threadState === 'RUNNABLE') {
                $scope.threadDumpRunnable += 1;
            } else if (value.threadState === 'WAITING') {
                $scope.threadDumpWaiting += 1;
            } else if (value.threadState === 'TIMED_WAITING') {
                $scope.threadDumpTimedWaiting += 1;
            } else if (value.threadState === 'BLOCKED') {
                $scope.threadDumpBlocked += 1;
            }
        });

        $scope.threadDumpAll = $scope.threadDumpRunnable + $scope.threadDumpWaiting +
            $scope.threadDumpTimedWaiting + $scope.threadDumpBlocked;

        $scope.cancel = function() {
            $modalInstance.dismiss('cancel');
        };

        $scope.getLabelClass = function (threadState) {
            if (threadState === 'RUNNABLE') {
                return 'label-success';
            } else if (threadState === 'WAITING') {
                return 'label-info';
            } else if (threadState === 'TIMED_WAITING') {
                return 'label-warning';
            } else if (threadState === 'BLOCKED') {
                return 'label-danger';
            }
        };
    }]);

'use strict';

angular.module('dgdtoolApp')
    .controller('UserManagementDetailController', ["$scope", "$stateParams", "User", function ($scope, $stateParams, User) {
        $scope.user = {};
        $scope.load = function (login) {
            User.get({login: login}, function(result) {
                $scope.user = result;
            });
        };
        $scope.load($stateParams.login);
    }]);

'use strict';

angular.module('dgdtoolApp')
    .controller('UserManagementController', ["$scope", "User", "ParseLinks", "Language", function ($scope, User, ParseLinks, Language) {
        $scope.users = [];
        $scope.authorities = ["ROLE_USER", "ROLE_ADMIN"];
        Language.getAll().then(function (languages) {
            $scope.languages = languages;
        });

        $scope.page = 0;
        $scope.loadAll = function () {
            User.query({page: $scope.page, per_page: 20}, function (result, headers) {
                $scope.links = ParseLinks.parse(headers('link'));
                $scope.users = result;
            });
        };

        $scope.loadPage = function (page) {
            $scope.page = page;
            $scope.loadAll();
        };
        $scope.loadAll();

        $scope.setActive = function (user, isActivated) {
            user.activated = isActivated;
            User.update(user, function () {
                $scope.loadAll();
                $scope.clear();
            });
        };

        $scope.showUpdate = function (login) {
            User.get({login: login}, function (result) {
                $scope.user = result;
                $('#saveUserModal').modal('show');
            });
        };

        $scope.save = function () {
            User.update($scope.user,
                function () {
                    $scope.refresh();
                });
        };

        $scope.refresh = function () {
            $scope.loadAll();
            $('#saveUserModal').modal('hide');
            $scope.clear();
        };

        $scope.clear = function () {
            $scope.user = {
                id: null, login: null, firstName: null, lastName: null, email: null,
                activated: null, langKey: null, createdBy: null, createdDate: null,
                lastModifiedBy: null, lastModifiedDate: null, resetDate: null,
                resetKey: null, authorities: null
            };
            $scope.editForm.$setPristine();
            $scope.editForm.$setUntouched();
        };
    }]);

'use strict';

angular.module('dgdtoolApp')
    .config(["$stateProvider", function ($stateProvider) {
        $stateProvider
            .state('user-management', {
                parent: 'admin',
                url: '/user-management',
                data: {
                    authorities: ['ROLE_ADMIN'],
                    pageTitle: 'user-management.home.title'
                },
                views: {
                    'content@': {
                        templateUrl: 'scripts/app/admin/user-management/user-management.html',
                        controller: 'UserManagementController'
                    }
                },
                resolve: {
                    translatePartialLoader: ['$translate', '$translatePartialLoader', function ($translate, $translatePartialLoader) {
                        $translatePartialLoader.addPart('user.management');
                        return $translate.refresh();
                    }]
                }
            })
            .state('user-management-detail', {
                parent: 'admin',
                url: '/user-management/:login',
                data: {
                    authorities: ['ROLE_ADMIN'],
                    pageTitle: 'user-management.detail.title'
                },
                views: {
                    'content@': {
                        templateUrl: 'scripts/app/admin/user-management/user-management-detail.html',
                        controller: 'UserManagementDetailController'
                    }
                },
                resolve: {
                    translatePartialLoader: ['$translate', '$translatePartialLoader', function ($translate, $translatePartialLoader) {
                        $translatePartialLoader.addPart('user.management');
                        return $translate.refresh();
                    }]
                }
            });
    }]);

'use strict';

angular.module('dgdtoolApp')
    .config(["$stateProvider", function ($stateProvider) {
        $stateProvider
            .state('entity', {
                abstract: true,
                parent: 'site'
            });
    }]);

'use strict';

angular.module('dgdtoolApp')
    .config(["$stateProvider", function ($stateProvider) {
        $stateProvider
            .state('error', {
                parent: 'site',
                url: '/error',
                data: {
                    authorities: [],
                    pageTitle: 'error.title'
                },
                views: {
                    'content@': {
                        templateUrl: 'scripts/app/error/error.html'
                    }
                },
                resolve: {
                    mainTranslatePartialLoader: ['$translate', '$translatePartialLoader', function ($translate,$translatePartialLoader) {
                        $translatePartialLoader.addPart('error');
                        return $translate.refresh();
                    }]
                }
            })
            .state('accessdenied', {
                parent: 'site',
                url: '/accessdenied',
                data: {
                    authorities: []
                },
                views: {
                    'content@': {
                        templateUrl: 'scripts/app/error/accessdenied.html'
                    }
                },
                resolve: {
                    mainTranslatePartialLoader: ['$translate', '$translatePartialLoader', function ($translate,$translatePartialLoader) {
                        $translatePartialLoader.addPart('error');
                        return $translate.refresh();
                    }]
                }
            });
    }]);

'use strict';

angular.module('dgdtoolApp')
    .config(["$stateProvider", function ($stateProvider) {
        $stateProvider
            .state('home', {
                parent: 'site',
                url: '/',
                data: {
                    authorities: []
                },
                views: {
                    'content@': {
                        templateUrl: 'scripts/app/main/main.html',
                        controller: 'MainController'
                    }
                },
                resolve: {
                    mainTranslatePartialLoader: ['$translate', '$translatePartialLoader', function ($translate,$translatePartialLoader) {
                        $translatePartialLoader.addPart('main');
                        return $translate.refresh();
                    }]
                }
            });
    }]);

'use strict';

angular.module('dgdtoolApp')
    .controller('MainController', ["$scope", "Principal", function ($scope, Principal) {
        Principal.identity().then(function(account) {
            $scope.account = account;
            $scope.isAuthenticated = Principal.isAuthenticated;
        });
    }]);

MessageFormat.locale.en=function(n){return n===1?"one":"other"}

MessageFormat.locale.fr=function(n){return n===0||n==1?"one":"other"}

'use strict';

angular.module('dgdtoolApp')
    .factory('Language', ["$q", "$http", "$translate", "LANGUAGES", function ($q, $http, $translate, LANGUAGES) {
        return {
            getCurrent: function () {
                var deferred = $q.defer();
                var language = $translate.storage().get('NG_TRANSLATE_LANG_KEY');

                if (angular.isUndefined(language)) {
                    language = 'en';
                }

                deferred.resolve(language);
                return deferred.promise;
            },
            getAll: function () {
                var deferred = $q.defer();
                deferred.resolve(LANGUAGES);
                return deferred.promise;
            }
        };
    }])

/*
 Languages codes are ISO_639-1 codes, see http://en.wikipedia.org/wiki/List_of_ISO_639-1_codes
 They are written in English to avoid character encoding issues (not a perfect solution)
 */
    .constant('LANGUAGES', [
        'en', 'fr'
        //JHipster will add new languages here
    ]
);





'use strict';

angular.module('dgdtoolApp')
    .controller('LanguageController', ["$scope", "$translate", "Language", "tmhDynamicLocale", function ($scope, $translate, Language, tmhDynamicLocale) {
        $scope.changeLanguage = function (languageKey) {
            $translate.use(languageKey);
            tmhDynamicLocale.set(languageKey);
        };

        Language.getAll().then(function (languages) {
            $scope.languages = languages;
        });
    }])
    .filter('findLanguageFromKey', function () {
        return function (lang) {
            return {
                "ca": "Català",
                "da": "Dansk",
                "de": "Deutsch",
                "en": "English",
                "es": "Español",
                "fr": "Français",
                "hu": "Magyar",
                "it": "Italiano",
                "ja": "日本語",
                "ko": "한국어",
                "nl": "Nederlands",
                "pl": "Polski",
                "pt-br": "Português (Brasil)",
                "pt-pt": "Português",
                "ro": "Română",
                "ru": "Русский",
                "sv": "Svenska",
                "tr": "Türkçe",
                "zh-cn": "中文（简体）",
                "zh-tw": "繁體中文"
            }[lang];
        }
    });

'use strict';

angular.module('dgdtoolApp')
    .directive('jhSocial', ["$translatePartialLoader", "$translate", "$filter", "SocialService", function($translatePartialLoader, $translate, $filter, SocialService) {
        return {
            restrict: 'E',
            scope: {
                provider: "@ngProvider"
            },
            templateUrl: 'scripts/app/account/social/directive/social.html',
            link: function(scope, element, attrs) {
                $translatePartialLoader.addPart('social');
                $translate.refresh();

                scope.label = $filter('capitalize')(scope.provider);
                scope.providerSetting = SocialService.getProviderSetting(scope.provider);
                scope.providerURL = SocialService.getProviderURL(scope.provider);
                scope.csrf = SocialService.getCSRF();
            }
        }
     }]);

'use strict';

angular.module('dgdtoolApp')
    .config(["$stateProvider", function ($stateProvider) {
        $stateProvider
            .state('social-register', {
                parent: 'account',
                url: '/social-register/:provider?{success:boolean}',
                data: {
                    authorities: [],
                    pageTitle: 'social.register.title'
                },
                views: {
                    'content@': {
                        templateUrl: 'scripts/app/account/social/social-register.html',
                        controller: 'SocialRegisterController'
                    }
                },
                resolve: {
                    translatePartialLoader: ['$translate', '$translatePartialLoader', function ($translate, $translatePartialLoader) {
                        $translatePartialLoader.addPart('social');
                        return $translate.refresh();
                    }]
                }
            });
    }]);

'use strict';

angular.module('dgdtoolApp')
    .controller('SocialRegisterController', ["$scope", "$filter", "$stateParams", function ($scope, $filter, $stateParams) {
        $scope.provider = $stateParams.provider;
        $scope.providerLabel = $filter('capitalize')($scope.provider);
        $scope.success = $stateParams.success;
        $scope.error = !$scope.success;
    }]);

'use strict';

angular.module('dgdtoolApp')
    .factory('SocialService', ["$http", function ($http) {
        var socialService = {};

        socialService.getProviderSetting = function (provider) {
            switch(provider) {
                case 'google': return 'https://www.googleapis.com/auth/userinfo.profile https://www.googleapis.com/auth/userinfo.email';
                case 'facebook': return 'public_profile,email';
                case 'twitter': return '';
                default: return 'Provider setting not defined';
            }
        };

        socialService.getProviderURL = function (provider) {
            return 'signin/' + provider;
        };

        socialService.getCSRF = function () {
            var name = "CSRF-TOKEN=";
            var ca = document.cookie.split(';');
            for (var i = 0; i < ca.length; i++) {
                var c = ca[i];
                while (c.charAt(0) == ' ') c = c.substring(1);
                if (c.indexOf(name) != -1) return c.substring(name.length, c.length);
            }
            return "";
        };

        return socialService;
    }]);

'use strict';

angular.module('dgdtoolApp')
    .factory('Sessions', ["$resource", function ($resource) {
        return $resource('api/account/sessions/:series', {}, {
            'getAll': { method: 'GET', isArray: true}
        });
    }]);




'use strict';

angular.module('dgdtoolApp')
    .factory('AuthServerProvider', ["$http", "localStorageService", "$window", function loginService($http, localStorageService, $window) {
        return {
            login: function(credentials) {
                var data = 'j_username=' + encodeURIComponent(credentials.username) +
                    '&j_password=' + encodeURIComponent(credentials.password) +
                    '&remember-me=' + credentials.rememberMe + '&submit=Login';
                return $http.post('api/authentication', data, {
                    headers: {
                        'Content-Type': 'application/x-www-form-urlencoded'
                    }
                }).success(function (response) {
                    return response;
                });
            },
            logout: function() {
                // logout from the server
                $http.post('api/logout').success(function (response) {
                    localStorageService.clearAll();
                    // to get a new csrf token call the api
                    $http.get('api/account');
                    return response;
                });
            },
            getToken: function () {
                var token = localStorageService.get('token');
                return token;
            },
            hasValidToken: function () {
                var token = this.getToken();
                return !!token;
            }
        };
    }]);

'use strict';

angular.module('dgdtoolApp')
    .config(["$stateProvider", function ($stateProvider) {
        $stateProvider
            .state('sessions', {
                parent: 'account',
                url: '/sessions',
                data: {
                    authorities: ['ROLE_USER'],
                    pageTitle: 'global.menu.account.sessions'
                },
                views: {
                    'content@': {
                        templateUrl: 'scripts/app/account/sessions/sessions.html',
                        controller: 'SessionsController'
                    }
                },
                resolve: {
                    translatePartialLoader: ['$translate', '$translatePartialLoader', function ($translate, $translatePartialLoader) {
                        $translatePartialLoader.addPart('sessions');
                        return $translate.refresh();
                    }]
                }
            });
    }]);

'use strict';

angular.module('dgdtoolApp')
    .controller('SessionsController', ["$scope", "Sessions", "Principal", function ($scope, Sessions, Principal) {
        Principal.identity().then(function(account) {
            $scope.account = account;
        });

        $scope.success = null;
        $scope.error = null;
        $scope.sessions = Sessions.getAll();
        $scope.invalidate = function (series) {
            Sessions['delete']({series: encodeURIComponent(series)},
                function () {
                    $scope.error = null;
                    $scope.success = 'OK';
                    $scope.sessions = Sessions.getAll();
                },
                function () {
                    $scope.success = null;
                    $scope.error = 'ERROR';
                });
        };
    }]);

'use strict';

angular.module('dgdtoolApp')
    .config(["$stateProvider", function ($stateProvider) {
        $stateProvider
            .state('status_type', {
                parent: 'entity',
                url: '/status_types',
                data: {
                    authorities: ['ROLE_USER'],
                    pageTitle: 'dgdtoolApp.status_type.home.title'
                },
                views: {
                    'content@': {
                        templateUrl: 'scripts/app/entities/status_type/status_types.html',
                        controller: 'Status_typeController'
                    }
                },
                resolve: {
                    translatePartialLoader: ['$translate', '$translatePartialLoader', function ($translate, $translatePartialLoader) {
                        $translatePartialLoader.addPart('status_type');
                        $translatePartialLoader.addPart('global');
                        return $translate.refresh();
                    }]
                }
            })
            .state('status_type.detail', {
                parent: 'entity',
                url: '/status_type/{id}',
                data: {
                    authorities: ['ROLE_USER'],
                    pageTitle: 'dgdtoolApp.status_type.detail.title'
                },
                views: {
                    'content@': {
                        templateUrl: 'scripts/app/entities/status_type/status_type-detail.html',
                        controller: 'Status_typeDetailController'
                    }
                },
                resolve: {
                    translatePartialLoader: ['$translate', '$translatePartialLoader', function ($translate, $translatePartialLoader) {
                        $translatePartialLoader.addPart('status_type');
                        return $translate.refresh();
                    }],
                    entity: ['$stateParams', 'Status_type', function($stateParams, Status_type) {
                        return Status_type.get({id : $stateParams.id});
                    }]
                }
            })
            .state('status_type.new', {
                parent: 'status_type',
                url: '/new',
                data: {
                    authorities: ['ROLE_USER'],
                },
                onEnter: ['$stateParams', '$state', '$modal', function($stateParams, $state, $modal) {
                    $modal.open({
                        templateUrl: 'scripts/app/entities/status_type/status_type-dialog.html',
                        controller: 'Status_typeDialogController',
                        size: 'lg',
                        resolve: {
                            entity: function () {
                                return {
                                    status_type_name: null,
                                    description: null,
                                    created_by: null,
                                    created_date: null,
                                    modified_by: null,
                                    modified_date: null,
                                    id: null
                                };
                            }
                        }
                    }).result.then(function(result) {
                        $state.go('status_type', null, { reload: true });
                    }, function() {
                        $state.go('status_type');
                    })
                }]
            })
            .state('status_type.edit', {
                parent: 'status_type',
                url: '/{id}/edit',
                data: {
                    authorities: ['ROLE_USER'],
                },
                onEnter: ['$stateParams', '$state', '$modal', function($stateParams, $state, $modal) {
                    $modal.open({
                        templateUrl: 'scripts/app/entities/status_type/status_type-dialog.html',
                        controller: 'Status_typeDialogController',
                        size: 'lg',
                        resolve: {
                            entity: ['Status_type', function(Status_type) {
                                return Status_type.get({id : $stateParams.id});
                            }]
                        }
                    }).result.then(function(result) {
                        $state.go('status_type', null, { reload: true });
                    }, function() {
                        $state.go('^');
                    })
                }]
            });
    }]);

'use strict';

angular.module('dgdtoolApp')
    .controller('Status_typeController', ["$scope", "Status_type", "Status_typeSearch", "ParseLinks", function ($scope, Status_type, Status_typeSearch, ParseLinks) {
        $scope.status_types = [];
        $scope.page = 0;
        $scope.loadAll = function() {
            Status_type.query({page: $scope.page, size: 20}, function(result, headers) {
                $scope.links = ParseLinks.parse(headers('link'));
                $scope.status_types = result;
            });
        };
        $scope.loadPage = function(page) {
            $scope.page = page;
            $scope.loadAll();
        };
        $scope.loadAll();

        $scope['delete'] = function (id) {
            Status_type.get({id: id}, function(result) {
                $scope.status_type = result;
                $('#deleteStatus_typeConfirmation').modal('show');
            });
        };

        $scope.confirmDelete = function (id) {
            Status_type['delete']({id: id},
                function () {
                    $scope.loadAll();
                    $('#deleteStatus_typeConfirmation').modal('hide');
                    $scope.clear();
                });
        };

        $scope.search = function () {
            Status_typeSearch.query({query: $scope.searchQuery}, function(result) {
                $scope.status_types = result;
            }, function(response) {
                if(response.status === 404) {
                    $scope.loadAll();
                }
            });
        };

        $scope.refresh = function () {
            $scope.loadAll();
            $scope.clear();
        };

        $scope.clear = function () {
            $scope.status_type = {
                status_type_name: null,
                description: null,
                created_by: null,
                created_date: null,
                modified_by: null,
                modified_date: null,
                id: null
            };
        };
    }]);

'use strict';

angular.module('dgdtoolApp').controller('Status_typeDialogController',
    ['$scope', '$stateParams', '$modalInstance', 'entity', 'Status_type',
        function($scope, $stateParams, $modalInstance, entity, Status_type) {

        $scope.status_type = entity;
        $scope.load = function(id) {
            Status_type.get({id : id}, function(result) {
                $scope.status_type = result;
            });
        };

        var onSaveFinished = function (result) {
            $scope.$emit('dgdtoolApp:status_typeUpdate', result);
            $modalInstance.close(result);
        };

        $scope.save = function () {
            if ($scope.status_type.id != null) {
                Status_type.update($scope.status_type, onSaveFinished);
            } else {
                Status_type.save($scope.status_type, onSaveFinished);
            }
        };

        $scope.clear = function() {
            $modalInstance.dismiss('cancel');
        };
}]);

'use strict';

angular.module('dgdtoolApp')
    .controller('Status_typeDetailController', ["$scope", "$rootScope", "$stateParams", "entity", "Status_type", function ($scope, $rootScope, $stateParams, entity, Status_type) {
        $scope.status_type = entity;
        $scope.load = function (id) {
            Status_type.get({id: id}, function(result) {
                $scope.status_type = result;
            });
        };
        var unsubscribe = $rootScope.$on('dgdtoolApp:status_typeUpdate', function(event, result) {
            $scope.status_type = result;
        });
        $scope.$on('$destroy', unsubscribe);

    }]);

'use strict';

angular.module('dgdtoolApp')
    .factory('Status_type', ["$resource", "DateUtils", function ($resource, DateUtils) {
        return $resource('api/status_types/:id', {}, {
            'query': { method: 'GET', isArray: true},
            'get': {
                method: 'GET',
                transformResponse: function (data) {
                    data = angular.fromJson(data);
                    data.created_date = DateUtils.convertLocaleDateFromServer(data.created_date);
                    data.modified_date = DateUtils.convertLocaleDateFromServer(data.modified_date);
                    return data;
                }
            },
            'update': {
                method: 'PUT',
                transformRequest: function (data) {
                    data.created_date = DateUtils.convertLocaleDateToServer(data.created_date);
                    data.modified_date = DateUtils.convertLocaleDateToServer(data.modified_date);
                    return angular.toJson(data);
                }
            },
            'save': {
                method: 'POST',
                transformRequest: function (data) {
                    data.created_date = DateUtils.convertLocaleDateToServer(data.created_date);
                    data.modified_date = DateUtils.convertLocaleDateToServer(data.modified_date);
                    return angular.toJson(data);
                }
            }
        });
    }]);

'use strict';

angular.module('dgdtoolApp')
    .factory('Status_typeSearch', ["$resource", function ($resource) {
        return $resource('api/_search/status_types/:query', {}, {
            'query': { method: 'GET', isArray: true}
        });
    }]);

'use strict';

angular.module('dgdtoolApp')
    .config(["$stateProvider", function ($stateProvider) {
        $stateProvider
            .state('package_type', {
                parent: 'entity',
                url: '/package_types',
                data: {
                    authorities: ['ROLE_USER'],
                    pageTitle: 'dgdtoolApp.package_type.home.title'
                },
                views: {
                    'content@': {
                        templateUrl: 'scripts/app/entities/package_type/package_types.html',
                        controller: 'Package_typeController'
                    }
                },
                resolve: {
                    translatePartialLoader: ['$translate', '$translatePartialLoader', function ($translate, $translatePartialLoader) {
                        $translatePartialLoader.addPart('package_type');
                        $translatePartialLoader.addPart('global');
                        return $translate.refresh();
                    }]
                }
            })
            .state('package_type.detail', {
                parent: 'entity',
                url: '/package_type/{id}',
                data: {
                    authorities: ['ROLE_USER'],
                    pageTitle: 'dgdtoolApp.package_type.detail.title'
                },
                views: {
                    'content@': {
                        templateUrl: 'scripts/app/entities/package_type/package_type-detail.html',
                        controller: 'Package_typeDetailController'
                    }
                },
                resolve: {
                    translatePartialLoader: ['$translate', '$translatePartialLoader', function ($translate, $translatePartialLoader) {
                        $translatePartialLoader.addPart('package_type');
                        return $translate.refresh();
                    }],
                    entity: ['$stateParams', 'Package_type', function($stateParams, Package_type) {
                        return Package_type.get({id : $stateParams.id});
                    }]
                }
            })
            .state('package_type.new', {
                parent: 'package_type',
                url: '/new',
                data: {
                    authorities: ['ROLE_USER'],
                },
                onEnter: ['$stateParams', '$state', '$modal', function($stateParams, $state, $modal) {
                    $modal.open({
                        templateUrl: 'scripts/app/entities/package_type/package_type-dialog.html',
                        controller: 'Package_typeDialogController',
                        size: 'lg',
                        resolve: {
                            entity: function () {
                                return {
                                    package_type_name: null,
                                    description: null,
                                    status_id: null,
                                    created_by: null,
                                    created_date: null,
                                    modified_by: null,
                                    modified_date: null,
                                    id: null
                                };
                            }
                        }
                    }).result.then(function(result) {
                        $state.go('package_type', null, { reload: true });
                    }, function() {
                        $state.go('package_type');
                    })
                }]
            })
            .state('package_type.edit', {
                parent: 'package_type',
                url: '/{id}/edit',
                data: {
                    authorities: ['ROLE_USER'],
                },
                onEnter: ['$stateParams', '$state', '$modal', function($stateParams, $state, $modal) {
                    $modal.open({
                        templateUrl: 'scripts/app/entities/package_type/package_type-dialog.html',
                        controller: 'Package_typeDialogController',
                        size: 'lg',
                        resolve: {
                            entity: ['Package_type', function(Package_type) {
                                return Package_type.get({id : $stateParams.id});
                            }]
                        }
                    }).result.then(function(result) {
                        $state.go('package_type', null, { reload: true });
                    }, function() {
                        $state.go('^');
                    })
                }]
            });
    }]);

'use strict';

angular.module('dgdtoolApp')
    .controller('Package_typeController', ["$scope", "Package_type", "Package_typeSearch", "ParseLinks", function ($scope, Package_type, Package_typeSearch, ParseLinks) {
        $scope.package_types = [];
        $scope.page = 0;
        $scope.loadAll = function() {
            Package_type.query({page: $scope.page, size: 20}, function(result, headers) {
                $scope.links = ParseLinks.parse(headers('link'));
                $scope.package_types = result;
            });
        };
        $scope.loadPage = function(page) {
            $scope.page = page;
            $scope.loadAll();
        };
        $scope.loadAll();

        $scope['delete'] = function (id) {
            Package_type.get({id: id}, function(result) {
                $scope.package_type = result;
                $('#deletePackage_typeConfirmation').modal('show');
            });
        };

        $scope.confirmDelete = function (id) {
            Package_type['delete']({id: id},
                function () {
                    $scope.loadAll();
                    $('#deletePackage_typeConfirmation').modal('hide');
                    $scope.clear();
                });
        };

        $scope.search = function () {
            Package_typeSearch.query({query: $scope.searchQuery}, function(result) {
                $scope.package_types = result;
            }, function(response) {
                if(response.status === 404) {
                    $scope.loadAll();
                }
            });
        };

        $scope.refresh = function () {
            $scope.loadAll();
            $scope.clear();
        };

        $scope.clear = function () {
            $scope.package_type = {
                package_type_name: null,
                description: null,
                status_id: null,
                created_by: null,
                created_date: null,
                modified_by: null,
                modified_date: null,
                id: null
            };
        };
    }]);

'use strict';

angular.module('dgdtoolApp').controller('Package_typeDialogController',
    ['$scope', '$stateParams', '$modalInstance', 'entity', 'Package_type',
        function($scope, $stateParams, $modalInstance, entity, Package_type) {

        $scope.package_type = entity;
        $scope.load = function(id) {
            Package_type.get({id : id}, function(result) {
                $scope.package_type = result;
            });
        };

        var onSaveFinished = function (result) {
            $scope.$emit('dgdtoolApp:package_typeUpdate', result);
            $modalInstance.close(result);
        };

        $scope.save = function () {
            if ($scope.package_type.id != null) {
                Package_type.update($scope.package_type, onSaveFinished);
            } else {
                Package_type.save($scope.package_type, onSaveFinished);
            }
        };

        $scope.clear = function() {
            $modalInstance.dismiss('cancel');
        };
}]);

'use strict';

angular.module('dgdtoolApp')
    .controller('Package_typeDetailController', ["$scope", "$rootScope", "$stateParams", "entity", "Package_type", function ($scope, $rootScope, $stateParams, entity, Package_type) {
        $scope.package_type = entity;
        $scope.load = function (id) {
            Package_type.get({id: id}, function(result) {
                $scope.package_type = result;
            });
        };
        var unsubscribe = $rootScope.$on('dgdtoolApp:package_typeUpdate', function(event, result) {
            $scope.package_type = result;
        });
        $scope.$on('$destroy', unsubscribe);

    }]);

'use strict';

angular.module('dgdtoolApp')
    .factory('Package_type', ["$resource", "DateUtils", function ($resource, DateUtils) {
        return $resource('api/package_types/:id', {}, {
            'query': { method: 'GET', isArray: true},
            'get': {
                method: 'GET',
                transformResponse: function (data) {
                    data = angular.fromJson(data);
                    data.created_date = DateUtils.convertLocaleDateFromServer(data.created_date);
                    data.modified_date = DateUtils.convertLocaleDateFromServer(data.modified_date);
                    return data;
                }
            },
            'update': {
                method: 'PUT',
                transformRequest: function (data) {
                    data.created_date = DateUtils.convertLocaleDateToServer(data.created_date);
                    data.modified_date = DateUtils.convertLocaleDateToServer(data.modified_date);
                    return angular.toJson(data);
                }
            },
            'save': {
                method: 'POST',
                transformRequest: function (data) {
                    data.created_date = DateUtils.convertLocaleDateToServer(data.created_date);
                    data.modified_date = DateUtils.convertLocaleDateToServer(data.modified_date);
                    return angular.toJson(data);
                }
            }
        });
    }]);

'use strict';

angular.module('dgdtoolApp')
    .factory('Package_typeSearch', ["$resource", function ($resource) {
        return $resource('api/_search/package_types/:query', {}, {
            'query': { method: 'GET', isArray: true}
        });
    }]);

'use strict';

angular.module('dgdtoolApp')
    .config(["$stateProvider", function ($stateProvider) {
        $stateProvider
            .state('packages', {
                parent: 'entity',
                url: '/packagess',
                data: {
                    authorities: ['ROLE_USER'],
                    pageTitle: 'dgdtoolApp.packages.home.title'
                },
                views: {
                    'content@': {
                        templateUrl: 'scripts/app/entities/packages/packagess.html',
                        controller: 'PackagesController'
                    }
                },
                resolve: {
                    translatePartialLoader: ['$translate', '$translatePartialLoader', function ($translate, $translatePartialLoader) {
                        $translatePartialLoader.addPart('packages');
                        $translatePartialLoader.addPart('global');
                        return $translate.refresh();
                    }]
                }
            })
            .state('packages.detail', {
                parent: 'entity',
                url: '/packages/{id}',
                data: {
                    authorities: ['ROLE_USER'],
                    pageTitle: 'dgdtoolApp.packages.detail.title'
                },
                views: {
                    'content@': {
                        templateUrl: 'scripts/app/entities/packages/packages-detail.html',
                        controller: 'PackagesDetailController'
                    }
                },
                resolve: {
                    translatePartialLoader: ['$translate', '$translatePartialLoader', function ($translate, $translatePartialLoader) {
                        $translatePartialLoader.addPart('packages');
                        return $translate.refresh();
                    }],
                    entity: ['$stateParams', 'Packages', function($stateParams, Packages) {
                        return Packages.get({id : $stateParams.id});
                    }]
                }
            })
            .state('packages.new', {
                parent: 'packages',
                url: '/new',
                data: {
                    authorities: ['ROLE_USER'],
                },
                onEnter: ['$stateParams', '$state', '$modal', function($stateParams, $state, $modal) {
                    $modal.open({
                        templateUrl: 'scripts/app/entities/packages/packages-dialog.html',
                        controller: 'PackagesDialogController',
                        size: 'lg',
                        resolve: {
                            entity: function () {
                                return {
                                    package_name: null,
                                    package_type_id: null,
                                    description: null,
                                    status_id: null,
                                    created_by: null,
                                    created_date: null,
                                    modified_by: null,
                                    modified_date: null,
                                    id: null
                                };
                            }
                        }
                    }).result.then(function(result) {
                        $state.go('packages', null, { reload: true });
                    }, function() {
                        $state.go('packages');
                    })
                }]
            })
            .state('packages.edit', {
                parent: 'packages',
                url: '/{id}/edit',
                data: {
                    authorities: ['ROLE_USER'],
                },
                onEnter: ['$stateParams', '$state', '$modal', function($stateParams, $state, $modal) {
                    $modal.open({
                        templateUrl: 'scripts/app/entities/packages/packages-dialog.html',
                        controller: 'PackagesDialogController',
                        size: 'lg',
                        resolve: {
                            entity: ['Packages', function(Packages) {
                                return Packages.get({id : $stateParams.id});
                            }]
                        }
                    }).result.then(function(result) {
                        $state.go('packages', null, { reload: true });
                    }, function() {
                        $state.go('^');
                    })
                }]
            });
    }]);

'use strict';

angular.module('dgdtoolApp')
    .controller('PackagesController', ["$scope", "Packages", "PackagesSearch", "ParseLinks", function ($scope, Packages, PackagesSearch, ParseLinks) {
        $scope.packagess = [];
        $scope.page = 0;
        $scope.loadAll = function() {
            Packages.query({page: $scope.page, size: 20}, function(result, headers) {
                $scope.links = ParseLinks.parse(headers('link'));
                $scope.packagess = result;
            });
        };
        $scope.loadPage = function(page) {
            $scope.page = page;
            $scope.loadAll();
        };
        $scope.loadAll();

        $scope['delete'] = function (id) {
            Packages.get({id: id}, function(result) {
                $scope.packages = result;
                $('#deletePackagesConfirmation').modal('show');
            });
        };

        $scope.confirmDelete = function (id) {
            Packages['delete']({id: id},
                function () {
                    $scope.loadAll();
                    $('#deletePackagesConfirmation').modal('hide');
                    $scope.clear();
                });
        };

        $scope.search = function () {
            PackagesSearch.query({query: $scope.searchQuery}, function(result) {
                $scope.packagess = result;
            }, function(response) {
                if(response.status === 404) {
                    $scope.loadAll();
                }
            });
        };

        $scope.refresh = function () {
            $scope.loadAll();
            $scope.clear();
        };

        $scope.clear = function () {
            $scope.packages = {
                package_name: null,
                package_type_id: null,
                description: null,
                status_id: null,
                created_by: null,
                created_date: null,
                modified_by: null,
                modified_date: null,
                id: null
            };
        };
    }]);

'use strict';

angular.module('dgdtoolApp').controller('PackagesDialogController',
    ['$scope', '$stateParams', '$modalInstance', 'entity', 'Packages',
        function($scope, $stateParams, $modalInstance, entity, Packages) {

        $scope.packages = entity;
        $scope.load = function(id) {
            Packages.get({id : id}, function(result) {
                $scope.packages = result;
            });
        };

        var onSaveFinished = function (result) {
            $scope.$emit('dgdtoolApp:packagesUpdate', result);
            $modalInstance.close(result);
        };

        $scope.save = function () {
            if ($scope.packages.id != null) {
                Packages.update($scope.packages, onSaveFinished);
            } else {
                Packages.save($scope.packages, onSaveFinished);
            }
        };

        $scope.clear = function() {
            $modalInstance.dismiss('cancel');
        };
}]);

'use strict';

angular.module('dgdtoolApp')
    .controller('PackagesDetailController', ["$scope", "$rootScope", "$stateParams", "entity", "Packages", function ($scope, $rootScope, $stateParams, entity, Packages) {
        $scope.packages = entity;
        $scope.load = function (id) {
            Packages.get({id: id}, function(result) {
                $scope.packages = result;
            });
        };
        var unsubscribe = $rootScope.$on('dgdtoolApp:packagesUpdate', function(event, result) {
            $scope.packages = result;
        });
        $scope.$on('$destroy', unsubscribe);

    }]);

'use strict';

angular.module('dgdtoolApp')
    .factory('Packages', ["$resource", "DateUtils", function ($resource, DateUtils) {
        return $resource('api/packagess/:id', {}, {
            'query': { method: 'GET', isArray: true},
            'get': {
                method: 'GET',
                transformResponse: function (data) {
                    data = angular.fromJson(data);
                    data.created_date = DateUtils.convertLocaleDateFromServer(data.created_date);
                    data.modified_date = DateUtils.convertLocaleDateFromServer(data.modified_date);
                    return data;
                }
            },
            'update': {
                method: 'PUT',
                transformRequest: function (data) {
                    data.created_date = DateUtils.convertLocaleDateToServer(data.created_date);
                    data.modified_date = DateUtils.convertLocaleDateToServer(data.modified_date);
                    return angular.toJson(data);
                }
            },
            'save': {
                method: 'POST',
                transformRequest: function (data) {
                    data.created_date = DateUtils.convertLocaleDateToServer(data.created_date);
                    data.modified_date = DateUtils.convertLocaleDateToServer(data.modified_date);
                    return angular.toJson(data);
                }
            }
        });
    }]);

'use strict';

angular.module('dgdtoolApp')
    .factory('PackagesSearch', ["$resource", function ($resource) {
        return $resource('api/_search/packagess/:query', {}, {
            'query': { method: 'GET', isArray: true}
        });
    }]);

'use strict';

angular.module('dgdtoolApp')
    .config(["$stateProvider", function ($stateProvider) {
        $stateProvider
            .state('package_version', {
                parent: 'entity',
                url: '/package_versions',
                data: {
                    authorities: ['ROLE_USER'],
                    pageTitle: 'dgdtoolApp.package_version.home.title'
                },
                views: {
                    'content@': {
                        templateUrl: 'scripts/app/entities/package_version/package_versions.html',
                        controller: 'Package_versionController'
                    }
                },
                resolve: {
                    translatePartialLoader: ['$translate', '$translatePartialLoader', function ($translate, $translatePartialLoader) {
                        $translatePartialLoader.addPart('package_version');
                        $translatePartialLoader.addPart('global');
                        return $translate.refresh();
                    }]
                }
            })
            .state('package_version.detail', {
                parent: 'entity',
                url: '/package_version/{id}',
                data: {
                    authorities: ['ROLE_USER'],
                    pageTitle: 'dgdtoolApp.package_version.detail.title'
                },
                views: {
                    'content@': {
                        templateUrl: 'scripts/app/entities/package_version/package_version-detail.html',
                        controller: 'Package_versionDetailController'
                    }
                },
                resolve: {
                    translatePartialLoader: ['$translate', '$translatePartialLoader', function ($translate, $translatePartialLoader) {
                        $translatePartialLoader.addPart('package_version');
                        return $translate.refresh();
                    }],
                    entity: ['$stateParams', 'Package_version', function($stateParams, Package_version) {
                        return Package_version.get({id : $stateParams.id});
                    }]
                }
            })
            .state('package_version.new', {
                parent: 'package_version',
                url: '/new',
                data: {
                    authorities: ['ROLE_USER'],
                },
                onEnter: ['$stateParams', '$state', '$modal', function($stateParams, $state, $modal) {
                    $modal.open({
                        templateUrl: 'scripts/app/entities/package_version/package_version-dialog.html',
                        controller: 'Package_versionDialogController',
                        size: 'lg',
                        resolve: {
                            entity: function () {
                                return {
                                    package_version_name: null,
                                    package_id: null,
                                    description: null,
                                    status_id: null,
                                    created_by: null,
                                    created_date: null,
                                    modified_by: null,
                                    modified_date: null,
                                    id: null
                                };
                            }
                        }
                    }).result.then(function(result) {
                        $state.go('package_version', null, { reload: true });
                    }, function() {
                        $state.go('package_version');
                    })
                }]
            })
            .state('package_version.edit', {
                parent: 'package_version',
                url: '/{id}/edit',
                data: {
                    authorities: ['ROLE_USER'],
                },
                onEnter: ['$stateParams', '$state', '$modal', function($stateParams, $state, $modal) {
                    $modal.open({
                        templateUrl: 'scripts/app/entities/package_version/package_version-dialog.html',
                        controller: 'Package_versionDialogController',
                        size: 'lg',
                        resolve: {
                            entity: ['Package_version', function(Package_version) {
                                return Package_version.get({id : $stateParams.id});
                            }]
                        }
                    }).result.then(function(result) {
                        $state.go('package_version', null, { reload: true });
                    }, function() {
                        $state.go('^');
                    })
                }]
            });
    }]);

'use strict';

angular.module('dgdtoolApp')
    .controller('Package_versionController', ["$scope", "Package_version", "Package_versionSearch", "ParseLinks", function ($scope, Package_version, Package_versionSearch, ParseLinks) {
        $scope.package_versions = [];
        $scope.page = 0;
        $scope.loadAll = function() {
            Package_version.query({page: $scope.page, size: 20}, function(result, headers) {
                $scope.links = ParseLinks.parse(headers('link'));
                $scope.package_versions = result;
            });
        };
        $scope.loadPage = function(page) {
            $scope.page = page;
            $scope.loadAll();
        };
        $scope.loadAll();

        $scope['delete'] = function (id) {
            Package_version.get({id: id}, function(result) {
                $scope.package_version = result;
                $('#deletePackage_versionConfirmation').modal('show');
            });
        };

        $scope.confirmDelete = function (id) {
            Package_version['delete']({id: id},
                function () {
                    $scope.loadAll();
                    $('#deletePackage_versionConfirmation').modal('hide');
                    $scope.clear();
                });
        };

        $scope.search = function () {
            Package_versionSearch.query({query: $scope.searchQuery}, function(result) {
                $scope.package_versions = result;
            }, function(response) {
                if(response.status === 404) {
                    $scope.loadAll();
                }
            });
        };

        $scope.refresh = function () {
            $scope.loadAll();
            $scope.clear();
        };

        $scope.clear = function () {
            $scope.package_version = {
                package_version_name: null,
                package_id: null,
                description: null,
                status_id: null,
                created_by: null,
                created_date: null,
                modified_by: null,
                modified_date: null,
                id: null
            };
        };
    }]);

'use strict';

angular.module('dgdtoolApp').controller('Package_versionDialogController',
    ['$scope', '$stateParams', '$modalInstance', 'entity', 'Package_version',
        function($scope, $stateParams, $modalInstance, entity, Package_version) {

        $scope.package_version = entity;
        $scope.load = function(id) {
            Package_version.get({id : id}, function(result) {
                $scope.package_version = result;
            });
        };

        var onSaveFinished = function (result) {
            $scope.$emit('dgdtoolApp:package_versionUpdate', result);
            $modalInstance.close(result);
        };

        $scope.save = function () {
            if ($scope.package_version.id != null) {
                Package_version.update($scope.package_version, onSaveFinished);
            } else {
                Package_version.save($scope.package_version, onSaveFinished);
            }
        };

        $scope.clear = function() {
            $modalInstance.dismiss('cancel');
        };
}]);

'use strict';

angular.module('dgdtoolApp')
    .controller('Package_versionDetailController', ["$scope", "$rootScope", "$stateParams", "entity", "Package_version", function ($scope, $rootScope, $stateParams, entity, Package_version) {
        $scope.package_version = entity;
        $scope.load = function (id) {
            Package_version.get({id: id}, function(result) {
                $scope.package_version = result;
            });
        };
        var unsubscribe = $rootScope.$on('dgdtoolApp:package_versionUpdate', function(event, result) {
            $scope.package_version = result;
        });
        $scope.$on('$destroy', unsubscribe);

    }]);

'use strict';

angular.module('dgdtoolApp')
    .factory('Package_version', ["$resource", "DateUtils", function ($resource, DateUtils) {
        return $resource('api/package_versions/:id', {}, {
            'query': { method: 'GET', isArray: true},
            'get': {
                method: 'GET',
                transformResponse: function (data) {
                    data = angular.fromJson(data);
                    data.created_date = DateUtils.convertLocaleDateFromServer(data.created_date);
                    data.modified_date = DateUtils.convertLocaleDateFromServer(data.modified_date);
                    return data;
                }
            },
            'update': {
                method: 'PUT',
                transformRequest: function (data) {
                    data.created_date = DateUtils.convertLocaleDateToServer(data.created_date);
                    data.modified_date = DateUtils.convertLocaleDateToServer(data.modified_date);
                    return angular.toJson(data);
                }
            },
            'save': {
                method: 'POST',
                transformRequest: function (data) {
                    data.created_date = DateUtils.convertLocaleDateToServer(data.created_date);
                    data.modified_date = DateUtils.convertLocaleDateToServer(data.modified_date);
                    return angular.toJson(data);
                }
            }
        });
    }]);

'use strict';

angular.module('dgdtoolApp')
    .factory('Package_versionSearch', ["$resource", function ($resource) {
        return $resource('api/_search/package_versions/:query', {}, {
            'query': { method: 'GET', isArray: true}
        });
    }]);

'use strict';

angular.module('dgdtoolApp')
    .config(["$stateProvider", function ($stateProvider) {
        $stateProvider
            .state('service', {
                parent: 'entity',
                url: '/services',
                data: {
                    authorities: ['ROLE_USER'],
                    pageTitle: 'dgdtoolApp.service.home.title'
                },
                views: {
                    'content@': {
                        templateUrl: 'scripts/app/entities/service/services.html',
                        controller: 'ServiceController'
                    }
                },
                resolve: {
                    translatePartialLoader: ['$translate', '$translatePartialLoader', function ($translate, $translatePartialLoader) {
                        $translatePartialLoader.addPart('service');
                        $translatePartialLoader.addPart('global');
                        return $translate.refresh();
                    }]
                }
            })
            .state('service.detail', {
                parent: 'entity',
                url: '/service/{id}',
                data: {
                    authorities: ['ROLE_USER'],
                    pageTitle: 'dgdtoolApp.service.detail.title'
                },
                views: {
                    'content@': {
                        templateUrl: 'scripts/app/entities/service/service-detail.html',
                        controller: 'ServiceDetailController'
                    }
                },
                resolve: {
                    translatePartialLoader: ['$translate', '$translatePartialLoader', function ($translate, $translatePartialLoader) {
                        $translatePartialLoader.addPart('service');
                        return $translate.refresh();
                    }],
                    entity: ['$stateParams', 'Service', function($stateParams, Service) {
                        return Service.get({id : $stateParams.id});
                    }]
                }
            })
            .state('service.new', {
                parent: 'service',
                url: '/new',
                data: {
                    authorities: ['ROLE_USER'],
                },
                onEnter: ['$stateParams', '$state', '$modal', function($stateParams, $state, $modal) {
                    $modal.open({
                        templateUrl: 'scripts/app/entities/service/service-dialog.html',
                        controller: 'ServiceDialogController',
                        size: 'lg',
                        resolve: {
                            entity: function () {
                                return {
                                    service_name: null,
                                    description: null,
                                    status_id: null,
                                    created_by: null,
                                    created_date: null,
                                    modified_by: null,
                                    modified_date: null,
                                    id: null
                                };
                            }
                        }
                    }).result.then(function(result) {
                        $state.go('service', null, { reload: true });
                    }, function() {
                        $state.go('service');
                    })
                }]
            })
            .state('service.edit', {
                parent: 'service',
                url: '/{id}/edit',
                data: {
                    authorities: ['ROLE_USER'],
                },
                onEnter: ['$stateParams', '$state', '$modal', function($stateParams, $state, $modal) {
                    $modal.open({
                        templateUrl: 'scripts/app/entities/service/service-dialog.html',
                        controller: 'ServiceDialogController',
                        size: 'lg',
                        resolve: {
                            entity: ['Service', function(Service) {
                                return Service.get({id : $stateParams.id});
                            }]
                        }
                    }).result.then(function(result) {
                        $state.go('service', null, { reload: true });
                    }, function() {
                        $state.go('^');
                    })
                }]
            });
    }]);

'use strict';

angular.module('dgdtoolApp')
    .controller('ServiceController', ["$scope", "Service", "ServiceSearch", "ParseLinks", function ($scope, Service, ServiceSearch, ParseLinks) {
        $scope.services = [];
        $scope.page = 0;
        $scope.loadAll = function() {
            Service.query({page: $scope.page, size: 20}, function(result, headers) {
                $scope.links = ParseLinks.parse(headers('link'));
                $scope.services = result;
            });
        };
        $scope.loadPage = function(page) {
            $scope.page = page;
            $scope.loadAll();
        };
        $scope.loadAll();

        $scope['delete'] = function (id) {
            Service.get({id: id}, function(result) {
                $scope.service = result;
                $('#deleteServiceConfirmation').modal('show');
            });
        };

        $scope.confirmDelete = function (id) {
            Service['delete']({id: id},
                function () {
                    $scope.loadAll();
                    $('#deleteServiceConfirmation').modal('hide');
                    $scope.clear();
                });
        };

        $scope.search = function () {
            ServiceSearch.query({query: $scope.searchQuery}, function(result) {
                $scope.services = result;
            }, function(response) {
                if(response.status === 404) {
                    $scope.loadAll();
                }
            });
        };

        $scope.refresh = function () {
            $scope.loadAll();
            $scope.clear();
        };

        $scope.clear = function () {
            $scope.service = {
                service_name: null,
                description: null,
                status_id: null,
                created_by: null,
                created_date: null,
                modified_by: null,
                modified_date: null,
                id: null
            };
        };
    }]);

'use strict';

angular.module('dgdtoolApp').controller('ServiceDialogController',
    ['$scope', '$stateParams', '$modalInstance', 'entity', 'Service',
        function($scope, $stateParams, $modalInstance, entity, Service) {

        $scope.service = entity;
        $scope.load = function(id) {
            Service.get({id : id}, function(result) {
                $scope.service = result;
            });
        };

        var onSaveFinished = function (result) {
            $scope.$emit('dgdtoolApp:serviceUpdate', result);
            $modalInstance.close(result);
        };

        $scope.save = function () {
            if ($scope.service.id != null) {
                Service.update($scope.service, onSaveFinished);
            } else {
                Service.save($scope.service, onSaveFinished);
            }
        };

        $scope.clear = function() {
            $modalInstance.dismiss('cancel');
        };
}]);

'use strict';

angular.module('dgdtoolApp')
    .controller('ServiceDetailController', ["$scope", "$rootScope", "$stateParams", "entity", "Service", function ($scope, $rootScope, $stateParams, entity, Service) {
        $scope.service = entity;
        $scope.load = function (id) {
            Service.get({id: id}, function(result) {
                $scope.service = result;
            });
        };
        var unsubscribe = $rootScope.$on('dgdtoolApp:serviceUpdate', function(event, result) {
            $scope.service = result;
        });
        $scope.$on('$destroy', unsubscribe);

    }]);

'use strict';

angular.module('dgdtoolApp')
    .factory('Service', ["$resource", "DateUtils", function ($resource, DateUtils) {
        return $resource('api/services/:id', {}, {
            'query': { method: 'GET', isArray: true},
            'get': {
                method: 'GET',
                transformResponse: function (data) {
                    data = angular.fromJson(data);
                    data.created_date = DateUtils.convertLocaleDateFromServer(data.created_date);
                    data.modified_date = DateUtils.convertLocaleDateFromServer(data.modified_date);
                    return data;
                }
            },
            'update': {
                method: 'PUT',
                transformRequest: function (data) {
                    data.created_date = DateUtils.convertLocaleDateToServer(data.created_date);
                    data.modified_date = DateUtils.convertLocaleDateToServer(data.modified_date);
                    return angular.toJson(data);
                }
            },
            'save': {
                method: 'POST',
                transformRequest: function (data) {
                    data.created_date = DateUtils.convertLocaleDateToServer(data.created_date);
                    data.modified_date = DateUtils.convertLocaleDateToServer(data.modified_date);
                    return angular.toJson(data);
                }
            }
        });
    }]);

'use strict';

angular.module('dgdtoolApp')
    .factory('ServiceSearch', ["$resource", function ($resource) {
        return $resource('api/_search/services/:query', {}, {
            'query': { method: 'GET', isArray: true}
        });
    }]);

'use strict';

angular.module('dgdtoolApp')
    .config(["$stateProvider", function ($stateProvider) {
        $stateProvider
            .state('app_type', {
                parent: 'entity',
                url: '/app_types',
                data: {
                    authorities: ['ROLE_USER'],
                    pageTitle: 'dgdtoolApp.app_type.home.title'
                },
                views: {
                    'content@': {
                        templateUrl: 'scripts/app/entities/app_type/app_types.html',
                        controller: 'App_typeController'
                    }
                },
                resolve: {
                    translatePartialLoader: ['$translate', '$translatePartialLoader', function ($translate, $translatePartialLoader) {
                        $translatePartialLoader.addPart('app_type');
                        $translatePartialLoader.addPart('global');
                        return $translate.refresh();
                    }]
                }
            })
            .state('app_type.detail', {
                parent: 'entity',
                url: '/app_type/{id}',
                data: {
                    authorities: ['ROLE_USER'],
                    pageTitle: 'dgdtoolApp.app_type.detail.title'
                },
                views: {
                    'content@': {
                        templateUrl: 'scripts/app/entities/app_type/app_type-detail.html',
                        controller: 'App_typeDetailController'
                    }
                },
                resolve: {
                    translatePartialLoader: ['$translate', '$translatePartialLoader', function ($translate, $translatePartialLoader) {
                        $translatePartialLoader.addPart('app_type');
                        return $translate.refresh();
                    }],
                    entity: ['$stateParams', 'App_type', function($stateParams, App_type) {
                        return App_type.get({id : $stateParams.id});
                    }]
                }
            })
            .state('app_type.new', {
                parent: 'app_type',
                url: '/new',
                data: {
                    authorities: ['ROLE_USER'],
                },
                onEnter: ['$stateParams', '$state', '$modal', function($stateParams, $state, $modal) {
                    $modal.open({
                        templateUrl: 'scripts/app/entities/app_type/app_type-dialog.html',
                        controller: 'App_typeDialogController',
                        size: 'lg',
                        resolve: {
                            entity: function () {
                                return {
                                    app_type_name: null,
                                    description: null,
                                    status_id: null,
                                    created_by: null,
                                    created_date: null,
                                    modified_by: null,
                                    modified_date: null,
                                    id: null
                                };
                            }
                        }
                    }).result.then(function(result) {
                        $state.go('app_type', null, { reload: true });
                    }, function() {
                        $state.go('app_type');
                    })
                }]
            })
            .state('app_type.edit', {
                parent: 'app_type',
                url: '/{id}/edit',
                data: {
                    authorities: ['ROLE_USER'],
                },
                onEnter: ['$stateParams', '$state', '$modal', function($stateParams, $state, $modal) {
                    $modal.open({
                        templateUrl: 'scripts/app/entities/app_type/app_type-dialog.html',
                        controller: 'App_typeDialogController',
                        size: 'lg',
                        resolve: {
                            entity: ['App_type', function(App_type) {
                                return App_type.get({id : $stateParams.id});
                            }]
                        }
                    }).result.then(function(result) {
                        $state.go('app_type', null, { reload: true });
                    }, function() {
                        $state.go('^');
                    })
                }]
            });
    }]);

'use strict';

angular.module('dgdtoolApp')
    .controller('App_typeController', ["$scope", "App_type", "App_typeSearch", "ParseLinks", function ($scope, App_type, App_typeSearch, ParseLinks) {
        $scope.app_types = [];
        $scope.page = 0;
        $scope.loadAll = function() {
            App_type.query({page: $scope.page, size: 20}, function(result, headers) {
                $scope.links = ParseLinks.parse(headers('link'));
                $scope.app_types = result;
            });
        };
        $scope.loadPage = function(page) {
            $scope.page = page;
            $scope.loadAll();
        };
        $scope.loadAll();

        $scope['delete'] = function (id) {
            App_type.get({id: id}, function(result) {
                $scope.app_type = result;
                $('#deleteApp_typeConfirmation').modal('show');
            });
        };

        $scope.confirmDelete = function (id) {
            App_type['delete']({id: id},
                function () {
                    $scope.loadAll();
                    $('#deleteApp_typeConfirmation').modal('hide');
                    $scope.clear();
                });
        };

        $scope.search = function () {
            App_typeSearch.query({query: $scope.searchQuery}, function(result) {
                $scope.app_types = result;
            }, function(response) {
                if(response.status === 404) {
                    $scope.loadAll();
                }
            });
        };

        $scope.refresh = function () {
            $scope.loadAll();
            $scope.clear();
        };

        $scope.clear = function () {
            $scope.app_type = {
                app_type_name: null,
                description: null,
                status_id: null,
                created_by: null,
                created_date: null,
                modified_by: null,
                modified_date: null,
                id: null
            };
        };
    }]);

'use strict';

angular.module('dgdtoolApp').controller('App_typeDialogController',
    ['$scope', '$stateParams', '$modalInstance', 'entity', 'App_type',
        function($scope, $stateParams, $modalInstance, entity, App_type) {

        $scope.app_type = entity;
        $scope.load = function(id) {
            App_type.get({id : id}, function(result) {
                $scope.app_type = result;
            });
        };

        var onSaveFinished = function (result) {
            $scope.$emit('dgdtoolApp:app_typeUpdate', result);
            $modalInstance.close(result);
        };

        $scope.save = function () {
            if ($scope.app_type.id != null) {
                App_type.update($scope.app_type, onSaveFinished);
            } else {
                App_type.save($scope.app_type, onSaveFinished);
            }
        };

        $scope.clear = function() {
            $modalInstance.dismiss('cancel');
        };
}]);

'use strict';

angular.module('dgdtoolApp')
    .controller('App_typeDetailController', ["$scope", "$rootScope", "$stateParams", "entity", "App_type", function ($scope, $rootScope, $stateParams, entity, App_type) {
        $scope.app_type = entity;
        $scope.load = function (id) {
            App_type.get({id: id}, function(result) {
                $scope.app_type = result;
            });
        };
        var unsubscribe = $rootScope.$on('dgdtoolApp:app_typeUpdate', function(event, result) {
            $scope.app_type = result;
        });
        $scope.$on('$destroy', unsubscribe);

    }]);

'use strict';

angular.module('dgdtoolApp')
    .factory('App_type', ["$resource", "DateUtils", function ($resource, DateUtils) {
        return $resource('api/app_types/:id', {}, {
            'query': { method: 'GET', isArray: true},
            'get': {
                method: 'GET',
                transformResponse: function (data) {
                    data = angular.fromJson(data);
                    data.created_date = DateUtils.convertLocaleDateFromServer(data.created_date);
                    data.modified_date = DateUtils.convertLocaleDateFromServer(data.modified_date);
                    return data;
                }
            },
            'update': {
                method: 'PUT',
                transformRequest: function (data) {
                    data.created_date = DateUtils.convertLocaleDateToServer(data.created_date);
                    data.modified_date = DateUtils.convertLocaleDateToServer(data.modified_date);
                    return angular.toJson(data);
                }
            },
            'save': {
                method: 'POST',
                transformRequest: function (data) {
                    data.created_date = DateUtils.convertLocaleDateToServer(data.created_date);
                    data.modified_date = DateUtils.convertLocaleDateToServer(data.modified_date);
                    return angular.toJson(data);
                }
            }
        });
    }]);

'use strict';

angular.module('dgdtoolApp')
    .factory('App_typeSearch', ["$resource", function ($resource) {
        return $resource('api/_search/app_types/:query', {}, {
            'query': { method: 'GET', isArray: true}
        });
    }]);

'use strict';

angular.module('dgdtoolApp')
    .config(["$stateProvider", function ($stateProvider) {
        $stateProvider
            .state('app', {
                parent: 'entity',
                url: '/apps',
                data: {
                    authorities: ['ROLE_USER'],
                    pageTitle: 'dgdtoolApp.app.home.title'
                },
                views: {
                    'content@': {
                        templateUrl: 'scripts/app/entities/app/apps.html',
                        controller: 'AppController'
                    }
                },
                resolve: {
                    translatePartialLoader: ['$translate', '$translatePartialLoader', function ($translate, $translatePartialLoader) {
                        $translatePartialLoader.addPart('app');
                        $translatePartialLoader.addPart('global');
                        return $translate.refresh();
                    }]
                }
            })
            .state('app.detail', {
                parent: 'entity',
                url: '/app/{id}',
                data: {
                    authorities: ['ROLE_USER'],
                    pageTitle: 'dgdtoolApp.app.detail.title'
                },
                views: {
                    'content@': {
                        templateUrl: 'scripts/app/entities/app/app-detail.html',
                        controller: 'AppDetailController'
                    }
                },
                resolve: {
                    translatePartialLoader: ['$translate', '$translatePartialLoader', function ($translate, $translatePartialLoader) {
                        $translatePartialLoader.addPart('app');
                        return $translate.refresh();
                    }],
                    entity: ['$stateParams', 'App', function($stateParams, App) {
                        return App.get({id : $stateParams.id});
                    }]
                }
            })
            .state('app.new', {
                parent: 'app',
                url: '/new',
                data: {
                    authorities: ['ROLE_USER'],
                },
                onEnter: ['$stateParams', '$state', '$modal', function($stateParams, $state, $modal) {
                    $modal.open({
                        templateUrl: 'scripts/app/entities/app/app-dialog.html',
                        controller: 'AppDialogController',
                        size: 'lg',
                        resolve: {
                            entity: function () {
                                return {
                                    app_name: null,
                                    app_type_id: null,
                                    description: null,
                                    status_id: null,
                                    created_by: null,
                                    created_date: null,
                                    modified_by: null,
                                    modified_date: null,
                                    id: null
                                };
                            }
                        }
                    }).result.then(function(result) {
                        $state.go('app', null, { reload: true });
                    }, function() {
                        $state.go('app');
                    })
                }]
            })
            .state('app.edit', {
                parent: 'app',
                url: '/{id}/edit',
                data: {
                    authorities: ['ROLE_USER'],
                },
                onEnter: ['$stateParams', '$state', '$modal', function($stateParams, $state, $modal) {
                    $modal.open({
                        templateUrl: 'scripts/app/entities/app/app-dialog.html',
                        controller: 'AppDialogController',
                        size: 'lg',
                        resolve: {
                            entity: ['App', function(App) {
                                return App.get({id : $stateParams.id});
                            }]
                        }
                    }).result.then(function(result) {
                        $state.go('app', null, { reload: true });
                    }, function() {
                        $state.go('^');
                    })
                }]
            });
    }]);

'use strict';

angular.module('dgdtoolApp')
    .controller('AppController', ["$scope", "App", "AppSearch", "ParseLinks", function ($scope, App, AppSearch, ParseLinks) {
        $scope.apps = [];
        $scope.page = 0;
        $scope.loadAll = function() {
            App.query({page: $scope.page, size: 20}, function(result, headers) {
                $scope.links = ParseLinks.parse(headers('link'));
                $scope.apps = result;
            });
        };
        $scope.loadPage = function(page) {
            $scope.page = page;
            $scope.loadAll();
        };
        $scope.loadAll();

        $scope['delete'] = function (id) {
            App.get({id: id}, function(result) {
                $scope.app = result;
                $('#deleteAppConfirmation').modal('show');
            });
        };

        $scope.confirmDelete = function (id) {
            App['delete']({id: id},
                function () {
                    $scope.loadAll();
                    $('#deleteAppConfirmation').modal('hide');
                    $scope.clear();
                });
        };

        $scope.search = function () {
            AppSearch.query({query: $scope.searchQuery}, function(result) {
                $scope.apps = result;
            }, function(response) {
                if(response.status === 404) {
                    $scope.loadAll();
                }
            });
        };

        $scope.refresh = function () {
            $scope.loadAll();
            $scope.clear();
        };

        $scope.clear = function () {
            $scope.app = {
                app_name: null,
                app_type_id: null,
                description: null,
                status_id: null,
                created_by: null,
                created_date: null,
                modified_by: null,
                modified_date: null,
                id: null
            };
        };
    }]);

'use strict';

angular.module('dgdtoolApp').controller('AppDialogController',
    ['$scope', '$stateParams', '$modalInstance', 'entity', 'App',
        function($scope, $stateParams, $modalInstance, entity, App) {

        $scope.app = entity;
        $scope.load = function(id) {
            App.get({id : id}, function(result) {
                $scope.app = result;
            });
        };

        var onSaveFinished = function (result) {
            $scope.$emit('dgdtoolApp:appUpdate', result);
            $modalInstance.close(result);
        };

        $scope.save = function () {
            if ($scope.app.id != null) {
                App.update($scope.app, onSaveFinished);
            } else {
                App.save($scope.app, onSaveFinished);
            }
        };

        $scope.clear = function() {
            $modalInstance.dismiss('cancel');
        };
}]);

'use strict';

angular.module('dgdtoolApp')
    .controller('AppDetailController', ["$scope", "$rootScope", "$stateParams", "entity", "App", function ($scope, $rootScope, $stateParams, entity, App) {
        $scope.app = entity;
        $scope.load = function (id) {
            App.get({id: id}, function(result) {
                $scope.app = result;
            });
        };
        var unsubscribe = $rootScope.$on('dgdtoolApp:appUpdate', function(event, result) {
            $scope.app = result;
        });
        $scope.$on('$destroy', unsubscribe);

    }]);

'use strict';

angular.module('dgdtoolApp')
    .factory('App', ["$resource", "DateUtils", function ($resource, DateUtils) {
        return $resource('api/apps/:id', {}, {
            'query': { method: 'GET', isArray: true},
            'get': {
                method: 'GET',
                transformResponse: function (data) {
                    data = angular.fromJson(data);
                    data.created_date = DateUtils.convertLocaleDateFromServer(data.created_date);
                    data.modified_date = DateUtils.convertLocaleDateFromServer(data.modified_date);
                    return data;
                }
            },
            'update': {
                method: 'PUT',
                transformRequest: function (data) {
                    data.created_date = DateUtils.convertLocaleDateToServer(data.created_date);
                    data.modified_date = DateUtils.convertLocaleDateToServer(data.modified_date);
                    return angular.toJson(data);
                }
            },
            'save': {
                method: 'POST',
                transformRequest: function (data) {
                    data.created_date = DateUtils.convertLocaleDateToServer(data.created_date);
                    data.modified_date = DateUtils.convertLocaleDateToServer(data.modified_date);
                    return angular.toJson(data);
                }
            }
        });
    }]);

'use strict';

angular.module('dgdtoolApp')
    .factory('AppSearch', ["$resource", function ($resource) {
        return $resource('api/_search/apps/:query', {}, {
            'query': { method: 'GET', isArray: true}
        });
    }]);

'use strict';

angular.module('dgdtoolApp')
    .config(["$stateProvider", function ($stateProvider) {
        $stateProvider
            .state('initiative', {
                parent: 'entity',
                url: '/initiatives',
                data: {
                    authorities: ['ROLE_USER'],
                    pageTitle: 'dgdtoolApp.initiative.home.title'
                },
                views: {
                    'content@': {
                        templateUrl: 'scripts/app/entities/initiative/initiatives.html',
                        controller: 'InitiativeController'
                    }
                },
                resolve: {
                    translatePartialLoader: ['$translate', '$translatePartialLoader', function ($translate, $translatePartialLoader) {
                        $translatePartialLoader.addPart('initiative');
                        $translatePartialLoader.addPart('global');
                        return $translate.refresh();
                    }]
                }
            })
            .state('initiative.detail', {
                parent: 'entity',
                url: '/initiative/{id}',
                data: {
                    authorities: ['ROLE_USER'],
                    pageTitle: 'dgdtoolApp.initiative.detail.title'
                },
                views: {
                    'content@': {
                        templateUrl: 'scripts/app/entities/initiative/initiative-detail.html',
                        controller: 'InitiativeDetailController'
                    }
                },
                resolve: {
                    translatePartialLoader: ['$translate', '$translatePartialLoader', function ($translate, $translatePartialLoader) {
                        $translatePartialLoader.addPart('initiative');
                        return $translate.refresh();
                    }],
                    entity: ['$stateParams', 'Initiative', function($stateParams, Initiative) {
                        return Initiative.get({id : $stateParams.id});
                    }]
                }
            })
            .state('initiative.new', {
                parent: 'initiative',
                url: '/new',
                data: {
                    authorities: ['ROLE_USER'],
                },
                onEnter: ['$stateParams', '$state', '$modal', function($stateParams, $state, $modal) {
                    $modal.open({
                        templateUrl: 'scripts/app/entities/initiative/initiative-dialog.html',
                        controller: 'InitiativeDialogController',
                        size: 'lg',
                        resolve: {
                            entity: function () {
                                return {
                                    initiative_name: null,
                                    initiative_type_id: null,
                                    description: null,
                                    status_id: null,
                                    created_by: null,
                                    created_date: null,
                                    modified_by: null,
                                    modified_date: null,
                                    id: null
                                };
                            }
                        }
                    }).result.then(function(result) {
                        $state.go('initiative', null, { reload: true });
                    }, function() {
                        $state.go('initiative');
                    })
                }]
            })
            .state('initiative.edit', {
                parent: 'initiative',
                url: '/{id}/edit',
                data: {
                    authorities: ['ROLE_USER'],
                },
                onEnter: ['$stateParams', '$state', '$modal', function($stateParams, $state, $modal) {
                    $modal.open({
                        templateUrl: 'scripts/app/entities/initiative/initiative-dialog.html',
                        controller: 'InitiativeDialogController',
                        size: 'lg',
                        resolve: {
                            entity: ['Initiative', function(Initiative) {
                                return Initiative.get({id : $stateParams.id});
                            }]
                        }
                    }).result.then(function(result) {
                        $state.go('initiative', null, { reload: true });
                    }, function() {
                        $state.go('^');
                    })
                }]
            });
    }]);

'use strict';

angular.module('dgdtoolApp')
    .controller('InitiativeController', ["$scope", "Initiative", "InitiativeSearch", "ParseLinks", function ($scope, Initiative, InitiativeSearch, ParseLinks) {
        $scope.initiatives = [];
        $scope.page = 0;
        $scope.loadAll = function() {
            Initiative.query({page: $scope.page, size: 20}, function(result, headers) {
                $scope.links = ParseLinks.parse(headers('link'));
                $scope.initiatives = result;
            });
        };
        $scope.loadPage = function(page) {
            $scope.page = page;
            $scope.loadAll();
        };
        $scope.loadAll();

        $scope['delete'] = function (id) {
            Initiative.get({id: id}, function(result) {
                $scope.initiative = result;
                $('#deleteInitiativeConfirmation').modal('show');
            });
        };

        $scope.confirmDelete = function (id) {
            Initiative['delete']({id: id},
                function () {
                    $scope.loadAll();
                    $('#deleteInitiativeConfirmation').modal('hide');
                    $scope.clear();
                });
        };

        $scope.search = function () {
            InitiativeSearch.query({query: $scope.searchQuery}, function(result) {
                $scope.initiatives = result;
            }, function(response) {
                if(response.status === 404) {
                    $scope.loadAll();
                }
            });
        };

        $scope.refresh = function () {
            $scope.loadAll();
            $scope.clear();
        };

        $scope.clear = function () {
            $scope.initiative = {
                initiative_name: null,
                initiative_type_id: null,
                description: null,
                status_id: null,
                created_by: null,
                created_date: null,
                modified_by: null,
                modified_date: null,
                id: null
            };
        };
    }]);

'use strict';

angular.module('dgdtoolApp').controller('InitiativeDialogController',
    ['$scope', '$stateParams', '$modalInstance', 'entity', 'Initiative',
        function($scope, $stateParams, $modalInstance, entity, Initiative) {

        $scope.initiative = entity;
        $scope.load = function(id) {
            Initiative.get({id : id}, function(result) {
                $scope.initiative = result;
            });
        };

        var onSaveFinished = function (result) {
            $scope.$emit('dgdtoolApp:initiativeUpdate', result);
            $modalInstance.close(result);
        };

        $scope.save = function () {
            if ($scope.initiative.id != null) {
                Initiative.update($scope.initiative, onSaveFinished);
            } else {
                Initiative.save($scope.initiative, onSaveFinished);
            }
        };

        $scope.clear = function() {
            $modalInstance.dismiss('cancel');
        };
}]);

'use strict';

angular.module('dgdtoolApp')
    .controller('InitiativeDetailController', ["$scope", "$rootScope", "$stateParams", "entity", "Initiative", function ($scope, $rootScope, $stateParams, entity, Initiative) {
        $scope.initiative = entity;
        $scope.load = function (id) {
            Initiative.get({id: id}, function(result) {
                $scope.initiative = result;
            });
        };
        var unsubscribe = $rootScope.$on('dgdtoolApp:initiativeUpdate', function(event, result) {
            $scope.initiative = result;
        });
        $scope.$on('$destroy', unsubscribe);

    }]);

'use strict';

angular.module('dgdtoolApp')
    .factory('Initiative', ["$resource", "DateUtils", function ($resource, DateUtils) {
        return $resource('api/initiatives/:id', {}, {
            'query': { method: 'GET', isArray: true},
            'get': {
                method: 'GET',
                transformResponse: function (data) {
                    data = angular.fromJson(data);
                    data.created_date = DateUtils.convertLocaleDateFromServer(data.created_date);
                    data.modified_date = DateUtils.convertLocaleDateFromServer(data.modified_date);
                    return data;
                }
            },
            'update': {
                method: 'PUT',
                transformRequest: function (data) {
                    data.created_date = DateUtils.convertLocaleDateToServer(data.created_date);
                    data.modified_date = DateUtils.convertLocaleDateToServer(data.modified_date);
                    return angular.toJson(data);
                }
            },
            'save': {
                method: 'POST',
                transformRequest: function (data) {
                    data.created_date = DateUtils.convertLocaleDateToServer(data.created_date);
                    data.modified_date = DateUtils.convertLocaleDateToServer(data.modified_date);
                    return angular.toJson(data);
                }
            }
        });
    }]);

'use strict';

angular.module('dgdtoolApp')
    .factory('InitiativeSearch', ["$resource", function ($resource) {
        return $resource('api/_search/initiatives/:query', {}, {
            'query': { method: 'GET', isArray: true}
        });
    }]);

'use strict';

angular.module('dgdtoolApp')
    .config(["$stateProvider", function ($stateProvider) {
        $stateProvider
            .state('initiative_type', {
                parent: 'entity',
                url: '/initiative_types',
                data: {
                    authorities: ['ROLE_USER'],
                    pageTitle: 'dgdtoolApp.initiative_type.home.title'
                },
                views: {
                    'content@': {
                        templateUrl: 'scripts/app/entities/initiative_type/initiative_types.html',
                        controller: 'Initiative_typeController'
                    }
                },
                resolve: {
                    translatePartialLoader: ['$translate', '$translatePartialLoader', function ($translate, $translatePartialLoader) {
                        $translatePartialLoader.addPart('initiative_type');
                        $translatePartialLoader.addPart('global');
                        return $translate.refresh();
                    }]
                }
            })
            .state('initiative_type.detail', {
                parent: 'entity',
                url: '/initiative_type/{id}',
                data: {
                    authorities: ['ROLE_USER'],
                    pageTitle: 'dgdtoolApp.initiative_type.detail.title'
                },
                views: {
                    'content@': {
                        templateUrl: 'scripts/app/entities/initiative_type/initiative_type-detail.html',
                        controller: 'Initiative_typeDetailController'
                    }
                },
                resolve: {
                    translatePartialLoader: ['$translate', '$translatePartialLoader', function ($translate, $translatePartialLoader) {
                        $translatePartialLoader.addPart('initiative_type');
                        return $translate.refresh();
                    }],
                    entity: ['$stateParams', 'Initiative_type', function($stateParams, Initiative_type) {
                        return Initiative_type.get({id : $stateParams.id});
                    }]
                }
            })
            .state('initiative_type.new', {
                parent: 'initiative_type',
                url: '/new',
                data: {
                    authorities: ['ROLE_USER'],
                },
                onEnter: ['$stateParams', '$state', '$modal', function($stateParams, $state, $modal) {
                    $modal.open({
                        templateUrl: 'scripts/app/entities/initiative_type/initiative_type-dialog.html',
                        controller: 'Initiative_typeDialogController',
                        size: 'lg',
                        resolve: {
                            entity: function () {
                                return {
                                    initiative_type_name: null,
                                    description: null,
                                    status_id: null,
                                    created_by: null,
                                    created_date: null,
                                    modified_by: null,
                                    modified_date: null,
                                    id: null
                                };
                            }
                        }
                    }).result.then(function(result) {
                        $state.go('initiative_type', null, { reload: true });
                    }, function() {
                        $state.go('initiative_type');
                    })
                }]
            })
            .state('initiative_type.edit', {
                parent: 'initiative_type',
                url: '/{id}/edit',
                data: {
                    authorities: ['ROLE_USER'],
                },
                onEnter: ['$stateParams', '$state', '$modal', function($stateParams, $state, $modal) {
                    $modal.open({
                        templateUrl: 'scripts/app/entities/initiative_type/initiative_type-dialog.html',
                        controller: 'Initiative_typeDialogController',
                        size: 'lg',
                        resolve: {
                            entity: ['Initiative_type', function(Initiative_type) {
                                return Initiative_type.get({id : $stateParams.id});
                            }]
                        }
                    }).result.then(function(result) {
                        $state.go('initiative_type', null, { reload: true });
                    }, function() {
                        $state.go('^');
                    })
                }]
            });
    }]);

'use strict';

angular.module('dgdtoolApp')
    .controller('Initiative_typeController', ["$scope", "Initiative_type", "Initiative_typeSearch", "ParseLinks", function ($scope, Initiative_type, Initiative_typeSearch, ParseLinks) {
        $scope.initiative_types = [];
        $scope.page = 0;
        $scope.loadAll = function() {
            Initiative_type.query({page: $scope.page, size: 20}, function(result, headers) {
                $scope.links = ParseLinks.parse(headers('link'));
                $scope.initiative_types = result;
            });
        };
        $scope.loadPage = function(page) {
            $scope.page = page;
            $scope.loadAll();
        };
        $scope.loadAll();

        $scope['delete'] = function (id) {
            Initiative_type.get({id: id}, function(result) {
                $scope.initiative_type = result;
                $('#deleteInitiative_typeConfirmation').modal('show');
            });
        };

        $scope.confirmDelete = function (id) {
            Initiative_type['delete']({id: id},
                function () {
                    $scope.loadAll();
                    $('#deleteInitiative_typeConfirmation').modal('hide');
                    $scope.clear();
                });
        };

        $scope.search = function () {
            Initiative_typeSearch.query({query: $scope.searchQuery}, function(result) {
                $scope.initiative_types = result;
            }, function(response) {
                if(response.status === 404) {
                    $scope.loadAll();
                }
            });
        };

        $scope.refresh = function () {
            $scope.loadAll();
            $scope.clear();
        };

        $scope.clear = function () {
            $scope.initiative_type = {
                initiative_type_name: null,
                description: null,
                status_id: null,
                created_by: null,
                created_date: null,
                modified_by: null,
                modified_date: null,
                id: null
            };
        };
    }]);

'use strict';

angular.module('dgdtoolApp').controller('Initiative_typeDialogController',
    ['$scope', '$stateParams', '$modalInstance', 'entity', 'Initiative_type',
        function($scope, $stateParams, $modalInstance, entity, Initiative_type) {

        $scope.initiative_type = entity;
        $scope.load = function(id) {
            Initiative_type.get({id : id}, function(result) {
                $scope.initiative_type = result;
            });
        };

        var onSaveFinished = function (result) {
            $scope.$emit('dgdtoolApp:initiative_typeUpdate', result);
            $modalInstance.close(result);
        };

        $scope.save = function () {
            if ($scope.initiative_type.id != null) {
                Initiative_type.update($scope.initiative_type, onSaveFinished);
            } else {
                Initiative_type.save($scope.initiative_type, onSaveFinished);
            }
        };

        $scope.clear = function() {
            $modalInstance.dismiss('cancel');
        };
}]);

'use strict';

angular.module('dgdtoolApp')
    .controller('Initiative_typeDetailController', ["$scope", "$rootScope", "$stateParams", "entity", "Initiative_type", function ($scope, $rootScope, $stateParams, entity, Initiative_type) {
        $scope.initiative_type = entity;
        $scope.load = function (id) {
            Initiative_type.get({id: id}, function(result) {
                $scope.initiative_type = result;
            });
        };
        var unsubscribe = $rootScope.$on('dgdtoolApp:initiative_typeUpdate', function(event, result) {
            $scope.initiative_type = result;
        });
        $scope.$on('$destroy', unsubscribe);

    }]);

'use strict';

angular.module('dgdtoolApp')
    .factory('Initiative_type', ["$resource", "DateUtils", function ($resource, DateUtils) {
        return $resource('api/initiative_types/:id', {}, {
            'query': { method: 'GET', isArray: true},
            'get': {
                method: 'GET',
                transformResponse: function (data) {
                    data = angular.fromJson(data);
                    data.created_date = DateUtils.convertLocaleDateFromServer(data.created_date);
                    data.modified_date = DateUtils.convertLocaleDateFromServer(data.modified_date);
                    return data;
                }
            },
            'update': {
                method: 'PUT',
                transformRequest: function (data) {
                    data.created_date = DateUtils.convertLocaleDateToServer(data.created_date);
                    data.modified_date = DateUtils.convertLocaleDateToServer(data.modified_date);
                    return angular.toJson(data);
                }
            },
            'save': {
                method: 'POST',
                transformRequest: function (data) {
                    data.created_date = DateUtils.convertLocaleDateToServer(data.created_date);
                    data.modified_date = DateUtils.convertLocaleDateToServer(data.modified_date);
                    return angular.toJson(data);
                }
            }
        });
    }]);

'use strict';

angular.module('dgdtoolApp')
    .factory('Initiative_typeSearch', ["$resource", function ($resource) {
        return $resource('api/_search/initiative_types/:query', {}, {
            'query': { method: 'GET', isArray: true}
        });
    }]);

'use strict';

angular.module('dgdtoolApp')
    .config(["$stateProvider", function ($stateProvider) {
        $stateProvider
            .state('menu', {
                parent: 'entity',
                url: '/menus',
                data: {
                    authorities: ['ROLE_USER'],
                    pageTitle: 'dgdtoolApp.menu.home.title'
                },
                views: {
                    'content@': {
                        templateUrl: 'scripts/app/entities/menu/menus.html',
                        controller: 'MenuController'
                    }
                },
                resolve: {
                    translatePartialLoader: ['$translate', '$translatePartialLoader', function ($translate, $translatePartialLoader) {
                        $translatePartialLoader.addPart('menu');
                        $translatePartialLoader.addPart('global');
                        return $translate.refresh();
                    }]
                }
            })
            .state('menu.detail', {
                parent: 'entity',
                url: '/menu/{id}',
                data: {
                    authorities: ['ROLE_USER'],
                    pageTitle: 'dgdtoolApp.menu.detail.title'
                },
                views: {
                    'content@': {
                        templateUrl: 'scripts/app/entities/menu/menu-detail.html',
                        controller: 'MenuDetailController'
                    }
                },
                resolve: {
                    translatePartialLoader: ['$translate', '$translatePartialLoader', function ($translate, $translatePartialLoader) {
                        $translatePartialLoader.addPart('menu');
                        return $translate.refresh();
                    }],
                    entity: ['$stateParams', 'Menu', function($stateParams, Menu) {
                        return Menu.get({id : $stateParams.id});
                    }]
                }
            })
            .state('menu.new', {
                parent: 'menu',
                url: '/new',
                data: {
                    authorities: ['ROLE_USER'],
                },
                onEnter: ['$stateParams', '$state', '$modal', function($stateParams, $state, $modal) {
                    $modal.open({
                        templateUrl: 'scripts/app/entities/menu/menu-dialog.html',
                        controller: 'MenuDialogController',
                        size: 'lg',
                        resolve: {
                            entity: function () {
                                return {
                                    parent_menu_id: null,
                                    menu_item_name: null,
                                    controller_url: null,
                                    display_order: null,
                                    menu_hint: null,
                                    description: null,
                                    status_id: null,
                                    created_by: null,
                                    created_date: null,
                                    modified_by: null,
                                    modified_date: null,
                                    id: null
                                };
                            }
                        }
                    }).result.then(function(result) {
                        $state.go('menu', null, { reload: true });
                    }, function() {
                        $state.go('menu');
                    })
                }]
            })
            .state('menu.edit', {
                parent: 'menu',
                url: '/{id}/edit',
                data: {
                    authorities: ['ROLE_USER'],
                },
                onEnter: ['$stateParams', '$state', '$modal', function($stateParams, $state, $modal) {
                    $modal.open({
                        templateUrl: 'scripts/app/entities/menu/menu-dialog.html',
                        controller: 'MenuDialogController',
                        size: 'lg',
                        resolve: {
                            entity: ['Menu', function(Menu) {
                                return Menu.get({id : $stateParams.id});
                            }]
                        }
                    }).result.then(function(result) {
                        $state.go('menu', null, { reload: true });
                    }, function() {
                        $state.go('^');
                    })
                }]
            });
    }]);

'use strict';

angular.module('dgdtoolApp')
    .controller('MenuController', ["$scope", "Menu", "MenuSearch", "ParseLinks", function ($scope, Menu, MenuSearch, ParseLinks) {
        $scope.menus = [];
        $scope.page = 0;
        $scope.loadAll = function() {
            Menu.query({page: $scope.page, size: 20}, function(result, headers) {
                $scope.links = ParseLinks.parse(headers('link'));
                $scope.menus = result;
            });
        };
        $scope.loadPage = function(page) {
            $scope.page = page;
            $scope.loadAll();
        };
        $scope.loadAll();

        $scope['delete'] = function (id) {
            Menu.get({id: id}, function(result) {
                $scope.menu = result;
                $('#deleteMenuConfirmation').modal('show');
            });
        };

        $scope.confirmDelete = function (id) {
            Menu['delete']({id: id},
                function () {
                    $scope.loadAll();
                    $('#deleteMenuConfirmation').modal('hide');
                    $scope.clear();
                });
        };

        $scope.search = function () {
            MenuSearch.query({query: $scope.searchQuery}, function(result) {
                $scope.menus = result;
            }, function(response) {
                if(response.status === 404) {
                    $scope.loadAll();
                }
            });
        };

        $scope.refresh = function () {
            $scope.loadAll();
            $scope.clear();
        };

        $scope.clear = function () {
            $scope.menu = {
                parent_menu_id: null,
                menu_item_name: null,
                controller_url: null,
                display_order: null,
                menu_hint: null,
                description: null,
                status_id: null,
                created_by: null,
                created_date: null,
                modified_by: null,
                modified_date: null,
                id: null
            };
        };
    }]);

'use strict';

angular.module('dgdtoolApp').controller('MenuDialogController',
    ['$scope', '$stateParams', '$modalInstance', 'entity', 'Menu',
        function($scope, $stateParams, $modalInstance, entity, Menu) {

        $scope.menu = entity;
        $scope.load = function(id) {
            Menu.get({id : id}, function(result) {
                $scope.menu = result;
            });
        };

        var onSaveFinished = function (result) {
            $scope.$emit('dgdtoolApp:menuUpdate', result);
            $modalInstance.close(result);
        };

        $scope.save = function () {
            if ($scope.menu.id != null) {
                Menu.update($scope.menu, onSaveFinished);
            } else {
                Menu.save($scope.menu, onSaveFinished);
            }
        };

        $scope.clear = function() {
            $modalInstance.dismiss('cancel');
        };
}]);

'use strict';

angular.module('dgdtoolApp')
    .controller('MenuDetailController', ["$scope", "$rootScope", "$stateParams", "entity", "Menu", function ($scope, $rootScope, $stateParams, entity, Menu) {
        $scope.menu = entity;
        $scope.load = function (id) {
            Menu.get({id: id}, function(result) {
                $scope.menu = result;
            });
        };
        var unsubscribe = $rootScope.$on('dgdtoolApp:menuUpdate', function(event, result) {
            $scope.menu = result;
        });
        $scope.$on('$destroy', unsubscribe);

    }]);

'use strict';

angular.module('dgdtoolApp')
    .factory('Menu', ["$resource", "DateUtils", function ($resource, DateUtils) {
        return $resource('api/menus/:id', {}, {
            'query': { method: 'GET', isArray: true},
            'get': {
                method: 'GET',
                transformResponse: function (data) {
                    data = angular.fromJson(data);
                    data.created_date = DateUtils.convertLocaleDateFromServer(data.created_date);
                    data.modified_date = DateUtils.convertLocaleDateFromServer(data.modified_date);
                    return data;
                }
            },
            'update': {
                method: 'PUT',
                transformRequest: function (data) {
                    data.created_date = DateUtils.convertLocaleDateToServer(data.created_date);
                    data.modified_date = DateUtils.convertLocaleDateToServer(data.modified_date);
                    return angular.toJson(data);
                }
            },
            'save': {
                method: 'POST',
                transformRequest: function (data) {
                    data.created_date = DateUtils.convertLocaleDateToServer(data.created_date);
                    data.modified_date = DateUtils.convertLocaleDateToServer(data.modified_date);
                    return angular.toJson(data);
                }
            }
        });
    }]);

'use strict';

angular.module('dgdtoolApp')
    .factory('MenuSearch', ["$resource", function ($resource) {
        return $resource('api/_search/menus/:query', {}, {
            'query': { method: 'GET', isArray: true}
        });
    }]);

'use strict';

angular.module('dgdtoolApp')
    .config(["$stateProvider", function ($stateProvider) {
        $stateProvider
            .state('message', {
                parent: 'entity',
                url: '/messages',
                data: {
                    authorities: ['ROLE_USER'],
                    pageTitle: 'dgdtoolApp.message.home.title'
                },
                views: {
                    'content@': {
                        templateUrl: 'scripts/app/entities/message/messages.html',
                        controller: 'MessageController'
                    }
                },
                resolve: {
                    translatePartialLoader: ['$translate', '$translatePartialLoader', function ($translate, $translatePartialLoader) {
                        $translatePartialLoader.addPart('message');
                        $translatePartialLoader.addPart('global');
                        return $translate.refresh();
                    }]
                }
            })
            .state('message.detail', {
                parent: 'entity',
                url: '/message/{id}',
                data: {
                    authorities: ['ROLE_USER'],
                    pageTitle: 'dgdtoolApp.message.detail.title'
                },
                views: {
                    'content@': {
                        templateUrl: 'scripts/app/entities/message/message-detail.html',
                        controller: 'MessageDetailController'
                    }
                },
                resolve: {
                    translatePartialLoader: ['$translate', '$translatePartialLoader', function ($translate, $translatePartialLoader) {
                        $translatePartialLoader.addPart('message');
                        return $translate.refresh();
                    }],
                    entity: ['$stateParams', 'Message', function($stateParams, Message) {
                        return Message.get({id : $stateParams.id});
                    }]
                }
            })
            .state('message.new', {
                parent: 'message',
                url: '/new',
                data: {
                    authorities: ['ROLE_USER'],
                },
                onEnter: ['$stateParams', '$state', '$modal', function($stateParams, $state, $modal) {
                    $modal.open({
                        templateUrl: 'scripts/app/entities/message/message-dialog.html',
                        controller: 'MessageDialogController',
                        size: 'lg',
                        resolve: {
                            entity: function () {
                                return {
                                    sender_id: null,
                                    recipient_id: null,
                                    sender_deleted: null,
                                    recipient_deleted: null,
                                    recipient_viewed: null,
                                    message: null,
                                    status_id: null,
                                    created_by: null,
                                    created_date: null,
                                    modified_by: null,
                                    modified_date: null,
                                    id: null
                                };
                            }
                        }
                    }).result.then(function(result) {
                        $state.go('message', null, { reload: true });
                    }, function() {
                        $state.go('message');
                    })
                }]
            })
            .state('message.edit', {
                parent: 'message',
                url: '/{id}/edit',
                data: {
                    authorities: ['ROLE_USER'],
                },
                onEnter: ['$stateParams', '$state', '$modal', function($stateParams, $state, $modal) {
                    $modal.open({
                        templateUrl: 'scripts/app/entities/message/message-dialog.html',
                        controller: 'MessageDialogController',
                        size: 'lg',
                        resolve: {
                            entity: ['Message', function(Message) {
                                return Message.get({id : $stateParams.id});
                            }]
                        }
                    }).result.then(function(result) {
                        $state.go('message', null, { reload: true });
                    }, function() {
                        $state.go('^');
                    })
                }]
            });
    }]);

'use strict';

angular.module('dgdtoolApp')
    .controller('MessageController', ["$scope", "Message", "MessageSearch", "ParseLinks", function ($scope, Message, MessageSearch, ParseLinks) {
        $scope.messages = [];
        $scope.page = 0;
        $scope.loadAll = function() {
            Message.query({page: $scope.page, size: 20}, function(result, headers) {
                $scope.links = ParseLinks.parse(headers('link'));
                $scope.messages = result;
            });
        };
        $scope.loadPage = function(page) {
            $scope.page = page;
            $scope.loadAll();
        };
        $scope.loadAll();

        $scope['delete'] = function (id) {
            Message.get({id: id}, function(result) {
                $scope.message = result;
                $('#deleteMessageConfirmation').modal('show');
            });
        };

        $scope.confirmDelete = function (id) {
            Message['delete']({id: id},
                function () {
                    $scope.loadAll();
                    $('#deleteMessageConfirmation').modal('hide');
                    $scope.clear();
                });
        };

        $scope.search = function () {
            MessageSearch.query({query: $scope.searchQuery}, function(result) {
                $scope.messages = result;
            }, function(response) {
                if(response.status === 404) {
                    $scope.loadAll();
                }
            });
        };

        $scope.refresh = function () {
            $scope.loadAll();
            $scope.clear();
        };

        $scope.clear = function () {
            $scope.message = {
                sender_id: null,
                recipient_id: null,
                sender_deleted: null,
                recipient_deleted: null,
                recipient_viewed: null,
                message: null,
                status_id: null,
                created_by: null,
                created_date: null,
                modified_by: null,
                modified_date: null,
                id: null
            };
        };
    }]);

'use strict';

angular.module('dgdtoolApp').controller('MessageDialogController',
    ['$scope', '$stateParams', '$modalInstance', 'entity', 'Message',
        function($scope, $stateParams, $modalInstance, entity, Message) {

        $scope.message = entity;
        $scope.load = function(id) {
            Message.get({id : id}, function(result) {
                $scope.message = result;
            });
        };

        var onSaveFinished = function (result) {
            $scope.$emit('dgdtoolApp:messageUpdate', result);
            $modalInstance.close(result);
        };

        $scope.save = function () {
            if ($scope.message.id != null) {
                Message.update($scope.message, onSaveFinished);
            } else {
                Message.save($scope.message, onSaveFinished);
            }
        };

        $scope.clear = function() {
            $modalInstance.dismiss('cancel');
        };
}]);

'use strict';

angular.module('dgdtoolApp')
    .controller('MessageDetailController', ["$scope", "$rootScope", "$stateParams", "entity", "Message", function ($scope, $rootScope, $stateParams, entity, Message) {
        $scope.message = entity;
        $scope.load = function (id) {
            Message.get({id: id}, function(result) {
                $scope.message = result;
            });
        };
        var unsubscribe = $rootScope.$on('dgdtoolApp:messageUpdate', function(event, result) {
            $scope.message = result;
        });
        $scope.$on('$destroy', unsubscribe);

    }]);

'use strict';

angular.module('dgdtoolApp')
    .factory('Message', ["$resource", "DateUtils", function ($resource, DateUtils) {
        return $resource('api/messages/:id', {}, {
            'query': { method: 'GET', isArray: true},
            'get': {
                method: 'GET',
                transformResponse: function (data) {
                    data = angular.fromJson(data);
                    data.created_date = DateUtils.convertLocaleDateFromServer(data.created_date);
                    data.modified_date = DateUtils.convertLocaleDateFromServer(data.modified_date);
                    return data;
                }
            },
            'update': {
                method: 'PUT',
                transformRequest: function (data) {
                    data.created_date = DateUtils.convertLocaleDateToServer(data.created_date);
                    data.modified_date = DateUtils.convertLocaleDateToServer(data.modified_date);
                    return angular.toJson(data);
                }
            },
            'save': {
                method: 'POST',
                transformRequest: function (data) {
                    data.created_date = DateUtils.convertLocaleDateToServer(data.created_date);
                    data.modified_date = DateUtils.convertLocaleDateToServer(data.modified_date);
                    return angular.toJson(data);
                }
            }
        });
    }]);

'use strict';

angular.module('dgdtoolApp')
    .factory('MessageSearch', ["$resource", function ($resource) {
        return $resource('api/_search/messages/:query', {}, {
            'query': { method: 'GET', isArray: true}
        });
    }]);

'use strict';

angular.module('dgdtoolApp')
    .config(["$stateProvider", function ($stateProvider) {
        $stateProvider
            .state('partner', {
                parent: 'entity',
                url: '/partners',
                data: {
                    authorities: ['ROLE_USER'],
                    pageTitle: 'dgdtoolApp.partner.home.title'
                },
                views: {
                    'content@': {
                        templateUrl: 'scripts/app/entities/partner/partners.html',
                        controller: 'PartnerController'
                    }
                },
                resolve: {
                    translatePartialLoader: ['$translate', '$translatePartialLoader', function ($translate, $translatePartialLoader) {
                        $translatePartialLoader.addPart('partner');
                        $translatePartialLoader.addPart('global');
                        return $translate.refresh();
                    }]
                }
            })
            .state('partner.detail', {
                parent: 'entity',
                url: '/partner/{id}',
                data: {
                    authorities: ['ROLE_USER'],
                    pageTitle: 'dgdtoolApp.partner.detail.title'
                },
                views: {
                    'content@': {
                        templateUrl: 'scripts/app/entities/partner/partner-detail.html',
                        controller: 'PartnerDetailController'
                    }
                },
                resolve: {
                    translatePartialLoader: ['$translate', '$translatePartialLoader', function ($translate, $translatePartialLoader) {
                        $translatePartialLoader.addPart('partner');
                        return $translate.refresh();
                    }],
                    entity: ['$stateParams', 'Partner', function($stateParams, Partner) {
                        return Partner.get({id : $stateParams.id});
                    }]
                }
            })
            .state('partner.new', {
                parent: 'partner',
                url: '/new',
                data: {
                    authorities: ['ROLE_USER'],
                },
                onEnter: ['$stateParams', '$state', '$modal', function($stateParams, $state, $modal) {
                    $modal.open({
                        templateUrl: 'scripts/app/entities/partner/partner-dialog.html',
                        controller: 'PartnerDialogController',
                        size: 'lg',
                        resolve: {
                            entity: function () {
                                return {
                                    partner_name: null,
                                    partner_key: null,
                                    partner_base_url: null,
                                    partner_broker_url: null,
                                    description: null,
                                    status_id: null,
                                    created_by: null,
                                    created_date: null,
                                    modified_by: null,
                                    modified_date: null,
                                    id: null
                                };
                            }
                        }
                    }).result.then(function(result) {
                        $state.go('partner', null, { reload: true });
                    }, function() {
                        $state.go('partner');
                    })
                }]
            })
            .state('partner.edit', {
                parent: 'partner',
                url: '/{id}/edit',
                data: {
                    authorities: ['ROLE_USER'],
                },
                onEnter: ['$stateParams', '$state', '$modal', function($stateParams, $state, $modal) {
                    $modal.open({
                        templateUrl: 'scripts/app/entities/partner/partner-dialog.html',
                        controller: 'PartnerDialogController',
                        size: 'lg',
                        resolve: {
                            entity: ['Partner', function(Partner) {
                                return Partner.get({id : $stateParams.id});
                            }]
                        }
                    }).result.then(function(result) {
                        $state.go('partner', null, { reload: true });
                    }, function() {
                        $state.go('^');
                    })
                }]
            });
    }]);

'use strict';

angular.module('dgdtoolApp')
    .controller('PartnerController', ["$scope", "Partner", "PartnerSearch", "ParseLinks", function ($scope, Partner, PartnerSearch, ParseLinks) {
        $scope.partners = [];
        $scope.page = 0;
        $scope.loadAll = function() {
            Partner.query({page: $scope.page, size: 20}, function(result, headers) {
                $scope.links = ParseLinks.parse(headers('link'));
                $scope.partners = result;
            });
        };
        $scope.loadPage = function(page) {
            $scope.page = page;
            $scope.loadAll();
        };
        $scope.loadAll();

        $scope['delete'] = function (id) {
            Partner.get({id: id}, function(result) {
                $scope.partner = result;
                $('#deletePartnerConfirmation').modal('show');
            });
        };

        $scope.confirmDelete = function (id) {
            Partner['delete']({id: id},
                function () {
                    $scope.loadAll();
                    $('#deletePartnerConfirmation').modal('hide');
                    $scope.clear();
                });
        };

        $scope.search = function () {
            PartnerSearch.query({query: $scope.searchQuery}, function(result) {
                $scope.partners = result;
            }, function(response) {
                if(response.status === 404) {
                    $scope.loadAll();
                }
            });
        };

        $scope.refresh = function () {
            $scope.loadAll();
            $scope.clear();
        };

        $scope.clear = function () {
            $scope.partner = {
                partner_name: null,
                partner_key: null,
                partner_base_url: null,
                partner_broker_url: null,
                description: null,
                status_id: null,
                created_by: null,
                created_date: null,
                modified_by: null,
                modified_date: null,
                id: null
            };
        };
    }]);

'use strict';

angular.module('dgdtoolApp').controller('PartnerDialogController',
    ['$scope', '$stateParams', '$modalInstance', 'entity', 'Partner',
        function($scope, $stateParams, $modalInstance, entity, Partner) {

        $scope.partner = entity;
        $scope.load = function(id) {
            Partner.get({id : id}, function(result) {
                $scope.partner = result;
            });
        };

        var onSaveFinished = function (result) {
            $scope.$emit('dgdtoolApp:partnerUpdate', result);
            $modalInstance.close(result);
        };

        $scope.save = function () {
            if ($scope.partner.id != null) {
                Partner.update($scope.partner, onSaveFinished);
            } else {
                Partner.save($scope.partner, onSaveFinished);
            }
        };

        $scope.clear = function() {
            $modalInstance.dismiss('cancel');
        };
}]);

'use strict';

angular.module('dgdtoolApp')
    .controller('PartnerDetailController', ["$scope", "$rootScope", "$stateParams", "entity", "Partner", function ($scope, $rootScope, $stateParams, entity, Partner) {
        $scope.partner = entity;
        $scope.load = function (id) {
            Partner.get({id: id}, function(result) {
                $scope.partner = result;
            });
        };
        var unsubscribe = $rootScope.$on('dgdtoolApp:partnerUpdate', function(event, result) {
            $scope.partner = result;
        });
        $scope.$on('$destroy', unsubscribe);

    }]);

'use strict';

angular.module('dgdtoolApp')
    .factory('Partner', ["$resource", "DateUtils", function ($resource, DateUtils) {
        return $resource('api/partners/:id', {}, {
            'query': { method: 'GET', isArray: true},
            'get': {
                method: 'GET',
                transformResponse: function (data) {
                    data = angular.fromJson(data);
                    data.created_date = DateUtils.convertLocaleDateFromServer(data.created_date);
                    data.modified_date = DateUtils.convertLocaleDateFromServer(data.modified_date);
                    return data;
                }
            },
            'update': {
                method: 'PUT',
                transformRequest: function (data) {
                    data.created_date = DateUtils.convertLocaleDateToServer(data.created_date);
                    data.modified_date = DateUtils.convertLocaleDateToServer(data.modified_date);
                    return angular.toJson(data);
                }
            },
            'save': {
                method: 'POST',
                transformRequest: function (data) {
                    data.created_date = DateUtils.convertLocaleDateToServer(data.created_date);
                    data.modified_date = DateUtils.convertLocaleDateToServer(data.modified_date);
                    return angular.toJson(data);
                }
            }
        });
    }]);

'use strict';

angular.module('dgdtoolApp')
    .factory('PartnerSearch', ["$resource", function ($resource) {
        return $resource('api/_search/partners/:query', {}, {
            'query': { method: 'GET', isArray: true}
        });
    }]);

'use strict';

angular.module('dgdtoolApp')
    .config(["$stateProvider", function ($stateProvider) {
        $stateProvider
            .state('partner_api', {
                parent: 'entity',
                url: '/partner_apis',
                data: {
                    authorities: ['ROLE_USER'],
                    pageTitle: 'dgdtoolApp.partner_api.home.title'
                },
                views: {
                    'content@': {
                        templateUrl: 'scripts/app/entities/partner_api/partner_apis.html',
                        controller: 'Partner_apiController'
                    }
                },
                resolve: {
                    translatePartialLoader: ['$translate', '$translatePartialLoader', function ($translate, $translatePartialLoader) {
                        $translatePartialLoader.addPart('partner_api');
                        $translatePartialLoader.addPart('global');
                        return $translate.refresh();
                    }]
                }
            })
            .state('partner_api.detail', {
                parent: 'entity',
                url: '/partner_api/{id}',
                data: {
                    authorities: ['ROLE_USER'],
                    pageTitle: 'dgdtoolApp.partner_api.detail.title'
                },
                views: {
                    'content@': {
                        templateUrl: 'scripts/app/entities/partner_api/partner_api-detail.html',
                        controller: 'Partner_apiDetailController'
                    }
                },
                resolve: {
                    translatePartialLoader: ['$translate', '$translatePartialLoader', function ($translate, $translatePartialLoader) {
                        $translatePartialLoader.addPart('partner_api');
                        return $translate.refresh();
                    }],
                    entity: ['$stateParams', 'Partner_api', function($stateParams, Partner_api) {
                        return Partner_api.get({id : $stateParams.id});
                    }]
                }
            })
            .state('partner_api.new', {
                parent: 'partner_api',
                url: '/new',
                data: {
                    authorities: ['ROLE_USER'],
                },
                onEnter: ['$stateParams', '$state', '$modal', function($stateParams, $state, $modal) {
                    $modal.open({
                        templateUrl: 'scripts/app/entities/partner_api/partner_api-dialog.html',
                        controller: 'Partner_apiDialogController',
                        size: 'lg',
                        resolve: {
                            entity: function () {
                                return {
                                    partner_id: null,
                                    partner_req_url: null,
                                    partner_req_obj: null,
                                    partner_res_url: null,
                                    asp_method: null,
                                    asp_app_id: null,
                                    description: null,
                                    status_id: null,
                                    created_by: null,
                                    created_date: null,
                                    modified_by: null,
                                    modified_date: null,
                                    id: null
                                };
                            }
                        }
                    }).result.then(function(result) {
                        $state.go('partner_api', null, { reload: true });
                    }, function() {
                        $state.go('partner_api');
                    })
                }]
            })
            .state('partner_api.edit', {
                parent: 'partner_api',
                url: '/{id}/edit',
                data: {
                    authorities: ['ROLE_USER'],
                },
                onEnter: ['$stateParams', '$state', '$modal', function($stateParams, $state, $modal) {
                    $modal.open({
                        templateUrl: 'scripts/app/entities/partner_api/partner_api-dialog.html',
                        controller: 'Partner_apiDialogController',
                        size: 'lg',
                        resolve: {
                            entity: ['Partner_api', function(Partner_api) {
                                return Partner_api.get({id : $stateParams.id});
                            }]
                        }
                    }).result.then(function(result) {
                        $state.go('partner_api', null, { reload: true });
                    }, function() {
                        $state.go('^');
                    })
                }]
            });
    }]);

'use strict';

angular.module('dgdtoolApp')
    .controller('Partner_apiController', ["$scope", "Partner_api", "Partner_apiSearch", "ParseLinks", function ($scope, Partner_api, Partner_apiSearch, ParseLinks) {
        $scope.partner_apis = [];
        $scope.page = 0;
        $scope.loadAll = function() {
            Partner_api.query({page: $scope.page, size: 20}, function(result, headers) {
                $scope.links = ParseLinks.parse(headers('link'));
                $scope.partner_apis = result;
            });
        };
        $scope.loadPage = function(page) {
            $scope.page = page;
            $scope.loadAll();
        };
        $scope.loadAll();

        $scope['delete'] = function (id) {
            Partner_api.get({id: id}, function(result) {
                $scope.partner_api = result;
                $('#deletePartner_apiConfirmation').modal('show');
            });
        };

        $scope.confirmDelete = function (id) {
            Partner_api['delete']({id: id},
                function () {
                    $scope.loadAll();
                    $('#deletePartner_apiConfirmation').modal('hide');
                    $scope.clear();
                });
        };

        $scope.search = function () {
            Partner_apiSearch.query({query: $scope.searchQuery}, function(result) {
                $scope.partner_apis = result;
            }, function(response) {
                if(response.status === 404) {
                    $scope.loadAll();
                }
            });
        };

        $scope.refresh = function () {
            $scope.loadAll();
            $scope.clear();
        };

        $scope.clear = function () {
            $scope.partner_api = {
                partner_id: null,
                partner_req_url: null,
                partner_req_obj: null,
                partner_res_url: null,
                asp_method: null,
                asp_app_id: null,
                description: null,
                status_id: null,
                created_by: null,
                created_date: null,
                modified_by: null,
                modified_date: null,
                id: null
            };
        };
    }]);

'use strict';

angular.module('dgdtoolApp').controller('Partner_apiDialogController',
    ['$scope', '$stateParams', '$modalInstance', 'entity', 'Partner_api',
        function($scope, $stateParams, $modalInstance, entity, Partner_api) {

        $scope.partner_api = entity;
        $scope.load = function(id) {
            Partner_api.get({id : id}, function(result) {
                $scope.partner_api = result;
            });
        };

        var onSaveFinished = function (result) {
            $scope.$emit('dgdtoolApp:partner_apiUpdate', result);
            $modalInstance.close(result);
        };

        $scope.save = function () {
            if ($scope.partner_api.id != null) {
                Partner_api.update($scope.partner_api, onSaveFinished);
            } else {
                Partner_api.save($scope.partner_api, onSaveFinished);
            }
        };

        $scope.clear = function() {
            $modalInstance.dismiss('cancel');
        };
}]);

'use strict';

angular.module('dgdtoolApp')
    .controller('Partner_apiDetailController', ["$scope", "$rootScope", "$stateParams", "entity", "Partner_api", function ($scope, $rootScope, $stateParams, entity, Partner_api) {
        $scope.partner_api = entity;
        $scope.load = function (id) {
            Partner_api.get({id: id}, function(result) {
                $scope.partner_api = result;
            });
        };
        var unsubscribe = $rootScope.$on('dgdtoolApp:partner_apiUpdate', function(event, result) {
            $scope.partner_api = result;
        });
        $scope.$on('$destroy', unsubscribe);

    }]);

'use strict';

angular.module('dgdtoolApp')
    .factory('Partner_api', ["$resource", "DateUtils", function ($resource, DateUtils) {
        return $resource('api/partner_apis/:id', {}, {
            'query': { method: 'GET', isArray: true},
            'get': {
                method: 'GET',
                transformResponse: function (data) {
                    data = angular.fromJson(data);
                    data.created_date = DateUtils.convertLocaleDateFromServer(data.created_date);
                    data.modified_date = DateUtils.convertLocaleDateFromServer(data.modified_date);
                    return data;
                }
            },
            'update': {
                method: 'PUT',
                transformRequest: function (data) {
                    data.created_date = DateUtils.convertLocaleDateToServer(data.created_date);
                    data.modified_date = DateUtils.convertLocaleDateToServer(data.modified_date);
                    return angular.toJson(data);
                }
            },
            'save': {
                method: 'POST',
                transformRequest: function (data) {
                    data.created_date = DateUtils.convertLocaleDateToServer(data.created_date);
                    data.modified_date = DateUtils.convertLocaleDateToServer(data.modified_date);
                    return angular.toJson(data);
                }
            }
        });
    }]);

'use strict';

angular.module('dgdtoolApp')
    .factory('Partner_apiSearch', ["$resource", function ($resource) {
        return $resource('api/_search/partner_apis/:query', {}, {
            'query': { method: 'GET', isArray: true}
        });
    }]);

'use strict';

angular.module('dgdtoolApp')
    .config(["$stateProvider", function ($stateProvider) {
        $stateProvider
            .state('project', {
                parent: 'entity',
                url: '/projects',
                data: {
                    authorities: ['ROLE_USER'],
                    pageTitle: 'dgdtoolApp.project.home.title'
                },
                views: {
                    'content@': {
                        templateUrl: 'scripts/app/entities/project/projects.html',
                        controller: 'ProjectController'
                    }
                },
                resolve: {
                    translatePartialLoader: ['$translate', '$translatePartialLoader', function ($translate, $translatePartialLoader) {
                        $translatePartialLoader.addPart('project');
                        $translatePartialLoader.addPart('global');
                        return $translate.refresh();
                    }]
                }
            })
            .state('project.detail', {
                parent: 'entity',
                url: '/project/{id}',
                data: {
                    authorities: ['ROLE_USER'],
                    pageTitle: 'dgdtoolApp.project.detail.title'
                },
                views: {
                    'content@': {
                        templateUrl: 'scripts/app/entities/project/project-detail.html',
                        controller: 'ProjectDetailController'
                    }
                },
                resolve: {
                    translatePartialLoader: ['$translate', '$translatePartialLoader', function ($translate, $translatePartialLoader) {
                        $translatePartialLoader.addPart('project');
                        return $translate.refresh();
                    }],
                    entity: ['$stateParams', 'Project', function($stateParams, Project) {
                        return Project.get({id : $stateParams.id});
                    }]
                }
            })
            .state('project.new', {
                parent: 'project',
                url: '/new',
                data: {
                    authorities: ['ROLE_USER'],
                },
                onEnter: ['$stateParams', '$state', '$modal', function($stateParams, $state, $modal) {
                    $modal.open({
                        templateUrl: 'scripts/app/entities/project/project-dialog.html',
                        controller: 'ProjectDialogController',
                        size: 'lg',
                        resolve: {
                            entity: function () {
                                return {
                                    requestor_id: null,
                                    associated_project_id: null,
                                    initiative_id: null,
                                    ticket_id: null,
                                    service_id: null,
                                    app_id: null,
                                    package_id: null,
                                    legacy_owner: null,
                                    business_unit: null,
                                    planned_start_date: null,
                                    planned_end_date: null,
                                    description: null,
                                    status_id: null,
                                    created_by: null,
                                    created_date: null,
                                    modified_by: null,
                                    modified_date: null,
                                    id: null
                                };
                            }
                        }
                    }).result.then(function(result) {
                        $state.go('project', null, { reload: true });
                    }, function() {
                        $state.go('project');
                    })
                }]
            })
            .state('project.edit', {
                parent: 'project',
                url: '/{id}/edit',
                data: {
                    authorities: ['ROLE_USER'],
                },
                onEnter: ['$stateParams', '$state', '$modal', function($stateParams, $state, $modal) {
                    $modal.open({
                        templateUrl: 'scripts/app/entities/project/project-dialog.html',
                        controller: 'ProjectDialogController',
                        size: 'lg',
                        resolve: {
                            entity: ['Project', function(Project) {
                                return Project.get({id : $stateParams.id});
                            }]
                        }
                    }).result.then(function(result) {
                        $state.go('project', null, { reload: true });
                    }, function() {
                        $state.go('^');
                    })
                }]
            });
    }]);

'use strict';

angular.module('dgdtoolApp')
    .controller('ProjectController', ["$scope", "Project", "ProjectSearch", "ParseLinks", function ($scope, Project, ProjectSearch, ParseLinks) {
        $scope.projects = [];
        $scope.page = 0;
        $scope.loadAll = function() {
            Project.query({page: $scope.page, size: 20}, function(result, headers) {
                $scope.links = ParseLinks.parse(headers('link'));
                $scope.projects = result;
            });
        };
        $scope.loadPage = function(page) {
            $scope.page = page;
            $scope.loadAll();
        };
        $scope.loadAll();

        $scope['delete'] = function (id) {
            Project.get({id: id}, function(result) {
                $scope.project = result;
                $('#deleteProjectConfirmation').modal('show');
            });
        };

        $scope.confirmDelete = function (id) {
            Project['delete']({id: id},
                function () {
                    $scope.loadAll();
                    $('#deleteProjectConfirmation').modal('hide');
                    $scope.clear();
                });
        };

        $scope.search = function () {
            ProjectSearch.query({query: $scope.searchQuery}, function(result) {
                $scope.projects = result;
            }, function(response) {
                if(response.status === 404) {
                    $scope.loadAll();
                }
            });
        };

        $scope.refresh = function () {
            $scope.loadAll();
            $scope.clear();
        };

        $scope.clear = function () {
            $scope.project = {
                requestor_id: null,
                associated_project_id: null,
                initiative_id: null,
                ticket_id: null,
                service_id: null,
                app_id: null,
                package_id: null,
                legacy_owner: null,
                business_unit: null,
                planned_start_date: null,
                planned_end_date: null,
                description: null,
                status_id: null,
                created_by: null,
                created_date: null,
                modified_by: null,
                modified_date: null,
                id: null
            };
        };
    }]);

'use strict';

angular.module('dgdtoolApp').controller('ProjectDialogController',
    ['$scope', '$stateParams', '$modalInstance', 'entity', 'Project',
        function($scope, $stateParams, $modalInstance, entity, Project) {

        $scope.project = entity;
        $scope.load = function(id) {
            Project.get({id : id}, function(result) {
                $scope.project = result;
            });
        };

        var onSaveFinished = function (result) {
            $scope.$emit('dgdtoolApp:projectUpdate', result);
            $modalInstance.close(result);
        };

        $scope.save = function () {
            if ($scope.project.id != null) {
                Project.update($scope.project, onSaveFinished);
            } else {
                Project.save($scope.project, onSaveFinished);
            }
        };

        $scope.clear = function() {
            $modalInstance.dismiss('cancel');
        };
}]);

'use strict';

angular.module('dgdtoolApp')
    .controller('ProjectDetailController', ["$scope", "$rootScope", "$stateParams", "entity", "Project", function ($scope, $rootScope, $stateParams, entity, Project) {
        $scope.project = entity;
        $scope.load = function (id) {
            Project.get({id: id}, function(result) {
                $scope.project = result;
            });
        };
        var unsubscribe = $rootScope.$on('dgdtoolApp:projectUpdate', function(event, result) {
            $scope.project = result;
        });
        $scope.$on('$destroy', unsubscribe);

    }]);

'use strict';

angular.module('dgdtoolApp')
    .factory('Project', ["$resource", "DateUtils", function ($resource, DateUtils) {
        return $resource('api/projects/:id', {}, {
            'query': { method: 'GET', isArray: true},
            'get': {
                method: 'GET',
                transformResponse: function (data) {
                    data = angular.fromJson(data);
                    data.planned_start_date = DateUtils.convertDateTimeFromServer(data.planned_start_date);
                    data.planned_end_date = DateUtils.convertDateTimeFromServer(data.planned_end_date);
                    data.created_date = DateUtils.convertLocaleDateFromServer(data.created_date);
                    data.modified_date = DateUtils.convertLocaleDateFromServer(data.modified_date);
                    return data;
                }
            },
            'update': {
                method: 'PUT',
                transformRequest: function (data) {
                    data.created_date = DateUtils.convertLocaleDateToServer(data.created_date);
                    data.modified_date = DateUtils.convertLocaleDateToServer(data.modified_date);
                    return angular.toJson(data);
                }
            },
            'save': {
                method: 'POST',
                transformRequest: function (data) {
                    data.created_date = DateUtils.convertLocaleDateToServer(data.created_date);
                    data.modified_date = DateUtils.convertLocaleDateToServer(data.modified_date);
                    return angular.toJson(data);
                }
            }
        });
    }]);

'use strict';

angular.module('dgdtoolApp')
    .factory('ProjectSearch', ["$resource", function ($resource) {
        return $resource('api/_search/projects/:query', {}, {
            'query': { method: 'GET', isArray: true}
        });
    }]);

'use strict';

angular.module('dgdtoolApp')
    .config(["$stateProvider", function ($stateProvider) {
        $stateProvider
            .state('project_team', {
                parent: 'entity',
                url: '/project_teams',
                data: {
                    authorities: ['ROLE_USER'],
                    pageTitle: 'dgdtoolApp.project_team.home.title'
                },
                views: {
                    'content@': {
                        templateUrl: 'scripts/app/entities/project_team/project_teams.html',
                        controller: 'Project_teamController'
                    }
                },
                resolve: {
                    translatePartialLoader: ['$translate', '$translatePartialLoader', function ($translate, $translatePartialLoader) {
                        $translatePartialLoader.addPart('project_team');
                        $translatePartialLoader.addPart('global');
                        return $translate.refresh();
                    }]
                }
            })
            .state('project_team.detail', {
                parent: 'entity',
                url: '/project_team/{id}',
                data: {
                    authorities: ['ROLE_USER'],
                    pageTitle: 'dgdtoolApp.project_team.detail.title'
                },
                views: {
                    'content@': {
                        templateUrl: 'scripts/app/entities/project_team/project_team-detail.html',
                        controller: 'Project_teamDetailController'
                    }
                },
                resolve: {
                    translatePartialLoader: ['$translate', '$translatePartialLoader', function ($translate, $translatePartialLoader) {
                        $translatePartialLoader.addPart('project_team');
                        return $translate.refresh();
                    }],
                    entity: ['$stateParams', 'Project_team', function($stateParams, Project_team) {
                        return Project_team.get({id : $stateParams.id});
                    }]
                }
            })
            .state('project_team.new', {
                parent: 'project_team',
                url: '/new',
                data: {
                    authorities: ['ROLE_USER'],
                },
                onEnter: ['$stateParams', '$state', '$modal', function($stateParams, $state, $modal) {
                    $modal.open({
                        templateUrl: 'scripts/app/entities/project_team/project_team-dialog.html',
                        controller: 'Project_teamDialogController',
                        size: 'lg',
                        resolve: {
                            entity: function () {
                                return {
                                    project_id: null,
                                    resource_id: null,
                                    role_id: null,
                                    support_level: null,
                                    est_hours: null,
                                    assigned_date: null,
                                    description: null,
                                    status_id: null,
                                    created_by: null,
                                    created_date: null,
                                    modified_by: null,
                                    modified_date: null,
                                    id: null
                                };
                            }
                        }
                    }).result.then(function(result) {
                        $state.go('project_team', null, { reload: true });
                    }, function() {
                        $state.go('project_team');
                    })
                }]
            })
            .state('project_team.edit', {
                parent: 'project_team',
                url: '/{id}/edit',
                data: {
                    authorities: ['ROLE_USER'],
                },
                onEnter: ['$stateParams', '$state', '$modal', function($stateParams, $state, $modal) {
                    $modal.open({
                        templateUrl: 'scripts/app/entities/project_team/project_team-dialog.html',
                        controller: 'Project_teamDialogController',
                        size: 'lg',
                        resolve: {
                            entity: ['Project_team', function(Project_team) {
                                return Project_team.get({id : $stateParams.id});
                            }]
                        }
                    }).result.then(function(result) {
                        $state.go('project_team', null, { reload: true });
                    }, function() {
                        $state.go('^');
                    })
                }]
            });
    }]);

'use strict';

angular.module('dgdtoolApp')
    .controller('Project_teamController', ["$scope", "Project_team", "Project_teamSearch", "ParseLinks", function ($scope, Project_team, Project_teamSearch, ParseLinks) {
        $scope.project_teams = [];
        $scope.page = 0;
        $scope.loadAll = function() {
            Project_team.query({page: $scope.page, size: 20}, function(result, headers) {
                $scope.links = ParseLinks.parse(headers('link'));
                $scope.project_teams = result;
            });
        };
        $scope.loadPage = function(page) {
            $scope.page = page;
            $scope.loadAll();
        };
        $scope.loadAll();

        $scope['delete'] = function (id) {
            Project_team.get({id: id}, function(result) {
                $scope.project_team = result;
                $('#deleteProject_teamConfirmation').modal('show');
            });
        };

        $scope.confirmDelete = function (id) {
            Project_team['delete']({id: id},
                function () {
                    $scope.loadAll();
                    $('#deleteProject_teamConfirmation').modal('hide');
                    $scope.clear();
                });
        };

        $scope.search = function () {
            Project_teamSearch.query({query: $scope.searchQuery}, function(result) {
                $scope.project_teams = result;
            }, function(response) {
                if(response.status === 404) {
                    $scope.loadAll();
                }
            });
        };

        $scope.refresh = function () {
            $scope.loadAll();
            $scope.clear();
        };

        $scope.clear = function () {
            $scope.project_team = {
                project_id: null,
                resource_id: null,
                role_id: null,
                support_level: null,
                est_hours: null,
                assigned_date: null,
                description: null,
                status_id: null,
                created_by: null,
                created_date: null,
                modified_by: null,
                modified_date: null,
                id: null
            };
        };
    }]);

'use strict';

angular.module('dgdtoolApp').controller('Project_teamDialogController',
    ['$scope', '$stateParams', '$modalInstance', 'entity', 'Project_team',
        function($scope, $stateParams, $modalInstance, entity, Project_team) {

        $scope.project_team = entity;
        $scope.load = function(id) {
            Project_team.get({id : id}, function(result) {
                $scope.project_team = result;
            });
        };

        var onSaveFinished = function (result) {
            $scope.$emit('dgdtoolApp:project_teamUpdate', result);
            $modalInstance.close(result);
        };

        $scope.save = function () {
            if ($scope.project_team.id != null) {
                Project_team.update($scope.project_team, onSaveFinished);
            } else {
                Project_team.save($scope.project_team, onSaveFinished);
            }
        };

        $scope.clear = function() {
            $modalInstance.dismiss('cancel');
        };
}]);

'use strict';

angular.module('dgdtoolApp')
    .controller('Project_teamDetailController', ["$scope", "$rootScope", "$stateParams", "entity", "Project_team", function ($scope, $rootScope, $stateParams, entity, Project_team) {
        $scope.project_team = entity;
        $scope.load = function (id) {
            Project_team.get({id: id}, function(result) {
                $scope.project_team = result;
            });
        };
        var unsubscribe = $rootScope.$on('dgdtoolApp:project_teamUpdate', function(event, result) {
            $scope.project_team = result;
        });
        $scope.$on('$destroy', unsubscribe);

    }]);

'use strict';

angular.module('dgdtoolApp')
    .factory('Project_team', ["$resource", "DateUtils", function ($resource, DateUtils) {
        return $resource('api/project_teams/:id', {}, {
            'query': { method: 'GET', isArray: true},
            'get': {
                method: 'GET',
                transformResponse: function (data) {
                    data = angular.fromJson(data);
                    data.assigned_date = DateUtils.convertDateTimeFromServer(data.assigned_date);
                    data.created_date = DateUtils.convertLocaleDateFromServer(data.created_date);
                    data.modified_date = DateUtils.convertLocaleDateFromServer(data.modified_date);
                    return data;
                }
            },
            'update': {
                method: 'PUT',
                transformRequest: function (data) {
                    data.created_date = DateUtils.convertLocaleDateToServer(data.created_date);
                    data.modified_date = DateUtils.convertLocaleDateToServer(data.modified_date);
                    return angular.toJson(data);
                }
            },
            'save': {
                method: 'POST',
                transformRequest: function (data) {
                    data.created_date = DateUtils.convertLocaleDateToServer(data.created_date);
                    data.modified_date = DateUtils.convertLocaleDateToServer(data.modified_date);
                    return angular.toJson(data);
                }
            }
        });
    }]);

'use strict';

angular.module('dgdtoolApp')
    .factory('Project_teamSearch', ["$resource", function ($resource) {
        return $resource('api/_search/project_teams/:query', {}, {
            'query': { method: 'GET', isArray: true}
        });
    }]);

'use strict';

angular.module('dgdtoolApp')
    .config(["$stateProvider", function ($stateProvider) {
        $stateProvider
            .state('resource', {
                parent: 'entity',
                url: '/resources',
                data: {
                    authorities: ['ROLE_USER'],
                    pageTitle: 'dgdtoolApp.resource.home.title'
                },
                views: {
                    'content@': {
                        templateUrl: 'scripts/app/entities/resource/resources.html',
                        controller: 'ResourceController'
                    }
                },
                resolve: {
                    translatePartialLoader: ['$translate', '$translatePartialLoader', function ($translate, $translatePartialLoader) {
                        $translatePartialLoader.addPart('resource');
                        $translatePartialLoader.addPart('global');
                        return $translate.refresh();
                    }]
                }
            })
            .state('resource.detail', {
                parent: 'entity',
                url: '/resource/{id}',
                data: {
                    authorities: ['ROLE_USER'],
                    pageTitle: 'dgdtoolApp.resource.detail.title'
                },
                views: {
                    'content@': {
                        templateUrl: 'scripts/app/entities/resource/resource-detail.html',
                        controller: 'ResourceDetailController'
                    }
                },
                resolve: {
                    translatePartialLoader: ['$translate', '$translatePartialLoader', function ($translate, $translatePartialLoader) {
                        $translatePartialLoader.addPart('resource');
                        return $translate.refresh();
                    }],
                    entity: ['$stateParams', 'Resource', function($stateParams, Resource) {
                        return Resource.get({id : $stateParams.id});
                    }]
                }
            })
            .state('resource.new', {
                parent: 'resource',
                url: '/new',
                data: {
                    authorities: ['ROLE_USER'],
                },
                onEnter: ['$stateParams', '$state', '$modal', function($stateParams, $state, $modal) {
                    $modal.open({
                        templateUrl: 'scripts/app/entities/resource/resource-dialog.html',
                        controller: 'ResourceDialogController',
                        size: 'lg',
                        resolve: {
                            entity: function () {
                                return {
                                    resource_name: null,
                                    resource_number: null,
                                    description: null,
                                    status_id: null,
                                    created_by: null,
                                    created_date: null,
                                    modified_by: null,
                                    modified_date: null,
                                    id: null
                                };
                            }
                        }
                    }).result.then(function(result) {
                        $state.go('resource', null, { reload: true });
                    }, function() {
                        $state.go('resource');
                    })
                }]
            })
            .state('resource.edit', {
                parent: 'resource',
                url: '/{id}/edit',
                data: {
                    authorities: ['ROLE_USER'],
                },
                onEnter: ['$stateParams', '$state', '$modal', function($stateParams, $state, $modal) {
                    $modal.open({
                        templateUrl: 'scripts/app/entities/resource/resource-dialog.html',
                        controller: 'ResourceDialogController',
                        size: 'lg',
                        resolve: {
                            entity: ['Resource', function(Resource) {
                                return Resource.get({id : $stateParams.id});
                            }]
                        }
                    }).result.then(function(result) {
                        $state.go('resource', null, { reload: true });
                    }, function() {
                        $state.go('^');
                    })
                }]
            });
    }]);

'use strict';

angular.module('dgdtoolApp')
    .controller('ResourceController', ["$scope", "Resource", "ResourceSearch", "ParseLinks", function ($scope, Resource, ResourceSearch, ParseLinks) {
        $scope.resources = [];
        $scope.page = 0;
        $scope.loadAll = function() {
            Resource.query({page: $scope.page, size: 20}, function(result, headers) {
                $scope.links = ParseLinks.parse(headers('link'));
                $scope.resources = result;
            });
        };
        $scope.loadPage = function(page) {
            $scope.page = page;
            $scope.loadAll();
        };
        $scope.loadAll();

        $scope['delete'] = function (id) {
            Resource.get({id: id}, function(result) {
                $scope.resource = result;
                $('#deleteResourceConfirmation').modal('show');
            });
        };

        $scope.confirmDelete = function (id) {
            Resource['delete']({id: id},
                function () {
                    $scope.loadAll();
                    $('#deleteResourceConfirmation').modal('hide');
                    $scope.clear();
                });
        };

        $scope.search = function () {
            ResourceSearch.query({query: $scope.searchQuery}, function(result) {
                $scope.resources = result;
            }, function(response) {
                if(response.status === 404) {
                    $scope.loadAll();
                }
            });
        };

        $scope.refresh = function () {
            $scope.loadAll();
            $scope.clear();
        };

        $scope.clear = function () {
            $scope.resource = {
                resource_name: null,
                resource_number: null,
                description: null,
                status_id: null,
                created_by: null,
                created_date: null,
                modified_by: null,
                modified_date: null,
                id: null
            };
        };
    }]);

'use strict';

angular.module('dgdtoolApp').controller('ResourceDialogController',
    ['$scope', '$stateParams', '$modalInstance', 'entity', 'Resource',
        function($scope, $stateParams, $modalInstance, entity, Resource) {

        $scope.resource = entity;
        $scope.load = function(id) {
            Resource.get({id : id}, function(result) {
                $scope.resource = result;
            });
        };

        var onSaveFinished = function (result) {
            $scope.$emit('dgdtoolApp:resourceUpdate', result);
            $modalInstance.close(result);
        };

        $scope.save = function () {
            if ($scope.resource.id != null) {
                Resource.update($scope.resource, onSaveFinished);
            } else {
                Resource.save($scope.resource, onSaveFinished);
            }
        };

        $scope.clear = function() {
            $modalInstance.dismiss('cancel');
        };
}]);

'use strict';

angular.module('dgdtoolApp')
    .controller('ResourceDetailController', ["$scope", "$rootScope", "$stateParams", "entity", "Resource", function ($scope, $rootScope, $stateParams, entity, Resource) {
        $scope.resource = entity;
        $scope.load = function (id) {
            Resource.get({id: id}, function(result) {
                $scope.resource = result;
            });
        };
        var unsubscribe = $rootScope.$on('dgdtoolApp:resourceUpdate', function(event, result) {
            $scope.resource = result;
        });
        $scope.$on('$destroy', unsubscribe);

    }]);

'use strict';

angular.module('dgdtoolApp')
    .factory('Resource', ["$resource", "DateUtils", function ($resource, DateUtils) {
        return $resource('api/resources/:id', {}, {
            'query': { method: 'GET', isArray: true},
            'get': {
                method: 'GET',
                transformResponse: function (data) {
                    data = angular.fromJson(data);
                    data.created_date = DateUtils.convertLocaleDateFromServer(data.created_date);
                    data.modified_date = DateUtils.convertLocaleDateFromServer(data.modified_date);
                    return data;
                }
            },
            'update': {
                method: 'PUT',
                transformRequest: function (data) {
                    data.created_date = DateUtils.convertLocaleDateToServer(data.created_date);
                    data.modified_date = DateUtils.convertLocaleDateToServer(data.modified_date);
                    return angular.toJson(data);
                }
            },
            'save': {
                method: 'POST',
                transformRequest: function (data) {
                    data.created_date = DateUtils.convertLocaleDateToServer(data.created_date);
                    data.modified_date = DateUtils.convertLocaleDateToServer(data.modified_date);
                    return angular.toJson(data);
                }
            }
        });
    }]);

'use strict';

angular.module('dgdtoolApp')
    .factory('ResourceSearch', ["$resource", function ($resource) {
        return $resource('api/_search/resources/:query', {}, {
            'query': { method: 'GET', isArray: true}
        });
    }]);

'use strict';

angular.module('dgdtoolApp')
    .config(["$stateProvider", function ($stateProvider) {
        $stateProvider
            .state('role', {
                parent: 'entity',
                url: '/roles',
                data: {
                    authorities: ['ROLE_USER'],
                    pageTitle: 'dgdtoolApp.role.home.title'
                },
                views: {
                    'content@': {
                        templateUrl: 'scripts/app/entities/role/roles.html',
                        controller: 'RoleController'
                    }
                },
                resolve: {
                    translatePartialLoader: ['$translate', '$translatePartialLoader', function ($translate, $translatePartialLoader) {
                        $translatePartialLoader.addPart('role');
                        $translatePartialLoader.addPart('global');
                        return $translate.refresh();
                    }]
                }
            })
            .state('role.detail', {
                parent: 'entity',
                url: '/role/{id}',
                data: {
                    authorities: ['ROLE_USER'],
                    pageTitle: 'dgdtoolApp.role.detail.title'
                },
                views: {
                    'content@': {
                        templateUrl: 'scripts/app/entities/role/role-detail.html',
                        controller: 'RoleDetailController'
                    }
                },
                resolve: {
                    translatePartialLoader: ['$translate', '$translatePartialLoader', function ($translate, $translatePartialLoader) {
                        $translatePartialLoader.addPart('role');
                        return $translate.refresh();
                    }],
                    entity: ['$stateParams', 'Role', function($stateParams, Role) {
                        return Role.get({id : $stateParams.id});
                    }]
                }
            })
            .state('role.new', {
                parent: 'role',
                url: '/new',
                data: {
                    authorities: ['ROLE_USER'],
                },
                onEnter: ['$stateParams', '$state', '$modal', function($stateParams, $state, $modal) {
                    $modal.open({
                        templateUrl: 'scripts/app/entities/role/role-dialog.html',
                        controller: 'RoleDialogController',
                        size: 'lg',
                        resolve: {
                            entity: function () {
                                return {
                                    role_name: null,
                                    description: null,
                                    status_id: null,
                                    created_by: null,
                                    created_date: null,
                                    modified_by: null,
                                    modified_date: null,
                                    id: null
                                };
                            }
                        }
                    }).result.then(function(result) {
                        $state.go('role', null, { reload: true });
                    }, function() {
                        $state.go('role');
                    })
                }]
            })
            .state('role.edit', {
                parent: 'role',
                url: '/{id}/edit',
                data: {
                    authorities: ['ROLE_USER'],
                },
                onEnter: ['$stateParams', '$state', '$modal', function($stateParams, $state, $modal) {
                    $modal.open({
                        templateUrl: 'scripts/app/entities/role/role-dialog.html',
                        controller: 'RoleDialogController',
                        size: 'lg',
                        resolve: {
                            entity: ['Role', function(Role) {
                                return Role.get({id : $stateParams.id});
                            }]
                        }
                    }).result.then(function(result) {
                        $state.go('role', null, { reload: true });
                    }, function() {
                        $state.go('^');
                    })
                }]
            });
    }]);

'use strict';

angular.module('dgdtoolApp')
    .controller('RoleController', ["$scope", "Role", "RoleSearch", "ParseLinks", function ($scope, Role, RoleSearch, ParseLinks) {
        $scope.roles = [];
        $scope.page = 0;
        $scope.loadAll = function() {
            Role.query({page: $scope.page, size: 20}, function(result, headers) {
                $scope.links = ParseLinks.parse(headers('link'));
                $scope.roles = result;
            });
        };
        $scope.loadPage = function(page) {
            $scope.page = page;
            $scope.loadAll();
        };
        $scope.loadAll();

        $scope['delete'] = function (id) {
            Role.get({id: id}, function(result) {
                $scope.role = result;
                $('#deleteRoleConfirmation').modal('show');
            });
        };

        $scope.confirmDelete = function (id) {
            Role['delete']({id: id},
                function () {
                    $scope.loadAll();
                    $('#deleteRoleConfirmation').modal('hide');
                    $scope.clear();
                });
        };

        $scope.search = function () {
            RoleSearch.query({query: $scope.searchQuery}, function(result) {
                $scope.roles = result;
            }, function(response) {
                if(response.status === 404) {
                    $scope.loadAll();
                }
            });
        };

        $scope.refresh = function () {
            $scope.loadAll();
            $scope.clear();
        };

        $scope.clear = function () {
            $scope.role = {
                role_name: null,
                description: null,
                status_id: null,
                created_by: null,
                created_date: null,
                modified_by: null,
                modified_date: null,
                id: null
            };
        };
    }]);

'use strict';

angular.module('dgdtoolApp').controller('RoleDialogController',
    ['$scope', '$stateParams', '$modalInstance', 'entity', 'Role',
        function($scope, $stateParams, $modalInstance, entity, Role) {

        $scope.role = entity;
        $scope.load = function(id) {
            Role.get({id : id}, function(result) {
                $scope.role = result;
            });
        };

        var onSaveFinished = function (result) {
            $scope.$emit('dgdtoolApp:roleUpdate', result);
            $modalInstance.close(result);
        };

        $scope.save = function () {
            if ($scope.role.id != null) {
                Role.update($scope.role, onSaveFinished);
            } else {
                Role.save($scope.role, onSaveFinished);
            }
        };

        $scope.clear = function() {
            $modalInstance.dismiss('cancel');
        };
}]);

'use strict';

angular.module('dgdtoolApp')
    .controller('RoleDetailController', ["$scope", "$rootScope", "$stateParams", "entity", "Role", function ($scope, $rootScope, $stateParams, entity, Role) {
        $scope.role = entity;
        $scope.load = function (id) {
            Role.get({id: id}, function(result) {
                $scope.role = result;
            });
        };
        var unsubscribe = $rootScope.$on('dgdtoolApp:roleUpdate', function(event, result) {
            $scope.role = result;
        });
        $scope.$on('$destroy', unsubscribe);

    }]);

'use strict';

angular.module('dgdtoolApp')
    .factory('Role', ["$resource", "DateUtils", function ($resource, DateUtils) {
        return $resource('api/roles/:id', {}, {
            'query': { method: 'GET', isArray: true},
            'get': {
                method: 'GET',
                transformResponse: function (data) {
                    data = angular.fromJson(data);
                    data.created_date = DateUtils.convertLocaleDateFromServer(data.created_date);
                    data.modified_date = DateUtils.convertLocaleDateFromServer(data.modified_date);
                    return data;
                }
            },
            'update': {
                method: 'PUT',
                transformRequest: function (data) {
                    data.created_date = DateUtils.convertLocaleDateToServer(data.created_date);
                    data.modified_date = DateUtils.convertLocaleDateToServer(data.modified_date);
                    return angular.toJson(data);
                }
            },
            'save': {
                method: 'POST',
                transformRequest: function (data) {
                    data.created_date = DateUtils.convertLocaleDateToServer(data.created_date);
                    data.modified_date = DateUtils.convertLocaleDateToServer(data.modified_date);
                    return angular.toJson(data);
                }
            }
        });
    }]);

'use strict';

angular.module('dgdtoolApp')
    .factory('RoleSearch', ["$resource", function ($resource) {
        return $resource('api/_search/roles/:query', {}, {
            'query': { method: 'GET', isArray: true}
        });
    }]);

'use strict';

angular.module('dgdtoolApp')
    .config(["$stateProvider", function ($stateProvider) {
        $stateProvider
            .state('support_level', {
                parent: 'entity',
                url: '/support_levels',
                data: {
                    authorities: ['ROLE_USER'],
                    pageTitle: 'dgdtoolApp.support_level.home.title'
                },
                views: {
                    'content@': {
                        templateUrl: 'scripts/app/entities/support_level/support_levels.html',
                        controller: 'Support_levelController'
                    }
                },
                resolve: {
                    translatePartialLoader: ['$translate', '$translatePartialLoader', function ($translate, $translatePartialLoader) {
                        $translatePartialLoader.addPart('support_level');
                        $translatePartialLoader.addPart('global');
                        return $translate.refresh();
                    }]
                }
            })
            .state('support_level.detail', {
                parent: 'entity',
                url: '/support_level/{id}',
                data: {
                    authorities: ['ROLE_USER'],
                    pageTitle: 'dgdtoolApp.support_level.detail.title'
                },
                views: {
                    'content@': {
                        templateUrl: 'scripts/app/entities/support_level/support_level-detail.html',
                        controller: 'Support_levelDetailController'
                    }
                },
                resolve: {
                    translatePartialLoader: ['$translate', '$translatePartialLoader', function ($translate, $translatePartialLoader) {
                        $translatePartialLoader.addPart('support_level');
                        return $translate.refresh();
                    }],
                    entity: ['$stateParams', 'Support_level', function($stateParams, Support_level) {
                        return Support_level.get({id : $stateParams.id});
                    }]
                }
            })
            .state('support_level.new', {
                parent: 'support_level',
                url: '/new',
                data: {
                    authorities: ['ROLE_USER'],
                },
                onEnter: ['$stateParams', '$state', '$modal', function($stateParams, $state, $modal) {
                    $modal.open({
                        templateUrl: 'scripts/app/entities/support_level/support_level-dialog.html',
                        controller: 'Support_levelDialogController',
                        size: 'lg',
                        resolve: {
                            entity: function () {
                                return {
                                    support_level_name: null,
                                    description: null,
                                    status_id: null,
                                    created_by: null,
                                    created_date: null,
                                    modified_by: null,
                                    modified_date: null,
                                    id: null
                                };
                            }
                        }
                    }).result.then(function(result) {
                        $state.go('support_level', null, { reload: true });
                    }, function() {
                        $state.go('support_level');
                    })
                }]
            })
            .state('support_level.edit', {
                parent: 'support_level',
                url: '/{id}/edit',
                data: {
                    authorities: ['ROLE_USER'],
                },
                onEnter: ['$stateParams', '$state', '$modal', function($stateParams, $state, $modal) {
                    $modal.open({
                        templateUrl: 'scripts/app/entities/support_level/support_level-dialog.html',
                        controller: 'Support_levelDialogController',
                        size: 'lg',
                        resolve: {
                            entity: ['Support_level', function(Support_level) {
                                return Support_level.get({id : $stateParams.id});
                            }]
                        }
                    }).result.then(function(result) {
                        $state.go('support_level', null, { reload: true });
                    }, function() {
                        $state.go('^');
                    })
                }]
            });
    }]);

'use strict';

angular.module('dgdtoolApp')
    .controller('Support_levelController', ["$scope", "Support_level", "Support_levelSearch", "ParseLinks", function ($scope, Support_level, Support_levelSearch, ParseLinks) {
        $scope.support_levels = [];
        $scope.page = 0;
        $scope.loadAll = function() {
            Support_level.query({page: $scope.page, size: 20}, function(result, headers) {
                $scope.links = ParseLinks.parse(headers('link'));
                $scope.support_levels = result;
            });
        };
        $scope.loadPage = function(page) {
            $scope.page = page;
            $scope.loadAll();
        };
        $scope.loadAll();

        $scope['delete'] = function (id) {
            Support_level.get({id: id}, function(result) {
                $scope.support_level = result;
                $('#deleteSupport_levelConfirmation').modal('show');
            });
        };

        $scope.confirmDelete = function (id) {
            Support_level['delete']({id: id},
                function () {
                    $scope.loadAll();
                    $('#deleteSupport_levelConfirmation').modal('hide');
                    $scope.clear();
                });
        };

        $scope.search = function () {
            Support_levelSearch.query({query: $scope.searchQuery}, function(result) {
                $scope.support_levels = result;
            }, function(response) {
                if(response.status === 404) {
                    $scope.loadAll();
                }
            });
        };

        $scope.refresh = function () {
            $scope.loadAll();
            $scope.clear();
        };

        $scope.clear = function () {
            $scope.support_level = {
                support_level_name: null,
                description: null,
                status_id: null,
                created_by: null,
                created_date: null,
                modified_by: null,
                modified_date: null,
                id: null
            };
        };
    }]);

'use strict';

angular.module('dgdtoolApp').controller('Support_levelDialogController',
    ['$scope', '$stateParams', '$modalInstance', 'entity', 'Support_level',
        function($scope, $stateParams, $modalInstance, entity, Support_level) {

        $scope.support_level = entity;
        $scope.load = function(id) {
            Support_level.get({id : id}, function(result) {
                $scope.support_level = result;
            });
        };

        var onSaveFinished = function (result) {
            $scope.$emit('dgdtoolApp:support_levelUpdate', result);
            $modalInstance.close(result);
        };

        $scope.save = function () {
            if ($scope.support_level.id != null) {
                Support_level.update($scope.support_level, onSaveFinished);
            } else {
                Support_level.save($scope.support_level, onSaveFinished);
            }
        };

        $scope.clear = function() {
            $modalInstance.dismiss('cancel');
        };
}]);

'use strict';

angular.module('dgdtoolApp')
    .controller('Support_levelDetailController', ["$scope", "$rootScope", "$stateParams", "entity", "Support_level", function ($scope, $rootScope, $stateParams, entity, Support_level) {
        $scope.support_level = entity;
        $scope.load = function (id) {
            Support_level.get({id: id}, function(result) {
                $scope.support_level = result;
            });
        };
        var unsubscribe = $rootScope.$on('dgdtoolApp:support_levelUpdate', function(event, result) {
            $scope.support_level = result;
        });
        $scope.$on('$destroy', unsubscribe);

    }]);

'use strict';

angular.module('dgdtoolApp')
    .factory('Support_level', ["$resource", "DateUtils", function ($resource, DateUtils) {
        return $resource('api/support_levels/:id', {}, {
            'query': { method: 'GET', isArray: true},
            'get': {
                method: 'GET',
                transformResponse: function (data) {
                    data = angular.fromJson(data);
                    data.created_date = DateUtils.convertLocaleDateFromServer(data.created_date);
                    data.modified_date = DateUtils.convertLocaleDateFromServer(data.modified_date);
                    return data;
                }
            },
            'update': {
                method: 'PUT',
                transformRequest: function (data) {
                    data.created_date = DateUtils.convertLocaleDateToServer(data.created_date);
                    data.modified_date = DateUtils.convertLocaleDateToServer(data.modified_date);
                    return angular.toJson(data);
                }
            },
            'save': {
                method: 'POST',
                transformRequest: function (data) {
                    data.created_date = DateUtils.convertLocaleDateToServer(data.created_date);
                    data.modified_date = DateUtils.convertLocaleDateToServer(data.modified_date);
                    return angular.toJson(data);
                }
            }
        });
    }]);

'use strict';

angular.module('dgdtoolApp')
    .factory('Support_levelSearch', ["$resource", function ($resource) {
        return $resource('api/_search/support_levels/:query', {}, {
            'query': { method: 'GET', isArray: true}
        });
    }]);

'use strict';

angular.module('dgdtoolApp')
    .config(["$stateProvider", function ($stateProvider) {
        $stateProvider
            .state('ticket', {
                parent: 'entity',
                url: '/tickets',
                data: {
                    authorities: ['ROLE_USER'],
                    pageTitle: 'dgdtoolApp.ticket.home.title'
                },
                views: {
                    'content@': {
                        templateUrl: 'scripts/app/entities/ticket/tickets.html',
                        controller: 'TicketController'
                    }
                },
                resolve: {
                    translatePartialLoader: ['$translate', '$translatePartialLoader', function ($translate, $translatePartialLoader) {
                        $translatePartialLoader.addPart('ticket');
                        $translatePartialLoader.addPart('global');
                        return $translate.refresh();
                    }]
                }
            })
            .state('ticket.detail', {
                parent: 'entity',
                url: '/ticket/{id}',
                data: {
                    authorities: ['ROLE_USER'],
                    pageTitle: 'dgdtoolApp.ticket.detail.title'
                },
                views: {
                    'content@': {
                        templateUrl: 'scripts/app/entities/ticket/ticket-detail.html',
                        controller: 'TicketDetailController'
                    }
                },
                resolve: {
                    translatePartialLoader: ['$translate', '$translatePartialLoader', function ($translate, $translatePartialLoader) {
                        $translatePartialLoader.addPart('ticket');
                        return $translate.refresh();
                    }],
                    entity: ['$stateParams', 'Ticket', function($stateParams, Ticket) {
                        return Ticket.get({id : $stateParams.id});
                    }]
                }
            })
            .state('ticket.new', {
                parent: 'ticket',
                url: '/new',
                data: {
                    authorities: ['ROLE_USER'],
                },
                onEnter: ['$stateParams', '$state', '$modal', function($stateParams, $state, $modal) {
                    $modal.open({
                        templateUrl: 'scripts/app/entities/ticket/ticket-dialog.html',
                        controller: 'TicketDialogController',
                        size: 'lg',
                        resolve: {
                            entity: function () {
                                return {
                                    ticket_ref_number: null,
                                    ticket_created_date: null,
                                    description: null,
                                    status_id: null,
                                    created_by: null,
                                    created_date: null,
                                    modified_by: null,
                                    modified_date: null,
                                    id: null
                                };
                            }
                        }
                    }).result.then(function(result) {
                        $state.go('ticket', null, { reload: true });
                    }, function() {
                        $state.go('ticket');
                    })
                }]
            })
            .state('ticket.edit', {
                parent: 'ticket',
                url: '/{id}/edit',
                data: {
                    authorities: ['ROLE_USER'],
                },
                onEnter: ['$stateParams', '$state', '$modal', function($stateParams, $state, $modal) {
                    $modal.open({
                        templateUrl: 'scripts/app/entities/ticket/ticket-dialog.html',
                        controller: 'TicketDialogController',
                        size: 'lg',
                        resolve: {
                            entity: ['Ticket', function(Ticket) {
                                return Ticket.get({id : $stateParams.id});
                            }]
                        }
                    }).result.then(function(result) {
                        $state.go('ticket', null, { reload: true });
                    }, function() {
                        $state.go('^');
                    })
                }]
            });
    }]);

'use strict';

angular.module('dgdtoolApp')
    .controller('TicketController', ["$scope", "Ticket", "TicketSearch", "ParseLinks", function ($scope, Ticket, TicketSearch, ParseLinks) {
        $scope.tickets = [];
        $scope.page = 0;
        $scope.loadAll = function() {
            Ticket.query({page: $scope.page, size: 20}, function(result, headers) {
                $scope.links = ParseLinks.parse(headers('link'));
                $scope.tickets = result;
            });
        };
        $scope.loadPage = function(page) {
            $scope.page = page;
            $scope.loadAll();
        };
        $scope.loadAll();

        $scope['delete'] = function (id) {
            Ticket.get({id: id}, function(result) {
                $scope.ticket = result;
                $('#deleteTicketConfirmation').modal('show');
            });
        };

        $scope.confirmDelete = function (id) {
            Ticket['delete']({id: id},
                function () {
                    $scope.loadAll();
                    $('#deleteTicketConfirmation').modal('hide');
                    $scope.clear();
                });
        };

        $scope.search = function () {
            TicketSearch.query({query: $scope.searchQuery}, function(result) {
                $scope.tickets = result;
            }, function(response) {
                if(response.status === 404) {
                    $scope.loadAll();
                }
            });
        };

        $scope.refresh = function () {
            $scope.loadAll();
            $scope.clear();
        };

        $scope.clear = function () {
            $scope.ticket = {
                ticket_ref_number: null,
                ticket_created_date: null,
                description: null,
                status_id: null,
                created_by: null,
                created_date: null,
                modified_by: null,
                modified_date: null,
                id: null
            };
        };
    }]);

'use strict';

angular.module('dgdtoolApp').controller('TicketDialogController',
    ['$scope', '$stateParams', '$modalInstance', 'entity', 'Ticket',
        function($scope, $stateParams, $modalInstance, entity, Ticket) {

        $scope.ticket = entity;
        $scope.load = function(id) {
            Ticket.get({id : id}, function(result) {
                $scope.ticket = result;
            });
        };

        var onSaveFinished = function (result) {
            $scope.$emit('dgdtoolApp:ticketUpdate', result);
            $modalInstance.close(result);
        };

        $scope.save = function () {
            if ($scope.ticket.id != null) {
                Ticket.update($scope.ticket, onSaveFinished);
            } else {
                Ticket.save($scope.ticket, onSaveFinished);
            }
        };

        $scope.clear = function() {
            $modalInstance.dismiss('cancel');
        };
}]);

'use strict';

angular.module('dgdtoolApp')
    .controller('TicketDetailController', ["$scope", "$rootScope", "$stateParams", "entity", "Ticket", function ($scope, $rootScope, $stateParams, entity, Ticket) {
        $scope.ticket = entity;
        $scope.load = function (id) {
            Ticket.get({id: id}, function(result) {
                $scope.ticket = result;
            });
        };
        var unsubscribe = $rootScope.$on('dgdtoolApp:ticketUpdate', function(event, result) {
            $scope.ticket = result;
        });
        $scope.$on('$destroy', unsubscribe);

    }]);

'use strict';

angular.module('dgdtoolApp')
    .factory('Ticket', ["$resource", "DateUtils", function ($resource, DateUtils) {
        return $resource('api/tickets/:id', {}, {
            'query': { method: 'GET', isArray: true},
            'get': {
                method: 'GET',
                transformResponse: function (data) {
                    data = angular.fromJson(data);
                    data.ticket_created_date = DateUtils.convertDateTimeFromServer(data.ticket_created_date);
                    data.created_date = DateUtils.convertLocaleDateFromServer(data.created_date);
                    data.modified_date = DateUtils.convertLocaleDateFromServer(data.modified_date);
                    return data;
                }
            },
            'update': {
                method: 'PUT',
                transformRequest: function (data) {
                    data.created_date = DateUtils.convertLocaleDateToServer(data.created_date);
                    data.modified_date = DateUtils.convertLocaleDateToServer(data.modified_date);
                    return angular.toJson(data);
                }
            },
            'save': {
                method: 'POST',
                transformRequest: function (data) {
                    data.created_date = DateUtils.convertLocaleDateToServer(data.created_date);
                    data.modified_date = DateUtils.convertLocaleDateToServer(data.modified_date);
                    return angular.toJson(data);
                }
            }
        });
    }]);

'use strict';

angular.module('dgdtoolApp')
    .factory('TicketSearch', ["$resource", function ($resource) {
        return $resource('api/_search/tickets/:query', {}, {
            'query': { method: 'GET', isArray: true}
        });
    }]);

'use strict';

angular.module('dgdtoolApp')
    .config(["$stateProvider", function ($stateProvider) {
        $stateProvider
            .state('project_phase', {
                parent: 'entity',
                url: '/project_phases',
                data: {
                    authorities: ['ROLE_USER'],
                    pageTitle: 'dgdtoolApp.project_phase.home.title'
                },
                views: {
                    'content@': {
                        templateUrl: 'scripts/app/entities/project_phase/project_phases.html',
                        controller: 'Project_phaseController'
                    }
                },
                resolve: {
                    translatePartialLoader: ['$translate', '$translatePartialLoader', function ($translate, $translatePartialLoader) {
                        $translatePartialLoader.addPart('project_phase');
                        $translatePartialLoader.addPart('global');
                        return $translate.refresh();
                    }]
                }
            })
            .state('project_phase.detail', {
                parent: 'entity',
                url: '/project_phase/{id}',
                data: {
                    authorities: ['ROLE_USER'],
                    pageTitle: 'dgdtoolApp.project_phase.detail.title'
                },
                views: {
                    'content@': {
                        templateUrl: 'scripts/app/entities/project_phase/project_phase-detail.html',
                        controller: 'Project_phaseDetailController'
                    }
                },
                resolve: {
                    translatePartialLoader: ['$translate', '$translatePartialLoader', function ($translate, $translatePartialLoader) {
                        $translatePartialLoader.addPart('project_phase');
                        return $translate.refresh();
                    }],
                    entity: ['$stateParams', 'Project_phase', function($stateParams, Project_phase) {
                        return Project_phase.get({id : $stateParams.id});
                    }]
                }
            })
            .state('project_phase.new', {
                parent: 'project_phase',
                url: '/new',
                data: {
                    authorities: ['ROLE_USER'],
                },
                onEnter: ['$stateParams', '$state', '$modal', function($stateParams, $state, $modal) {
                    $modal.open({
                        templateUrl: 'scripts/app/entities/project_phase/project_phase-dialog.html',
                        controller: 'Project_phaseDialogController',
                        size: 'lg',
                        resolve: {
                            entity: function () {
                                return {
                                    project_phase_name: null,
                                    description: null,
                                    status_id: null,
                                    created_by: null,
                                    modified_by: null,
                                    modified_date: null,
                                    id: null
                                };
                            }
                        }
                    }).result.then(function(result) {
                        $state.go('project_phase', null, { reload: true });
                    }, function() {
                        $state.go('project_phase');
                    })
                }]
            })
            .state('project_phase.edit', {
                parent: 'project_phase',
                url: '/{id}/edit',
                data: {
                    authorities: ['ROLE_USER'],
                },
                onEnter: ['$stateParams', '$state', '$modal', function($stateParams, $state, $modal) {
                    $modal.open({
                        templateUrl: 'scripts/app/entities/project_phase/project_phase-dialog.html',
                        controller: 'Project_phaseDialogController',
                        size: 'lg',
                        resolve: {
                            entity: ['Project_phase', function(Project_phase) {
                                return Project_phase.get({id : $stateParams.id});
                            }]
                        }
                    }).result.then(function(result) {
                        $state.go('project_phase', null, { reload: true });
                    }, function() {
                        $state.go('^');
                    })
                }]
            });
    }]);

'use strict';

angular.module('dgdtoolApp')
    .controller('Project_phaseController', ["$scope", "Project_phase", "Project_phaseSearch", "ParseLinks", function ($scope, Project_phase, Project_phaseSearch, ParseLinks) {
        $scope.project_phases = [];
        $scope.page = 0;
        $scope.loadAll = function() {
            Project_phase.query({page: $scope.page, size: 20}, function(result, headers) {
                $scope.links = ParseLinks.parse(headers('link'));
                $scope.project_phases = result;
            });
        };
        $scope.loadPage = function(page) {
            $scope.page = page;
            $scope.loadAll();
        };
        $scope.loadAll();

        $scope['delete'] = function (id) {
            Project_phase.get({id: id}, function(result) {
                $scope.project_phase = result;
                $('#deleteProject_phaseConfirmation').modal('show');
            });
        };

        $scope.confirmDelete = function (id) {
            Project_phase['delete']({id: id},
                function () {
                    $scope.loadAll();
                    $('#deleteProject_phaseConfirmation').modal('hide');
                    $scope.clear();
                });
        };

        $scope.search = function () {
            Project_phaseSearch.query({query: $scope.searchQuery}, function(result) {
                $scope.project_phases = result;
            }, function(response) {
                if(response.status === 404) {
                    $scope.loadAll();
                }
            });
        };

        $scope.refresh = function () {
            $scope.loadAll();
            $scope.clear();
        };

        $scope.clear = function () {
            $scope.project_phase = {
                project_phase_name: null,
                description: null,
                status_id: null,
                created_by: null,
                modified_by: null,
                modified_date: null,
                id: null
            };
        };
    }]);

'use strict';

angular.module('dgdtoolApp').controller('Project_phaseDialogController',
    ['$scope', '$stateParams', '$modalInstance', 'entity', 'Project_phase',
        function($scope, $stateParams, $modalInstance, entity, Project_phase) {

        $scope.project_phase = entity;
        $scope.load = function(id) {
            Project_phase.get({id : id}, function(result) {
                $scope.project_phase = result;
            });
        };

        var onSaveFinished = function (result) {
            $scope.$emit('dgdtoolApp:project_phaseUpdate', result);
            $modalInstance.close(result);
        };

        $scope.save = function () {
            if ($scope.project_phase.id != null) {
                Project_phase.update($scope.project_phase, onSaveFinished);
            } else {
                Project_phase.save($scope.project_phase, onSaveFinished);
            }
        };

        $scope.clear = function() {
            $modalInstance.dismiss('cancel');
        };
}]);

'use strict';

angular.module('dgdtoolApp')
    .controller('Project_phaseDetailController', ["$scope", "$rootScope", "$stateParams", "entity", "Project_phase", function ($scope, $rootScope, $stateParams, entity, Project_phase) {
        $scope.project_phase = entity;
        $scope.load = function (id) {
            Project_phase.get({id: id}, function(result) {
                $scope.project_phase = result;
            });
        };
        var unsubscribe = $rootScope.$on('dgdtoolApp:project_phaseUpdate', function(event, result) {
            $scope.project_phase = result;
        });
        $scope.$on('$destroy', unsubscribe);

    }]);

'use strict';

angular.module('dgdtoolApp')
    .factory('Project_phase', ["$resource", "DateUtils", function ($resource, DateUtils) {
        return $resource('api/project_phases/:id', {}, {
            'query': { method: 'GET', isArray: true},
            'get': {
                method: 'GET',
                transformResponse: function (data) {
                    data = angular.fromJson(data);
                    data.modified_date = DateUtils.convertLocaleDateFromServer(data.modified_date);
                    return data;
                }
            },
            'update': {
                method: 'PUT',
                transformRequest: function (data) {
                    data.modified_date = DateUtils.convertLocaleDateToServer(data.modified_date);
                    return angular.toJson(data);
                }
            },
            'save': {
                method: 'POST',
                transformRequest: function (data) {
                    data.modified_date = DateUtils.convertLocaleDateToServer(data.modified_date);
                    return angular.toJson(data);
                }
            }
        });
    }]);

'use strict';

angular.module('dgdtoolApp')
    .factory('Project_phaseSearch', ["$resource", function ($resource) {
        return $resource('api/_search/project_phases/:query', {}, {
            'query': { method: 'GET', isArray: true}
        });
    }]);

'use strict';

angular.module('dgdtoolApp')
    .config(["$stateProvider", function ($stateProvider) {
        $stateProvider
            .state('datasource_type', {
                parent: 'entity',
                url: '/datasource_types',
                data: {
                    authorities: ['ROLE_USER'],
                    pageTitle: 'dgdtoolApp.datasource_type.home.title'
                },
                views: {
                    'content@': {
                        templateUrl: 'scripts/app/entities/datasource_type/datasource_types.html',
                        controller: 'Datasource_typeController'
                    }
                },
                resolve: {
                    translatePartialLoader: ['$translate', '$translatePartialLoader', function ($translate, $translatePartialLoader) {
                        $translatePartialLoader.addPart('datasource_type');
                        $translatePartialLoader.addPart('global');
                        return $translate.refresh();
                    }]
                }
            })
            .state('datasource_type.detail', {
                parent: 'entity',
                url: '/datasource_type/{id}',
                data: {
                    authorities: ['ROLE_USER'],
                    pageTitle: 'dgdtoolApp.datasource_type.detail.title'
                },
                views: {
                    'content@': {
                        templateUrl: 'scripts/app/entities/datasource_type/datasource_type-detail.html',
                        controller: 'Datasource_typeDetailController'
                    }
                },
                resolve: {
                    translatePartialLoader: ['$translate', '$translatePartialLoader', function ($translate, $translatePartialLoader) {
                        $translatePartialLoader.addPart('datasource_type');
                        return $translate.refresh();
                    }],
                    entity: ['$stateParams', 'Datasource_type', function($stateParams, Datasource_type) {
                        return Datasource_type.get({id : $stateParams.id});
                    }]
                }
            })
            .state('datasource_type.new', {
                parent: 'datasource_type',
                url: '/new',
                data: {
                    authorities: ['ROLE_USER'],
                },
                onEnter: ['$stateParams', '$state', '$modal', function($stateParams, $state, $modal) {
                    $modal.open({
                        templateUrl: 'scripts/app/entities/datasource_type/datasource_type-dialog.html',
                        controller: 'Datasource_typeDialogController',
                        size: 'lg',
                        resolve: {
                            entity: function () {
                                return {
                                    datasource_type_name: null,
                                    description: null,
                                    status_id: null,
                                    created_by: null,
                                    created_date: null,
                                    modified_by: null,
                                    modified_date: null,
                                    id: null
                                };
                            }
                        }
                    }).result.then(function(result) {
                        $state.go('datasource_type', null, { reload: true });
                    }, function() {
                        $state.go('datasource_type');
                    })
                }]
            })
            .state('datasource_type.edit', {
                parent: 'datasource_type',
                url: '/{id}/edit',
                data: {
                    authorities: ['ROLE_USER'],
                },
                onEnter: ['$stateParams', '$state', '$modal', function($stateParams, $state, $modal) {
                    $modal.open({
                        templateUrl: 'scripts/app/entities/datasource_type/datasource_type-dialog.html',
                        controller: 'Datasource_typeDialogController',
                        size: 'lg',
                        resolve: {
                            entity: ['Datasource_type', function(Datasource_type) {
                                return Datasource_type.get({id : $stateParams.id});
                            }]
                        }
                    }).result.then(function(result) {
                        $state.go('datasource_type', null, { reload: true });
                    }, function() {
                        $state.go('^');
                    })
                }]
            });
    }]);

'use strict';

angular.module('dgdtoolApp')
    .controller('Datasource_typeController', ["$scope", "Datasource_type", "Datasource_typeSearch", "ParseLinks", function ($scope, Datasource_type, Datasource_typeSearch, ParseLinks) {
        $scope.datasource_types = [];
        $scope.page = 0;
        $scope.loadAll = function() {
            Datasource_type.query({page: $scope.page, size: 20}, function(result, headers) {
                $scope.links = ParseLinks.parse(headers('link'));
                $scope.datasource_types = result;
            });
        };
        $scope.loadPage = function(page) {
            $scope.page = page;
            $scope.loadAll();
        };
        $scope.loadAll();

        $scope['delete'] = function (id) {
            Datasource_type.get({id: id}, function(result) {
                $scope.datasource_type = result;
                $('#deleteDatasource_typeConfirmation').modal('show');
            });
        };

        $scope.confirmDelete = function (id) {
            Datasource_type['delete']({id: id},
                function () {
                    $scope.loadAll();
                    $('#deleteDatasource_typeConfirmation').modal('hide');
                    $scope.clear();
                });
        };

        $scope.search = function () {
            Datasource_typeSearch.query({query: $scope.searchQuery}, function(result) {
                $scope.datasource_types = result;
            }, function(response) {
                if(response.status === 404) {
                    $scope.loadAll();
                }
            });
        };

        $scope.refresh = function () {
            $scope.loadAll();
            $scope.clear();
        };

        $scope.clear = function () {
            $scope.datasource_type = {
                datasource_type_name: null,
                description: null,
                status_id: null,
                created_by: null,
                created_date: null,
                modified_by: null,
                modified_date: null,
                id: null
            };
        };
    }]);

'use strict';

angular.module('dgdtoolApp').controller('Datasource_typeDialogController',
    ['$scope', '$stateParams', '$modalInstance', 'entity', 'Datasource_type',
        function($scope, $stateParams, $modalInstance, entity, Datasource_type) {

        $scope.datasource_type = entity;
        $scope.load = function(id) {
            Datasource_type.get({id : id}, function(result) {
                $scope.datasource_type = result;
            });
        };

        var onSaveFinished = function (result) {
            $scope.$emit('dgdtoolApp:datasource_typeUpdate', result);
            $modalInstance.close(result);
        };

        $scope.save = function () {
            if ($scope.datasource_type.id != null) {
                Datasource_type.update($scope.datasource_type, onSaveFinished);
            } else {
                Datasource_type.save($scope.datasource_type, onSaveFinished);
            }
        };

        $scope.clear = function() {
            $modalInstance.dismiss('cancel');
        };
}]);

'use strict';

angular.module('dgdtoolApp')
    .controller('Datasource_typeDetailController', ["$scope", "$rootScope", "$stateParams", "entity", "Datasource_type", function ($scope, $rootScope, $stateParams, entity, Datasource_type) {
        $scope.datasource_type = entity;
        $scope.load = function (id) {
            Datasource_type.get({id: id}, function(result) {
                $scope.datasource_type = result;
            });
        };
        var unsubscribe = $rootScope.$on('dgdtoolApp:datasource_typeUpdate', function(event, result) {
            $scope.datasource_type = result;
        });
        $scope.$on('$destroy', unsubscribe);

    }]);

'use strict';

angular.module('dgdtoolApp')
    .factory('Datasource_type', ["$resource", "DateUtils", function ($resource, DateUtils) {
        return $resource('api/datasource_types/:id', {}, {
            'query': { method: 'GET', isArray: true},
            'get': {
                method: 'GET',
                transformResponse: function (data) {
                    data = angular.fromJson(data);
                    data.created_date = DateUtils.convertLocaleDateFromServer(data.created_date);
                    data.modified_date = DateUtils.convertLocaleDateFromServer(data.modified_date);
                    return data;
                }
            },
            'update': {
                method: 'PUT',
                transformRequest: function (data) {
                    data.created_date = DateUtils.convertLocaleDateToServer(data.created_date);
                    data.modified_date = DateUtils.convertLocaleDateToServer(data.modified_date);
                    return angular.toJson(data);
                }
            },
            'save': {
                method: 'POST',
                transformRequest: function (data) {
                    data.created_date = DateUtils.convertLocaleDateToServer(data.created_date);
                    data.modified_date = DateUtils.convertLocaleDateToServer(data.modified_date);
                    return angular.toJson(data);
                }
            }
        });
    }]);

'use strict';

angular.module('dgdtoolApp')
    .factory('Datasource_typeSearch', ["$resource", function ($resource) {
        return $resource('api/_search/datasource_types/:query', {}, {
            'query': { method: 'GET', isArray: true}
        });
    }]);

'use strict';

angular.module('dgdtoolApp')
    .config(["$stateProvider", function ($stateProvider) {
        $stateProvider
            .state('decision', {
                parent: 'entity',
                url: '/decisions',
                data: {
                    authorities: ['ROLE_USER'],
                    pageTitle: 'dgdtoolApp.decision.home.title'
                },
                views: {
                    'content@': {
                        templateUrl: 'scripts/app/entities/decision/decisions.html',
                        controller: 'DecisionController'
                    }
                },
                resolve: {
                    translatePartialLoader: ['$translate', '$translatePartialLoader', function ($translate, $translatePartialLoader) {
                        $translatePartialLoader.addPart('decision');
                        $translatePartialLoader.addPart('global');
                        return $translate.refresh();
                    }]
                }
            })
            .state('decision.detail', {
                parent: 'entity',
                url: '/decision/{id}',
                data: {
                    authorities: ['ROLE_USER'],
                    pageTitle: 'dgdtoolApp.decision.detail.title'
                },
                views: {
                    'content@': {
                        templateUrl: 'scripts/app/entities/decision/decision-detail.html',
                        controller: 'DecisionDetailController'
                    }
                },
                resolve: {
                    translatePartialLoader: ['$translate', '$translatePartialLoader', function ($translate, $translatePartialLoader) {
                        $translatePartialLoader.addPart('decision');
                        return $translate.refresh();
                    }],
                    entity: ['$stateParams', 'Decision', function($stateParams, Decision) {
                        return Decision.get({id : $stateParams.id});
                    }]
                }
            })
            .state('decision.new', {
                parent: 'decision',
                url: '/new',
                data: {
                    authorities: ['ROLE_USER'],
                },
                onEnter: ['$stateParams', '$state', '$modal', function($stateParams, $state, $modal) {
                    $modal.open({
                        templateUrl: 'scripts/app/entities/decision/decision-dialog.html',
                        controller: 'DecisionDialogController',
                        size: 'lg',
                        resolve: {
                            entity: function () {
                                return {
                                    decision_name: null,
                                    description: null,
                                    status_id: null,
                                    created_by: null,
                                    created_date: null,
                                    modified_by: null,
                                    modified_date: null,
                                    id: null
                                };
                            }
                        }
                    }).result.then(function(result) {
                        $state.go('decision', null, { reload: true });
                    }, function() {
                        $state.go('decision');
                    })
                }]
            })
            .state('decision.edit', {
                parent: 'decision',
                url: '/{id}/edit',
                data: {
                    authorities: ['ROLE_USER'],
                },
                onEnter: ['$stateParams', '$state', '$modal', function($stateParams, $state, $modal) {
                    $modal.open({
                        templateUrl: 'scripts/app/entities/decision/decision-dialog.html',
                        controller: 'DecisionDialogController',
                        size: 'lg',
                        resolve: {
                            entity: ['Decision', function(Decision) {
                                return Decision.get({id : $stateParams.id});
                            }]
                        }
                    }).result.then(function(result) {
                        $state.go('decision', null, { reload: true });
                    }, function() {
                        $state.go('^');
                    })
                }]
            });
    }]);

'use strict';

angular.module('dgdtoolApp')
    .controller('DecisionController', ["$scope", "Decision", "DecisionSearch", "ParseLinks", function ($scope, Decision, DecisionSearch, ParseLinks) {
        $scope.decisions = [];
        $scope.page = 0;
        $scope.loadAll = function() {
            Decision.query({page: $scope.page, size: 20}, function(result, headers) {
                $scope.links = ParseLinks.parse(headers('link'));
                $scope.decisions = result;
            });
        };
        $scope.loadPage = function(page) {
            $scope.page = page;
            $scope.loadAll();
        };
        $scope.loadAll();

        $scope['delete'] = function (id) {
            Decision.get({id: id}, function(result) {
                $scope.decision = result;
                $('#deleteDecisionConfirmation').modal('show');
            });
        };

        $scope.confirmDelete = function (id) {
            Decision['delete']({id: id},
                function () {
                    $scope.loadAll();
                    $('#deleteDecisionConfirmation').modal('hide');
                    $scope.clear();
                });
        };

        $scope.search = function () {
            DecisionSearch.query({query: $scope.searchQuery}, function(result) {
                $scope.decisions = result;
            }, function(response) {
                if(response.status === 404) {
                    $scope.loadAll();
                }
            });
        };

        $scope.refresh = function () {
            $scope.loadAll();
            $scope.clear();
        };

        $scope.clear = function () {
            $scope.decision = {
                decision_name: null,
                description: null,
                status_id: null,
                created_by: null,
                created_date: null,
                modified_by: null,
                modified_date: null,
                id: null
            };
        };
    }]);

'use strict';

angular.module('dgdtoolApp').controller('DecisionDialogController',
    ['$scope', '$stateParams', '$modalInstance', 'entity', 'Decision',
        function($scope, $stateParams, $modalInstance, entity, Decision) {

        $scope.decision = entity;
        $scope.load = function(id) {
            Decision.get({id : id}, function(result) {
                $scope.decision = result;
            });
        };

        var onSaveFinished = function (result) {
            $scope.$emit('dgdtoolApp:decisionUpdate', result);
            $modalInstance.close(result);
        };

        $scope.save = function () {
            if ($scope.decision.id != null) {
                Decision.update($scope.decision, onSaveFinished);
            } else {
                Decision.save($scope.decision, onSaveFinished);
            }
        };

        $scope.clear = function() {
            $modalInstance.dismiss('cancel');
        };
}]);

'use strict';

angular.module('dgdtoolApp')
    .controller('DecisionDetailController', ["$scope", "$rootScope", "$stateParams", "entity", "Decision", function ($scope, $rootScope, $stateParams, entity, Decision) {
        $scope.decision = entity;
        $scope.load = function (id) {
            Decision.get({id: id}, function(result) {
                $scope.decision = result;
            });
        };
        var unsubscribe = $rootScope.$on('dgdtoolApp:decisionUpdate', function(event, result) {
            $scope.decision = result;
        });
        $scope.$on('$destroy', unsubscribe);

    }]);

'use strict';

angular.module('dgdtoolApp')
    .factory('Decision', ["$resource", "DateUtils", function ($resource, DateUtils) {
        return $resource('api/decisions/:id', {}, {
            'query': { method: 'GET', isArray: true},
            'get': {
                method: 'GET',
                transformResponse: function (data) {
                    data = angular.fromJson(data);
                    data.created_date = DateUtils.convertLocaleDateFromServer(data.created_date);
                    data.modified_date = DateUtils.convertLocaleDateFromServer(data.modified_date);
                    return data;
                }
            },
            'update': {
                method: 'PUT',
                transformRequest: function (data) {
                    data.created_date = DateUtils.convertLocaleDateToServer(data.created_date);
                    data.modified_date = DateUtils.convertLocaleDateToServer(data.modified_date);
                    return angular.toJson(data);
                }
            },
            'save': {
                method: 'POST',
                transformRequest: function (data) {
                    data.created_date = DateUtils.convertLocaleDateToServer(data.created_date);
                    data.modified_date = DateUtils.convertLocaleDateToServer(data.modified_date);
                    return angular.toJson(data);
                }
            }
        });
    }]);

'use strict';

angular.module('dgdtoolApp')
    .factory('DecisionSearch', ["$resource", function ($resource) {
        return $resource('api/_search/decisions/:query', {}, {
            'query': { method: 'GET', isArray: true}
        });
    }]);

'use strict';

angular.module('dgdtoolApp')
    .config(["$stateProvider", function ($stateProvider) {
        $stateProvider
            .state('frequency', {
                parent: 'entity',
                url: '/frequencys',
                data: {
                    authorities: ['ROLE_USER'],
                    pageTitle: 'dgdtoolApp.frequency.home.title'
                },
                views: {
                    'content@': {
                        templateUrl: 'scripts/app/entities/frequency/frequencys.html',
                        controller: 'FrequencyController'
                    }
                },
                resolve: {
                    translatePartialLoader: ['$translate', '$translatePartialLoader', function ($translate, $translatePartialLoader) {
                        $translatePartialLoader.addPart('frequency');
                        $translatePartialLoader.addPart('global');
                        return $translate.refresh();
                    }]
                }
            })
            .state('frequency.detail', {
                parent: 'entity',
                url: '/frequency/{id}',
                data: {
                    authorities: ['ROLE_USER'],
                    pageTitle: 'dgdtoolApp.frequency.detail.title'
                },
                views: {
                    'content@': {
                        templateUrl: 'scripts/app/entities/frequency/frequency-detail.html',
                        controller: 'FrequencyDetailController'
                    }
                },
                resolve: {
                    translatePartialLoader: ['$translate', '$translatePartialLoader', function ($translate, $translatePartialLoader) {
                        $translatePartialLoader.addPart('frequency');
                        return $translate.refresh();
                    }],
                    entity: ['$stateParams', 'Frequency', function($stateParams, Frequency) {
                        return Frequency.get({id : $stateParams.id});
                    }]
                }
            })
            .state('frequency.new', {
                parent: 'frequency',
                url: '/new',
                data: {
                    authorities: ['ROLE_USER'],
                },
                onEnter: ['$stateParams', '$state', '$modal', function($stateParams, $state, $modal) {
                    $modal.open({
                        templateUrl: 'scripts/app/entities/frequency/frequency-dialog.html',
                        controller: 'FrequencyDialogController',
                        size: 'lg',
                        resolve: {
                            entity: function () {
                                return {
                                    frequency_name: null,
                                    description: null,
                                    status_id: null,
                                    created_by: null,
                                    created_date: null,
                                    modified_by: null,
                                    modified_date: null,
                                    id: null
                                };
                            }
                        }
                    }).result.then(function(result) {
                        $state.go('frequency', null, { reload: true });
                    }, function() {
                        $state.go('frequency');
                    })
                }]
            })
            .state('frequency.edit', {
                parent: 'frequency',
                url: '/{id}/edit',
                data: {
                    authorities: ['ROLE_USER'],
                },
                onEnter: ['$stateParams', '$state', '$modal', function($stateParams, $state, $modal) {
                    $modal.open({
                        templateUrl: 'scripts/app/entities/frequency/frequency-dialog.html',
                        controller: 'FrequencyDialogController',
                        size: 'lg',
                        resolve: {
                            entity: ['Frequency', function(Frequency) {
                                return Frequency.get({id : $stateParams.id});
                            }]
                        }
                    }).result.then(function(result) {
                        $state.go('frequency', null, { reload: true });
                    }, function() {
                        $state.go('^');
                    })
                }]
            });
    }]);

'use strict';

angular.module('dgdtoolApp')
    .controller('FrequencyController', ["$scope", "Frequency", "FrequencySearch", "ParseLinks", function ($scope, Frequency, FrequencySearch, ParseLinks) {
        $scope.frequencys = [];
        $scope.page = 0;
        $scope.loadAll = function() {
            Frequency.query({page: $scope.page, size: 20}, function(result, headers) {
                $scope.links = ParseLinks.parse(headers('link'));
                $scope.frequencys = result;
            });
        };
        $scope.loadPage = function(page) {
            $scope.page = page;
            $scope.loadAll();
        };
        $scope.loadAll();

        $scope['delete'] = function (id) {
            Frequency.get({id: id}, function(result) {
                $scope.frequency = result;
                $('#deleteFrequencyConfirmation').modal('show');
            });
        };

        $scope.confirmDelete = function (id) {
            Frequency['delete']({id: id},
                function () {
                    $scope.loadAll();
                    $('#deleteFrequencyConfirmation').modal('hide');
                    $scope.clear();
                });
        };

        $scope.search = function () {
            FrequencySearch.query({query: $scope.searchQuery}, function(result) {
                $scope.frequencys = result;
            }, function(response) {
                if(response.status === 404) {
                    $scope.loadAll();
                }
            });
        };

        $scope.refresh = function () {
            $scope.loadAll();
            $scope.clear();
        };

        $scope.clear = function () {
            $scope.frequency = {
                frequency_name: null,
                description: null,
                status_id: null,
                created_by: null,
                created_date: null,
                modified_by: null,
                modified_date: null,
                id: null
            };
        };
    }]);

'use strict';

angular.module('dgdtoolApp').controller('FrequencyDialogController',
    ['$scope', '$stateParams', '$modalInstance', 'entity', 'Frequency',
        function($scope, $stateParams, $modalInstance, entity, Frequency) {

        $scope.frequency = entity;
        $scope.load = function(id) {
            Frequency.get({id : id}, function(result) {
                $scope.frequency = result;
            });
        };

        var onSaveFinished = function (result) {
            $scope.$emit('dgdtoolApp:frequencyUpdate', result);
            $modalInstance.close(result);
        };

        $scope.save = function () {
            if ($scope.frequency.id != null) {
                Frequency.update($scope.frequency, onSaveFinished);
            } else {
                Frequency.save($scope.frequency, onSaveFinished);
            }
        };

        $scope.clear = function() {
            $modalInstance.dismiss('cancel');
        };
}]);

'use strict';

angular.module('dgdtoolApp')
    .controller('FrequencyDetailController', ["$scope", "$rootScope", "$stateParams", "entity", "Frequency", function ($scope, $rootScope, $stateParams, entity, Frequency) {
        $scope.frequency = entity;
        $scope.load = function (id) {
            Frequency.get({id: id}, function(result) {
                $scope.frequency = result;
            });
        };
        var unsubscribe = $rootScope.$on('dgdtoolApp:frequencyUpdate', function(event, result) {
            $scope.frequency = result;
        });
        $scope.$on('$destroy', unsubscribe);

    }]);

'use strict';

angular.module('dgdtoolApp')
    .factory('Frequency', ["$resource", "DateUtils", function ($resource, DateUtils) {
        return $resource('api/frequencys/:id', {}, {
            'query': { method: 'GET', isArray: true},
            'get': {
                method: 'GET',
                transformResponse: function (data) {
                    data = angular.fromJson(data);
                    data.created_date = DateUtils.convertLocaleDateFromServer(data.created_date);
                    data.modified_date = DateUtils.convertLocaleDateFromServer(data.modified_date);
                    return data;
                }
            },
            'update': {
                method: 'PUT',
                transformRequest: function (data) {
                    data.created_date = DateUtils.convertLocaleDateToServer(data.created_date);
                    data.modified_date = DateUtils.convertLocaleDateToServer(data.modified_date);
                    return angular.toJson(data);
                }
            },
            'save': {
                method: 'POST',
                transformRequest: function (data) {
                    data.created_date = DateUtils.convertLocaleDateToServer(data.created_date);
                    data.modified_date = DateUtils.convertLocaleDateToServer(data.modified_date);
                    return angular.toJson(data);
                }
            }
        });
    }]);

'use strict';

angular.module('dgdtoolApp')
    .factory('FrequencySearch', ["$resource", function ($resource) {
        return $resource('api/_search/frequencys/:query', {}, {
            'query': { method: 'GET', isArray: true}
        });
    }]);

'use strict';

angular.module('dgdtoolApp')
    .config(["$stateProvider", function ($stateProvider) {
        $stateProvider
            .state('data_type', {
                parent: 'entity',
                url: '/data_types',
                data: {
                    authorities: ['ROLE_USER'],
                    pageTitle: 'dgdtoolApp.data_type.home.title'
                },
                views: {
                    'content@': {
                        templateUrl: 'scripts/app/entities/data_type/data_types.html',
                        controller: 'Data_typeController'
                    }
                },
                resolve: {
                    translatePartialLoader: ['$translate', '$translatePartialLoader', function ($translate, $translatePartialLoader) {
                        $translatePartialLoader.addPart('data_type');
                        $translatePartialLoader.addPart('global');
                        return $translate.refresh();
                    }]
                }
            })
            .state('data_type.detail', {
                parent: 'entity',
                url: '/data_type/{id}',
                data: {
                    authorities: ['ROLE_USER'],
                    pageTitle: 'dgdtoolApp.data_type.detail.title'
                },
                views: {
                    'content@': {
                        templateUrl: 'scripts/app/entities/data_type/data_type-detail.html',
                        controller: 'Data_typeDetailController'
                    }
                },
                resolve: {
                    translatePartialLoader: ['$translate', '$translatePartialLoader', function ($translate, $translatePartialLoader) {
                        $translatePartialLoader.addPart('data_type');
                        return $translate.refresh();
                    }],
                    entity: ['$stateParams', 'Data_type', function($stateParams, Data_type) {
                        return Data_type.get({id : $stateParams.id});
                    }]
                }
            })
            .state('data_type.new', {
                parent: 'data_type',
                url: '/new',
                data: {
                    authorities: ['ROLE_USER'],
                },
                onEnter: ['$stateParams', '$state', '$modal', function($stateParams, $state, $modal) {
                    $modal.open({
                        templateUrl: 'scripts/app/entities/data_type/data_type-dialog.html',
                        controller: 'Data_typeDialogController',
                        size: 'lg',
                        resolve: {
                            entity: function () {
                                return {
                                    data_type_name: null,
                                    description: null,
                                    status_id: null,
                                    created_by: null,
                                    created_date: null,
                                    modified_by: null,
                                    modified_date: null,
                                    id: null
                                };
                            }
                        }
                    }).result.then(function(result) {
                        $state.go('data_type', null, { reload: true });
                    }, function() {
                        $state.go('data_type');
                    })
                }]
            })
            .state('data_type.edit', {
                parent: 'data_type',
                url: '/{id}/edit',
                data: {
                    authorities: ['ROLE_USER'],
                },
                onEnter: ['$stateParams', '$state', '$modal', function($stateParams, $state, $modal) {
                    $modal.open({
                        templateUrl: 'scripts/app/entities/data_type/data_type-dialog.html',
                        controller: 'Data_typeDialogController',
                        size: 'lg',
                        resolve: {
                            entity: ['Data_type', function(Data_type) {
                                return Data_type.get({id : $stateParams.id});
                            }]
                        }
                    }).result.then(function(result) {
                        $state.go('data_type', null, { reload: true });
                    }, function() {
                        $state.go('^');
                    })
                }]
            });
    }]);

'use strict';

angular.module('dgdtoolApp')
    .controller('Data_typeController', ["$scope", "Data_type", "Data_typeSearch", "ParseLinks", function ($scope, Data_type, Data_typeSearch, ParseLinks) {
        $scope.data_types = [];
        $scope.page = 0;
        $scope.loadAll = function() {
            Data_type.query({page: $scope.page, size: 20}, function(result, headers) {
                $scope.links = ParseLinks.parse(headers('link'));
                $scope.data_types = result;
            });
        };
        $scope.loadPage = function(page) {
            $scope.page = page;
            $scope.loadAll();
        };
        $scope.loadAll();

        $scope['delete'] = function (id) {
            Data_type.get({id: id}, function(result) {
                $scope.data_type = result;
                $('#deleteData_typeConfirmation').modal('show');
            });
        };

        $scope.confirmDelete = function (id) {
            Data_type['delete']({id: id},
                function () {
                    $scope.loadAll();
                    $('#deleteData_typeConfirmation').modal('hide');
                    $scope.clear();
                });
        };

        $scope.search = function () {
            Data_typeSearch.query({query: $scope.searchQuery}, function(result) {
                $scope.data_types = result;
            }, function(response) {
                if(response.status === 404) {
                    $scope.loadAll();
                }
            });
        };

        $scope.refresh = function () {
            $scope.loadAll();
            $scope.clear();
        };

        $scope.clear = function () {
            $scope.data_type = {
                data_type_name: null,
                description: null,
                status_id: null,
                created_by: null,
                created_date: null,
                modified_by: null,
                modified_date: null,
                id: null
            };
        };
    }]);

'use strict';

angular.module('dgdtoolApp').controller('Data_typeDialogController',
    ['$scope', '$stateParams', '$modalInstance', 'entity', 'Data_type',
        function($scope, $stateParams, $modalInstance, entity, Data_type) {

        $scope.data_type = entity;
        $scope.load = function(id) {
            Data_type.get({id : id}, function(result) {
                $scope.data_type = result;
            });
        };

        var onSaveFinished = function (result) {
            $scope.$emit('dgdtoolApp:data_typeUpdate', result);
            $modalInstance.close(result);
        };

        $scope.save = function () {
            if ($scope.data_type.id != null) {
                Data_type.update($scope.data_type, onSaveFinished);
            } else {
                Data_type.save($scope.data_type, onSaveFinished);
            }
        };

        $scope.clear = function() {
            $modalInstance.dismiss('cancel');
        };
}]);

'use strict';

angular.module('dgdtoolApp')
    .controller('Data_typeDetailController', ["$scope", "$rootScope", "$stateParams", "entity", "Data_type", function ($scope, $rootScope, $stateParams, entity, Data_type) {
        $scope.data_type = entity;
        $scope.load = function (id) {
            Data_type.get({id: id}, function(result) {
                $scope.data_type = result;
            });
        };
        var unsubscribe = $rootScope.$on('dgdtoolApp:data_typeUpdate', function(event, result) {
            $scope.data_type = result;
        });
        $scope.$on('$destroy', unsubscribe);

    }]);

'use strict';

angular.module('dgdtoolApp')
    .factory('Data_type', ["$resource", "DateUtils", function ($resource, DateUtils) {
        return $resource('api/data_types/:id', {}, {
            'query': { method: 'GET', isArray: true},
            'get': {
                method: 'GET',
                transformResponse: function (data) {
                    data = angular.fromJson(data);
                    data.created_date = DateUtils.convertLocaleDateFromServer(data.created_date);
                    data.modified_date = DateUtils.convertLocaleDateFromServer(data.modified_date);
                    return data;
                }
            },
            'update': {
                method: 'PUT',
                transformRequest: function (data) {
                    data.created_date = DateUtils.convertLocaleDateToServer(data.created_date);
                    data.modified_date = DateUtils.convertLocaleDateToServer(data.modified_date);
                    return angular.toJson(data);
                }
            },
            'save': {
                method: 'POST',
                transformRequest: function (data) {
                    data.created_date = DateUtils.convertLocaleDateToServer(data.created_date);
                    data.modified_date = DateUtils.convertLocaleDateToServer(data.modified_date);
                    return angular.toJson(data);
                }
            }
        });
    }]);

'use strict';

angular.module('dgdtoolApp')
    .factory('Data_typeSearch', ["$resource", function ($resource) {
        return $resource('api/_search/data_types/:query', {}, {
            'query': { method: 'GET', isArray: true}
        });
    }]);

'use strict';

angular.module('dgdtoolApp')
    .config(["$stateProvider", function ($stateProvider) {
        $stateProvider
            .state('field_type', {
                parent: 'entity',
                url: '/field_types',
                data: {
                    authorities: ['ROLE_USER'],
                    pageTitle: 'dgdtoolApp.field_type.home.title'
                },
                views: {
                    'content@': {
                        templateUrl: 'scripts/app/entities/field_type/field_types.html',
                        controller: 'Field_typeController'
                    }
                },
                resolve: {
                    translatePartialLoader: ['$translate', '$translatePartialLoader', function ($translate, $translatePartialLoader) {
                        $translatePartialLoader.addPart('field_type');
                        $translatePartialLoader.addPart('global');
                        return $translate.refresh();
                    }]
                }
            })
            .state('field_type.detail', {
                parent: 'entity',
                url: '/field_type/{id}',
                data: {
                    authorities: ['ROLE_USER'],
                    pageTitle: 'dgdtoolApp.field_type.detail.title'
                },
                views: {
                    'content@': {
                        templateUrl: 'scripts/app/entities/field_type/field_type-detail.html',
                        controller: 'Field_typeDetailController'
                    }
                },
                resolve: {
                    translatePartialLoader: ['$translate', '$translatePartialLoader', function ($translate, $translatePartialLoader) {
                        $translatePartialLoader.addPart('field_type');
                        return $translate.refresh();
                    }],
                    entity: ['$stateParams', 'Field_type', function($stateParams, Field_type) {
                        return Field_type.get({id : $stateParams.id});
                    }]
                }
            })
            .state('field_type.new', {
                parent: 'field_type',
                url: '/new',
                data: {
                    authorities: ['ROLE_USER'],
                },
                onEnter: ['$stateParams', '$state', '$modal', function($stateParams, $state, $modal) {
                    $modal.open({
                        templateUrl: 'scripts/app/entities/field_type/field_type-dialog.html',
                        controller: 'Field_typeDialogController',
                        size: 'lg',
                        resolve: {
                            entity: function () {
                                return {
                                    field_type_name: null,
                                    description: null,
                                    status_id: null,
                                    created_by: null,
                                    created_date: null,
                                    modified_by: null,
                                    modified_date: null,
                                    id: null
                                };
                            }
                        }
                    }).result.then(function(result) {
                        $state.go('field_type', null, { reload: true });
                    }, function() {
                        $state.go('field_type');
                    })
                }]
            })
            .state('field_type.edit', {
                parent: 'field_type',
                url: '/{id}/edit',
                data: {
                    authorities: ['ROLE_USER'],
                },
                onEnter: ['$stateParams', '$state', '$modal', function($stateParams, $state, $modal) {
                    $modal.open({
                        templateUrl: 'scripts/app/entities/field_type/field_type-dialog.html',
                        controller: 'Field_typeDialogController',
                        size: 'lg',
                        resolve: {
                            entity: ['Field_type', function(Field_type) {
                                return Field_type.get({id : $stateParams.id});
                            }]
                        }
                    }).result.then(function(result) {
                        $state.go('field_type', null, { reload: true });
                    }, function() {
                        $state.go('^');
                    })
                }]
            });
    }]);

'use strict';

angular.module('dgdtoolApp')
    .controller('Field_typeController', ["$scope", "Field_type", "Field_typeSearch", "ParseLinks", function ($scope, Field_type, Field_typeSearch, ParseLinks) {
        $scope.field_types = [];
        $scope.page = 0;
        $scope.loadAll = function() {
            Field_type.query({page: $scope.page, size: 20}, function(result, headers) {
                $scope.links = ParseLinks.parse(headers('link'));
                $scope.field_types = result;
            });
        };
        $scope.loadPage = function(page) {
            $scope.page = page;
            $scope.loadAll();
        };
        $scope.loadAll();

        $scope['delete'] = function (id) {
            Field_type.get({id: id}, function(result) {
                $scope.field_type = result;
                $('#deleteField_typeConfirmation').modal('show');
            });
        };

        $scope.confirmDelete = function (id) {
            Field_type['delete']({id: id},
                function () {
                    $scope.loadAll();
                    $('#deleteField_typeConfirmation').modal('hide');
                    $scope.clear();
                });
        };

        $scope.search = function () {
            Field_typeSearch.query({query: $scope.searchQuery}, function(result) {
                $scope.field_types = result;
            }, function(response) {
                if(response.status === 404) {
                    $scope.loadAll();
                }
            });
        };

        $scope.refresh = function () {
            $scope.loadAll();
            $scope.clear();
        };

        $scope.clear = function () {
            $scope.field_type = {
                field_type_name: null,
                description: null,
                status_id: null,
                created_by: null,
                created_date: null,
                modified_by: null,
                modified_date: null,
                id: null
            };
        };
    }]);

'use strict';

angular.module('dgdtoolApp').controller('Field_typeDialogController',
    ['$scope', '$stateParams', '$modalInstance', 'entity', 'Field_type',
        function($scope, $stateParams, $modalInstance, entity, Field_type) {

        $scope.field_type = entity;
        $scope.load = function(id) {
            Field_type.get({id : id}, function(result) {
                $scope.field_type = result;
            });
        };

        var onSaveFinished = function (result) {
            $scope.$emit('dgdtoolApp:field_typeUpdate', result);
            $modalInstance.close(result);
        };

        $scope.save = function () {
            if ($scope.field_type.id != null) {
                Field_type.update($scope.field_type, onSaveFinished);
            } else {
                Field_type.save($scope.field_type, onSaveFinished);
            }
        };

        $scope.clear = function() {
            $modalInstance.dismiss('cancel');
        };
}]);

'use strict';

angular.module('dgdtoolApp')
    .controller('Field_typeDetailController', ["$scope", "$rootScope", "$stateParams", "entity", "Field_type", function ($scope, $rootScope, $stateParams, entity, Field_type) {
        $scope.field_type = entity;
        $scope.load = function (id) {
            Field_type.get({id: id}, function(result) {
                $scope.field_type = result;
            });
        };
        var unsubscribe = $rootScope.$on('dgdtoolApp:field_typeUpdate', function(event, result) {
            $scope.field_type = result;
        });
        $scope.$on('$destroy', unsubscribe);

    }]);

'use strict';

angular.module('dgdtoolApp')
    .factory('Field_type', ["$resource", "DateUtils", function ($resource, DateUtils) {
        return $resource('api/field_types/:id', {}, {
            'query': { method: 'GET', isArray: true},
            'get': {
                method: 'GET',
                transformResponse: function (data) {
                    data = angular.fromJson(data);
                    data.created_date = DateUtils.convertLocaleDateFromServer(data.created_date);
                    data.modified_date = DateUtils.convertLocaleDateFromServer(data.modified_date);
                    return data;
                }
            },
            'update': {
                method: 'PUT',
                transformRequest: function (data) {
                    data.created_date = DateUtils.convertLocaleDateToServer(data.created_date);
                    data.modified_date = DateUtils.convertLocaleDateToServer(data.modified_date);
                    return angular.toJson(data);
                }
            },
            'save': {
                method: 'POST',
                transformRequest: function (data) {
                    data.created_date = DateUtils.convertLocaleDateToServer(data.created_date);
                    data.modified_date = DateUtils.convertLocaleDateToServer(data.modified_date);
                    return angular.toJson(data);
                }
            }
        });
    }]);

'use strict';

angular.module('dgdtoolApp')
    .factory('Field_typeSearch', ["$resource", function ($resource) {
        return $resource('api/_search/field_types/:query', {}, {
            'query': { method: 'GET', isArray: true}
        });
    }]);

'use strict';

angular.module('dgdtoolApp')
    .config(["$stateProvider", function ($stateProvider) {
        $stateProvider
            .state('security_solution', {
                parent: 'entity',
                url: '/security_solutions',
                data: {
                    authorities: ['ROLE_USER'],
                    pageTitle: 'dgdtoolApp.security_solution.home.title'
                },
                views: {
                    'content@': {
                        templateUrl: 'scripts/app/entities/security_solution/security_solutions.html',
                        controller: 'Security_solutionController'
                    }
                },
                resolve: {
                    translatePartialLoader: ['$translate', '$translatePartialLoader', function ($translate, $translatePartialLoader) {
                        $translatePartialLoader.addPart('security_solution');
                        $translatePartialLoader.addPart('global');
                        return $translate.refresh();
                    }]
                }
            })
            .state('security_solution.detail', {
                parent: 'entity',
                url: '/security_solution/{id}',
                data: {
                    authorities: ['ROLE_USER'],
                    pageTitle: 'dgdtoolApp.security_solution.detail.title'
                },
                views: {
                    'content@': {
                        templateUrl: 'scripts/app/entities/security_solution/security_solution-detail.html',
                        controller: 'Security_solutionDetailController'
                    }
                },
                resolve: {
                    translatePartialLoader: ['$translate', '$translatePartialLoader', function ($translate, $translatePartialLoader) {
                        $translatePartialLoader.addPart('security_solution');
                        return $translate.refresh();
                    }],
                    entity: ['$stateParams', 'Security_solution', function($stateParams, Security_solution) {
                        return Security_solution.get({id : $stateParams.id});
                    }]
                }
            })
            .state('security_solution.new', {
                parent: 'security_solution',
                url: '/new',
                data: {
                    authorities: ['ROLE_USER'],
                },
                onEnter: ['$stateParams', '$state', '$modal', function($stateParams, $state, $modal) {
                    $modal.open({
                        templateUrl: 'scripts/app/entities/security_solution/security_solution-dialog.html',
                        controller: 'Security_solutionDialogController',
                        size: 'lg',
                        resolve: {
                            entity: function () {
                                return {
                                    security_solution_name: null,
                                    description: null,
                                    status_id: null,
                                    created_by: null,
                                    created_date: null,
                                    modified_by: null,
                                    modified_date: null,
                                    id: null
                                };
                            }
                        }
                    }).result.then(function(result) {
                        $state.go('security_solution', null, { reload: true });
                    }, function() {
                        $state.go('security_solution');
                    })
                }]
            })
            .state('security_solution.edit', {
                parent: 'security_solution',
                url: '/{id}/edit',
                data: {
                    authorities: ['ROLE_USER'],
                },
                onEnter: ['$stateParams', '$state', '$modal', function($stateParams, $state, $modal) {
                    $modal.open({
                        templateUrl: 'scripts/app/entities/security_solution/security_solution-dialog.html',
                        controller: 'Security_solutionDialogController',
                        size: 'lg',
                        resolve: {
                            entity: ['Security_solution', function(Security_solution) {
                                return Security_solution.get({id : $stateParams.id});
                            }]
                        }
                    }).result.then(function(result) {
                        $state.go('security_solution', null, { reload: true });
                    }, function() {
                        $state.go('^');
                    })
                }]
            });
    }]);

'use strict';

angular.module('dgdtoolApp')
    .controller('Security_solutionController', ["$scope", "Security_solution", "Security_solutionSearch", "ParseLinks", function ($scope, Security_solution, Security_solutionSearch, ParseLinks) {
        $scope.security_solutions = [];
        $scope.page = 0;
        $scope.loadAll = function() {
            Security_solution.query({page: $scope.page, size: 20}, function(result, headers) {
                $scope.links = ParseLinks.parse(headers('link'));
                $scope.security_solutions = result;
            });
        };
        $scope.loadPage = function(page) {
            $scope.page = page;
            $scope.loadAll();
        };
        $scope.loadAll();

        $scope['delete'] = function (id) {
            Security_solution.get({id: id}, function(result) {
                $scope.security_solution = result;
                $('#deleteSecurity_solutionConfirmation').modal('show');
            });
        };

        $scope.confirmDelete = function (id) {
            Security_solution['delete']({id: id},
                function () {
                    $scope.loadAll();
                    $('#deleteSecurity_solutionConfirmation').modal('hide');
                    $scope.clear();
                });
        };

        $scope.search = function () {
            Security_solutionSearch.query({query: $scope.searchQuery}, function(result) {
                $scope.security_solutions = result;
            }, function(response) {
                if(response.status === 404) {
                    $scope.loadAll();
                }
            });
        };

        $scope.refresh = function () {
            $scope.loadAll();
            $scope.clear();
        };

        $scope.clear = function () {
            $scope.security_solution = {
                security_solution_name: null,
                description: null,
                status_id: null,
                created_by: null,
                created_date: null,
                modified_by: null,
                modified_date: null,
                id: null
            };
        };
    }]);

'use strict';

angular.module('dgdtoolApp').controller('Security_solutionDialogController',
    ['$scope', '$stateParams', '$modalInstance', 'entity', 'Security_solution',
        function($scope, $stateParams, $modalInstance, entity, Security_solution) {

        $scope.security_solution = entity;
        $scope.load = function(id) {
            Security_solution.get({id : id}, function(result) {
                $scope.security_solution = result;
            });
        };

        var onSaveFinished = function (result) {
            $scope.$emit('dgdtoolApp:security_solutionUpdate', result);
            $modalInstance.close(result);
        };

        $scope.save = function () {
            if ($scope.security_solution.id != null) {
                Security_solution.update($scope.security_solution, onSaveFinished);
            } else {
                Security_solution.save($scope.security_solution, onSaveFinished);
            }
        };

        $scope.clear = function() {
            $modalInstance.dismiss('cancel');
        };
}]);

'use strict';

angular.module('dgdtoolApp')
    .controller('Security_solutionDetailController', ["$scope", "$rootScope", "$stateParams", "entity", "Security_solution", function ($scope, $rootScope, $stateParams, entity, Security_solution) {
        $scope.security_solution = entity;
        $scope.load = function (id) {
            Security_solution.get({id: id}, function(result) {
                $scope.security_solution = result;
            });
        };
        var unsubscribe = $rootScope.$on('dgdtoolApp:security_solutionUpdate', function(event, result) {
            $scope.security_solution = result;
        });
        $scope.$on('$destroy', unsubscribe);

    }]);

'use strict';

angular.module('dgdtoolApp')
    .factory('Security_solution', ["$resource", "DateUtils", function ($resource, DateUtils) {
        return $resource('api/security_solutions/:id', {}, {
            'query': { method: 'GET', isArray: true},
            'get': {
                method: 'GET',
                transformResponse: function (data) {
                    data = angular.fromJson(data);
                    data.created_date = DateUtils.convertLocaleDateFromServer(data.created_date);
                    data.modified_date = DateUtils.convertLocaleDateFromServer(data.modified_date);
                    return data;
                }
            },
            'update': {
                method: 'PUT',
                transformRequest: function (data) {
                    data.created_date = DateUtils.convertLocaleDateToServer(data.created_date);
                    data.modified_date = DateUtils.convertLocaleDateToServer(data.modified_date);
                    return angular.toJson(data);
                }
            },
            'save': {
                method: 'POST',
                transformRequest: function (data) {
                    data.created_date = DateUtils.convertLocaleDateToServer(data.created_date);
                    data.modified_date = DateUtils.convertLocaleDateToServer(data.modified_date);
                    return angular.toJson(data);
                }
            }
        });
    }]);

'use strict';

angular.module('dgdtoolApp')
    .factory('Security_solutionSearch', ["$resource", function ($resource) {
        return $resource('api/_search/security_solutions/:query', {}, {
            'query': { method: 'GET', isArray: true}
        });
    }]);

'use strict';

angular.module('dgdtoolApp')
    .config(["$stateProvider", function ($stateProvider) {
        $stateProvider
            .state('data_state', {
                parent: 'entity',
                url: '/data_states',
                data: {
                    authorities: ['ROLE_USER'],
                    pageTitle: 'dgdtoolApp.data_state.home.title'
                },
                views: {
                    'content@': {
                        templateUrl: 'scripts/app/entities/data_state/data_states.html',
                        controller: 'Data_stateController'
                    }
                },
                resolve: {
                    translatePartialLoader: ['$translate', '$translatePartialLoader', function ($translate, $translatePartialLoader) {
                        $translatePartialLoader.addPart('data_state');
                        $translatePartialLoader.addPart('global');
                        return $translate.refresh();
                    }]
                }
            })
            .state('data_state.detail', {
                parent: 'entity',
                url: '/data_state/{id}',
                data: {
                    authorities: ['ROLE_USER'],
                    pageTitle: 'dgdtoolApp.data_state.detail.title'
                },
                views: {
                    'content@': {
                        templateUrl: 'scripts/app/entities/data_state/data_state-detail.html',
                        controller: 'Data_stateDetailController'
                    }
                },
                resolve: {
                    translatePartialLoader: ['$translate', '$translatePartialLoader', function ($translate, $translatePartialLoader) {
                        $translatePartialLoader.addPart('data_state');
                        return $translate.refresh();
                    }],
                    entity: ['$stateParams', 'Data_state', function($stateParams, Data_state) {
                        return Data_state.get({id : $stateParams.id});
                    }]
                }
            })
            .state('data_state.new', {
                parent: 'data_state',
                url: '/new',
                data: {
                    authorities: ['ROLE_USER'],
                },
                onEnter: ['$stateParams', '$state', '$modal', function($stateParams, $state, $modal) {
                    $modal.open({
                        templateUrl: 'scripts/app/entities/data_state/data_state-dialog.html',
                        controller: 'Data_stateDialogController',
                        size: 'lg',
                        resolve: {
                            entity: function () {
                                return {
                                    data_state_name: null,
                                    description: null,
                                    status_id: null,
                                    created_by: null,
                                    created_date: null,
                                    modified_by: null,
                                    modified_date: null,
                                    id: null
                                };
                            }
                        }
                    }).result.then(function(result) {
                        $state.go('data_state', null, { reload: true });
                    }, function() {
                        $state.go('data_state');
                    })
                }]
            })
            .state('data_state.edit', {
                parent: 'data_state',
                url: '/{id}/edit',
                data: {
                    authorities: ['ROLE_USER'],
                },
                onEnter: ['$stateParams', '$state', '$modal', function($stateParams, $state, $modal) {
                    $modal.open({
                        templateUrl: 'scripts/app/entities/data_state/data_state-dialog.html',
                        controller: 'Data_stateDialogController',
                        size: 'lg',
                        resolve: {
                            entity: ['Data_state', function(Data_state) {
                                return Data_state.get({id : $stateParams.id});
                            }]
                        }
                    }).result.then(function(result) {
                        $state.go('data_state', null, { reload: true });
                    }, function() {
                        $state.go('^');
                    })
                }]
            });
    }]);

'use strict';

angular.module('dgdtoolApp')
    .controller('Data_stateController', ["$scope", "Data_state", "Data_stateSearch", "ParseLinks", function ($scope, Data_state, Data_stateSearch, ParseLinks) {
        $scope.data_states = [];
        $scope.page = 0;
        $scope.loadAll = function() {
            Data_state.query({page: $scope.page, size: 20}, function(result, headers) {
                $scope.links = ParseLinks.parse(headers('link'));
                $scope.data_states = result;
            });
        };
        $scope.loadPage = function(page) {
            $scope.page = page;
            $scope.loadAll();
        };
        $scope.loadAll();

        $scope['delete'] = function (id) {
            Data_state.get({id: id}, function(result) {
                $scope.data_state = result;
                $('#deleteData_stateConfirmation').modal('show');
            });
        };

        $scope.confirmDelete = function (id) {
            Data_state['delete']({id: id},
                function () {
                    $scope.loadAll();
                    $('#deleteData_stateConfirmation').modal('hide');
                    $scope.clear();
                });
        };

        $scope.search = function () {
            Data_stateSearch.query({query: $scope.searchQuery}, function(result) {
                $scope.data_states = result;
            }, function(response) {
                if(response.status === 404) {
                    $scope.loadAll();
                }
            });
        };

        $scope.refresh = function () {
            $scope.loadAll();
            $scope.clear();
        };

        $scope.clear = function () {
            $scope.data_state = {
                data_state_name: null,
                description: null,
                status_id: null,
                created_by: null,
                created_date: null,
                modified_by: null,
                modified_date: null,
                id: null
            };
        };
    }]);

'use strict';

angular.module('dgdtoolApp').controller('Data_stateDialogController',
    ['$scope', '$stateParams', '$modalInstance', 'entity', 'Data_state',
        function($scope, $stateParams, $modalInstance, entity, Data_state) {

        $scope.data_state = entity;
        $scope.load = function(id) {
            Data_state.get({id : id}, function(result) {
                $scope.data_state = result;
            });
        };

        var onSaveFinished = function (result) {
            $scope.$emit('dgdtoolApp:data_stateUpdate', result);
            $modalInstance.close(result);
        };

        $scope.save = function () {
            if ($scope.data_state.id != null) {
                Data_state.update($scope.data_state, onSaveFinished);
            } else {
                Data_state.save($scope.data_state, onSaveFinished);
            }
        };

        $scope.clear = function() {
            $modalInstance.dismiss('cancel');
        };
}]);

'use strict';

angular.module('dgdtoolApp')
    .controller('Data_stateDetailController', ["$scope", "$rootScope", "$stateParams", "entity", "Data_state", function ($scope, $rootScope, $stateParams, entity, Data_state) {
        $scope.data_state = entity;
        $scope.load = function (id) {
            Data_state.get({id: id}, function(result) {
                $scope.data_state = result;
            });
        };
        var unsubscribe = $rootScope.$on('dgdtoolApp:data_stateUpdate', function(event, result) {
            $scope.data_state = result;
        });
        $scope.$on('$destroy', unsubscribe);

    }]);

'use strict';

angular.module('dgdtoolApp')
    .factory('Data_state', ["$resource", "DateUtils", function ($resource, DateUtils) {
        return $resource('api/data_states/:id', {}, {
            'query': { method: 'GET', isArray: true},
            'get': {
                method: 'GET',
                transformResponse: function (data) {
                    data = angular.fromJson(data);
                    data.created_date = DateUtils.convertLocaleDateFromServer(data.created_date);
                    data.modified_date = DateUtils.convertLocaleDateFromServer(data.modified_date);
                    return data;
                }
            },
            'update': {
                method: 'PUT',
                transformRequest: function (data) {
                    data.created_date = DateUtils.convertLocaleDateToServer(data.created_date);
                    data.modified_date = DateUtils.convertLocaleDateToServer(data.modified_date);
                    return angular.toJson(data);
                }
            },
            'save': {
                method: 'POST',
                transformRequest: function (data) {
                    data.created_date = DateUtils.convertLocaleDateToServer(data.created_date);
                    data.modified_date = DateUtils.convertLocaleDateToServer(data.modified_date);
                    return angular.toJson(data);
                }
            }
        });
    }]);

'use strict';

angular.module('dgdtoolApp')
    .factory('Data_stateSearch', ["$resource", function ($resource) {
        return $resource('api/_search/data_states/:query', {}, {
            'query': { method: 'GET', isArray: true}
        });
    }]);

'use strict';

angular.module('dgdtoolApp')
    .config(["$stateProvider", function ($stateProvider) {
        $stateProvider
            .state('asset_type', {
                parent: 'entity',
                url: '/asset_types',
                data: {
                    authorities: ['ROLE_USER'],
                    pageTitle: 'dgdtoolApp.asset_type.home.title'
                },
                views: {
                    'content@': {
                        templateUrl: 'scripts/app/entities/asset_type/asset_types.html',
                        controller: 'Asset_typeController'
                    }
                },
                resolve: {
                    translatePartialLoader: ['$translate', '$translatePartialLoader', function ($translate, $translatePartialLoader) {
                        $translatePartialLoader.addPart('asset_type');
                        $translatePartialLoader.addPart('global');
                        return $translate.refresh();
                    }]
                }
            })
            .state('asset_type.detail', {
                parent: 'entity',
                url: '/asset_type/{id}',
                data: {
                    authorities: ['ROLE_USER'],
                    pageTitle: 'dgdtoolApp.asset_type.detail.title'
                },
                views: {
                    'content@': {
                        templateUrl: 'scripts/app/entities/asset_type/asset_type-detail.html',
                        controller: 'Asset_typeDetailController'
                    }
                },
                resolve: {
                    translatePartialLoader: ['$translate', '$translatePartialLoader', function ($translate, $translatePartialLoader) {
                        $translatePartialLoader.addPart('asset_type');
                        return $translate.refresh();
                    }],
                    entity: ['$stateParams', 'Asset_type', function($stateParams, Asset_type) {
                        return Asset_type.get({id : $stateParams.id});
                    }]
                }
            })
            .state('asset_type.new', {
                parent: 'asset_type',
                url: '/new',
                data: {
                    authorities: ['ROLE_USER'],
                },
                onEnter: ['$stateParams', '$state', '$modal', function($stateParams, $state, $modal) {
                    $modal.open({
                        templateUrl: 'scripts/app/entities/asset_type/asset_type-dialog.html',
                        controller: 'Asset_typeDialogController',
                        size: 'lg',
                        resolve: {
                            entity: function () {
                                return {
                                    asset_type_name: null,
                                    description: null,
                                    status_id: null,
                                    created_by: null,
                                    created_date: null,
                                    modified_by: null,
                                    modified_date: null,
                                    id: null
                                };
                            }
                        }
                    }).result.then(function(result) {
                        $state.go('asset_type', null, { reload: true });
                    }, function() {
                        $state.go('asset_type');
                    })
                }]
            })
            .state('asset_type.edit', {
                parent: 'asset_type',
                url: '/{id}/edit',
                data: {
                    authorities: ['ROLE_USER'],
                },
                onEnter: ['$stateParams', '$state', '$modal', function($stateParams, $state, $modal) {
                    $modal.open({
                        templateUrl: 'scripts/app/entities/asset_type/asset_type-dialog.html',
                        controller: 'Asset_typeDialogController',
                        size: 'lg',
                        resolve: {
                            entity: ['Asset_type', function(Asset_type) {
                                return Asset_type.get({id : $stateParams.id});
                            }]
                        }
                    }).result.then(function(result) {
                        $state.go('asset_type', null, { reload: true });
                    }, function() {
                        $state.go('^');
                    })
                }]
            });
    }]);

'use strict';

angular.module('dgdtoolApp')
    .controller('Asset_typeController', ["$scope", "Asset_type", "Asset_typeSearch", "ParseLinks", function ($scope, Asset_type, Asset_typeSearch, ParseLinks) {
        $scope.asset_types = [];
        $scope.page = 0;
        $scope.loadAll = function() {
            Asset_type.query({page: $scope.page, size: 20}, function(result, headers) {
                $scope.links = ParseLinks.parse(headers('link'));
                $scope.asset_types = result;
            });
        };
        $scope.loadPage = function(page) {
            $scope.page = page;
            $scope.loadAll();
        };
        $scope.loadAll();

        $scope['delete'] = function (id) {
            Asset_type.get({id: id}, function(result) {
                $scope.asset_type = result;
                $('#deleteAsset_typeConfirmation').modal('show');
            });
        };

        $scope.confirmDelete = function (id) {
            Asset_type['delete']({id: id},
                function () {
                    $scope.loadAll();
                    $('#deleteAsset_typeConfirmation').modal('hide');
                    $scope.clear();
                });
        };

        $scope.search = function () {
            Asset_typeSearch.query({query: $scope.searchQuery}, function(result) {
                $scope.asset_types = result;
            }, function(response) {
                if(response.status === 404) {
                    $scope.loadAll();
                }
            });
        };

        $scope.refresh = function () {
            $scope.loadAll();
            $scope.clear();
        };

        $scope.clear = function () {
            $scope.asset_type = {
                asset_type_name: null,
                description: null,
                status_id: null,
                created_by: null,
                created_date: null,
                modified_by: null,
                modified_date: null,
                id: null
            };
        };
    }]);

'use strict';

angular.module('dgdtoolApp').controller('Asset_typeDialogController',
    ['$scope', '$stateParams', '$modalInstance', 'entity', 'Asset_type',
        function($scope, $stateParams, $modalInstance, entity, Asset_type) {

        $scope.asset_type = entity;
        $scope.load = function(id) {
            Asset_type.get({id : id}, function(result) {
                $scope.asset_type = result;
            });
        };

        var onSaveFinished = function (result) {
            $scope.$emit('dgdtoolApp:asset_typeUpdate', result);
            $modalInstance.close(result);
        };

        $scope.save = function () {
            if ($scope.asset_type.id != null) {
                Asset_type.update($scope.asset_type, onSaveFinished);
            } else {
                Asset_type.save($scope.asset_type, onSaveFinished);
            }
        };

        $scope.clear = function() {
            $modalInstance.dismiss('cancel');
        };
}]);

'use strict';

angular.module('dgdtoolApp')
    .controller('Asset_typeDetailController', ["$scope", "$rootScope", "$stateParams", "entity", "Asset_type", function ($scope, $rootScope, $stateParams, entity, Asset_type) {
        $scope.asset_type = entity;
        $scope.load = function (id) {
            Asset_type.get({id: id}, function(result) {
                $scope.asset_type = result;
            });
        };
        var unsubscribe = $rootScope.$on('dgdtoolApp:asset_typeUpdate', function(event, result) {
            $scope.asset_type = result;
        });
        $scope.$on('$destroy', unsubscribe);

    }]);

'use strict';

angular.module('dgdtoolApp')
    .factory('Asset_type', ["$resource", "DateUtils", function ($resource, DateUtils) {
        return $resource('api/asset_types/:id', {}, {
            'query': { method: 'GET', isArray: true},
            'get': {
                method: 'GET',
                transformResponse: function (data) {
                    data = angular.fromJson(data);
                    data.created_date = DateUtils.convertLocaleDateFromServer(data.created_date);
                    data.modified_date = DateUtils.convertLocaleDateFromServer(data.modified_date);
                    return data;
                }
            },
            'update': {
                method: 'PUT',
                transformRequest: function (data) {
                    data.created_date = DateUtils.convertLocaleDateToServer(data.created_date);
                    data.modified_date = DateUtils.convertLocaleDateToServer(data.modified_date);
                    return angular.toJson(data);
                }
            },
            'save': {
                method: 'POST',
                transformRequest: function (data) {
                    data.created_date = DateUtils.convertLocaleDateToServer(data.created_date);
                    data.modified_date = DateUtils.convertLocaleDateToServer(data.modified_date);
                    return angular.toJson(data);
                }
            }
        });
    }]);

'use strict';

angular.module('dgdtoolApp')
    .factory('Asset_typeSearch', ["$resource", function ($resource) {
        return $resource('api/_search/asset_types/:query', {}, {
            'query': { method: 'GET', isArray: true}
        });
    }]);

'use strict';

angular.module('dgdtoolApp')
    .config(["$stateProvider", function ($stateProvider) {
        $stateProvider
            .state('end_state_designation', {
                parent: 'entity',
                url: '/end_state_designations',
                data: {
                    authorities: ['ROLE_USER'],
                    pageTitle: 'dgdtoolApp.end_state_designation.home.title'
                },
                views: {
                    'content@': {
                        templateUrl: 'scripts/app/entities/end_state_designation/end_state_designations.html',
                        controller: 'End_state_designationController'
                    }
                },
                resolve: {
                    translatePartialLoader: ['$translate', '$translatePartialLoader', function ($translate, $translatePartialLoader) {
                        $translatePartialLoader.addPart('end_state_designation');
                        $translatePartialLoader.addPart('global');
                        return $translate.refresh();
                    }]
                }
            })
            .state('end_state_designation.detail', {
                parent: 'entity',
                url: '/end_state_designation/{id}',
                data: {
                    authorities: ['ROLE_USER'],
                    pageTitle: 'dgdtoolApp.end_state_designation.detail.title'
                },
                views: {
                    'content@': {
                        templateUrl: 'scripts/app/entities/end_state_designation/end_state_designation-detail.html',
                        controller: 'End_state_designationDetailController'
                    }
                },
                resolve: {
                    translatePartialLoader: ['$translate', '$translatePartialLoader', function ($translate, $translatePartialLoader) {
                        $translatePartialLoader.addPart('end_state_designation');
                        return $translate.refresh();
                    }],
                    entity: ['$stateParams', 'End_state_designation', function($stateParams, End_state_designation) {
                        return End_state_designation.get({id : $stateParams.id});
                    }]
                }
            })
            .state('end_state_designation.new', {
                parent: 'end_state_designation',
                url: '/new',
                data: {
                    authorities: ['ROLE_USER'],
                },
                onEnter: ['$stateParams', '$state', '$modal', function($stateParams, $state, $modal) {
                    $modal.open({
                        templateUrl: 'scripts/app/entities/end_state_designation/end_state_designation-dialog.html',
                        controller: 'End_state_designationDialogController',
                        size: 'lg',
                        resolve: {
                            entity: function () {
                                return {
                                    end_state_designation_name: null,
                                    description: null,
                                    status_id: null,
                                    created_by: null,
                                    created_date: null,
                                    modified_by: null,
                                    modified_date: null,
                                    id: null
                                };
                            }
                        }
                    }).result.then(function(result) {
                        $state.go('end_state_designation', null, { reload: true });
                    }, function() {
                        $state.go('end_state_designation');
                    })
                }]
            })
            .state('end_state_designation.edit', {
                parent: 'end_state_designation',
                url: '/{id}/edit',
                data: {
                    authorities: ['ROLE_USER'],
                },
                onEnter: ['$stateParams', '$state', '$modal', function($stateParams, $state, $modal) {
                    $modal.open({
                        templateUrl: 'scripts/app/entities/end_state_designation/end_state_designation-dialog.html',
                        controller: 'End_state_designationDialogController',
                        size: 'lg',
                        resolve: {
                            entity: ['End_state_designation', function(End_state_designation) {
                                return End_state_designation.get({id : $stateParams.id});
                            }]
                        }
                    }).result.then(function(result) {
                        $state.go('end_state_designation', null, { reload: true });
                    }, function() {
                        $state.go('^');
                    })
                }]
            });
    }]);

'use strict';

angular.module('dgdtoolApp')
    .controller('End_state_designationController', ["$scope", "End_state_designation", "End_state_designationSearch", "ParseLinks", function ($scope, End_state_designation, End_state_designationSearch, ParseLinks) {
        $scope.end_state_designations = [];
        $scope.page = 0;
        $scope.loadAll = function() {
            End_state_designation.query({page: $scope.page, size: 20}, function(result, headers) {
                $scope.links = ParseLinks.parse(headers('link'));
                $scope.end_state_designations = result;
            });
        };
        $scope.loadPage = function(page) {
            $scope.page = page;
            $scope.loadAll();
        };
        $scope.loadAll();

        $scope['delete'] = function (id) {
            End_state_designation.get({id: id}, function(result) {
                $scope.end_state_designation = result;
                $('#deleteEnd_state_designationConfirmation').modal('show');
            });
        };

        $scope.confirmDelete = function (id) {
            End_state_designation['delete']({id: id},
                function () {
                    $scope.loadAll();
                    $('#deleteEnd_state_designationConfirmation').modal('hide');
                    $scope.clear();
                });
        };

        $scope.search = function () {
            End_state_designationSearch.query({query: $scope.searchQuery}, function(result) {
                $scope.end_state_designations = result;
            }, function(response) {
                if(response.status === 404) {
                    $scope.loadAll();
                }
            });
        };

        $scope.refresh = function () {
            $scope.loadAll();
            $scope.clear();
        };

        $scope.clear = function () {
            $scope.end_state_designation = {
                end_state_designation_name: null,
                description: null,
                status_id: null,
                created_by: null,
                created_date: null,
                modified_by: null,
                modified_date: null,
                id: null
            };
        };
    }]);

'use strict';

angular.module('dgdtoolApp').controller('End_state_designationDialogController',
    ['$scope', '$stateParams', '$modalInstance', 'entity', 'End_state_designation',
        function($scope, $stateParams, $modalInstance, entity, End_state_designation) {

        $scope.end_state_designation = entity;
        $scope.load = function(id) {
            End_state_designation.get({id : id}, function(result) {
                $scope.end_state_designation = result;
            });
        };

        var onSaveFinished = function (result) {
            $scope.$emit('dgdtoolApp:end_state_designationUpdate', result);
            $modalInstance.close(result);
        };

        $scope.save = function () {
            if ($scope.end_state_designation.id != null) {
                End_state_designation.update($scope.end_state_designation, onSaveFinished);
            } else {
                End_state_designation.save($scope.end_state_designation, onSaveFinished);
            }
        };

        $scope.clear = function() {
            $modalInstance.dismiss('cancel');
        };
}]);

'use strict';

angular.module('dgdtoolApp')
    .controller('End_state_designationDetailController', ["$scope", "$rootScope", "$stateParams", "entity", "End_state_designation", function ($scope, $rootScope, $stateParams, entity, End_state_designation) {
        $scope.end_state_designation = entity;
        $scope.load = function (id) {
            End_state_designation.get({id: id}, function(result) {
                $scope.end_state_designation = result;
            });
        };
        var unsubscribe = $rootScope.$on('dgdtoolApp:end_state_designationUpdate', function(event, result) {
            $scope.end_state_designation = result;
        });
        $scope.$on('$destroy', unsubscribe);

    }]);

'use strict';

angular.module('dgdtoolApp')
    .factory('End_state_designation', ["$resource", "DateUtils", function ($resource, DateUtils) {
        return $resource('api/end_state_designations/:id', {}, {
            'query': { method: 'GET', isArray: true},
            'get': {
                method: 'GET',
                transformResponse: function (data) {
                    data = angular.fromJson(data);
                    data.created_date = DateUtils.convertLocaleDateFromServer(data.created_date);
                    data.modified_date = DateUtils.convertLocaleDateFromServer(data.modified_date);
                    return data;
                }
            },
            'update': {
                method: 'PUT',
                transformRequest: function (data) {
                    data.created_date = DateUtils.convertLocaleDateToServer(data.created_date);
                    data.modified_date = DateUtils.convertLocaleDateToServer(data.modified_date);
                    return angular.toJson(data);
                }
            },
            'save': {
                method: 'POST',
                transformRequest: function (data) {
                    data.created_date = DateUtils.convertLocaleDateToServer(data.created_date);
                    data.modified_date = DateUtils.convertLocaleDateToServer(data.modified_date);
                    return angular.toJson(data);
                }
            }
        });
    }]);

'use strict';

angular.module('dgdtoolApp')
    .factory('End_state_designationSearch', ["$resource", function ($resource) {
        return $resource('api/_search/end_state_designations/:query', {}, {
            'query': { method: 'GET', isArray: true}
        });
    }]);

'use strict';

angular.module('dgdtoolApp')
    .config(["$stateProvider", function ($stateProvider) {
        $stateProvider
            .state('server_type', {
                parent: 'entity',
                url: '/server_types',
                data: {
                    authorities: ['ROLE_USER'],
                    pageTitle: 'dgdtoolApp.server_type.home.title'
                },
                views: {
                    'content@': {
                        templateUrl: 'scripts/app/entities/server_type/server_types.html',
                        controller: 'Server_typeController'
                    }
                },
                resolve: {
                    translatePartialLoader: ['$translate', '$translatePartialLoader', function ($translate, $translatePartialLoader) {
                        $translatePartialLoader.addPart('server_type');
                        $translatePartialLoader.addPart('global');
                        return $translate.refresh();
                    }]
                }
            })
            .state('server_type.detail', {
                parent: 'entity',
                url: '/server_type/{id}',
                data: {
                    authorities: ['ROLE_USER'],
                    pageTitle: 'dgdtoolApp.server_type.detail.title'
                },
                views: {
                    'content@': {
                        templateUrl: 'scripts/app/entities/server_type/server_type-detail.html',
                        controller: 'Server_typeDetailController'
                    }
                },
                resolve: {
                    translatePartialLoader: ['$translate', '$translatePartialLoader', function ($translate, $translatePartialLoader) {
                        $translatePartialLoader.addPart('server_type');
                        return $translate.refresh();
                    }],
                    entity: ['$stateParams', 'Server_type', function($stateParams, Server_type) {
                        return Server_type.get({id : $stateParams.id});
                    }]
                }
            })
            .state('server_type.new', {
                parent: 'server_type',
                url: '/new',
                data: {
                    authorities: ['ROLE_USER'],
                },
                onEnter: ['$stateParams', '$state', '$modal', function($stateParams, $state, $modal) {
                    $modal.open({
                        templateUrl: 'scripts/app/entities/server_type/server_type-dialog.html',
                        controller: 'Server_typeDialogController',
                        size: 'lg',
                        resolve: {
                            entity: function () {
                                return {
                                    server_type_name: null,
                                    description: null,
                                    status_id: null,
                                    created_by: null,
                                    created_date: null,
                                    modified_by: null,
                                    modified_date: null,
                                    id: null
                                };
                            }
                        }
                    }).result.then(function(result) {
                        $state.go('server_type', null, { reload: true });
                    }, function() {
                        $state.go('server_type');
                    })
                }]
            })
            .state('server_type.edit', {
                parent: 'server_type',
                url: '/{id}/edit',
                data: {
                    authorities: ['ROLE_USER'],
                },
                onEnter: ['$stateParams', '$state', '$modal', function($stateParams, $state, $modal) {
                    $modal.open({
                        templateUrl: 'scripts/app/entities/server_type/server_type-dialog.html',
                        controller: 'Server_typeDialogController',
                        size: 'lg',
                        resolve: {
                            entity: ['Server_type', function(Server_type) {
                                return Server_type.get({id : $stateParams.id});
                            }]
                        }
                    }).result.then(function(result) {
                        $state.go('server_type', null, { reload: true });
                    }, function() {
                        $state.go('^');
                    })
                }]
            });
    }]);

'use strict';

angular.module('dgdtoolApp')
    .controller('Server_typeController', ["$scope", "Server_type", "Server_typeSearch", "ParseLinks", function ($scope, Server_type, Server_typeSearch, ParseLinks) {
        $scope.server_types = [];
        $scope.page = 0;
        $scope.loadAll = function() {
            Server_type.query({page: $scope.page, size: 20}, function(result, headers) {
                $scope.links = ParseLinks.parse(headers('link'));
                $scope.server_types = result;
            });
        };
        $scope.loadPage = function(page) {
            $scope.page = page;
            $scope.loadAll();
        };
        $scope.loadAll();

        $scope['delete'] = function (id) {
            Server_type.get({id: id}, function(result) {
                $scope.server_type = result;
                $('#deleteServer_typeConfirmation').modal('show');
            });
        };

        $scope.confirmDelete = function (id) {
            Server_type['delete']({id: id},
                function () {
                    $scope.loadAll();
                    $('#deleteServer_typeConfirmation').modal('hide');
                    $scope.clear();
                });
        };

        $scope.search = function () {
            Server_typeSearch.query({query: $scope.searchQuery}, function(result) {
                $scope.server_types = result;
            }, function(response) {
                if(response.status === 404) {
                    $scope.loadAll();
                }
            });
        };

        $scope.refresh = function () {
            $scope.loadAll();
            $scope.clear();
        };

        $scope.clear = function () {
            $scope.server_type = {
                server_type_name: null,
                description: null,
                status_id: null,
                created_by: null,
                created_date: null,
                modified_by: null,
                modified_date: null,
                id: null
            };
        };
    }]);

'use strict';

angular.module('dgdtoolApp').controller('Server_typeDialogController',
    ['$scope', '$stateParams', '$modalInstance', 'entity', 'Server_type',
        function($scope, $stateParams, $modalInstance, entity, Server_type) {

        $scope.server_type = entity;
        $scope.load = function(id) {
            Server_type.get({id : id}, function(result) {
                $scope.server_type = result;
            });
        };

        var onSaveFinished = function (result) {
            $scope.$emit('dgdtoolApp:server_typeUpdate', result);
            $modalInstance.close(result);
        };

        $scope.save = function () {
            if ($scope.server_type.id != null) {
                Server_type.update($scope.server_type, onSaveFinished);
            } else {
                Server_type.save($scope.server_type, onSaveFinished);
            }
        };

        $scope.clear = function() {
            $modalInstance.dismiss('cancel');
        };
}]);

'use strict';

angular.module('dgdtoolApp')
    .controller('Server_typeDetailController', ["$scope", "$rootScope", "$stateParams", "entity", "Server_type", function ($scope, $rootScope, $stateParams, entity, Server_type) {
        $scope.server_type = entity;
        $scope.load = function (id) {
            Server_type.get({id: id}, function(result) {
                $scope.server_type = result;
            });
        };
        var unsubscribe = $rootScope.$on('dgdtoolApp:server_typeUpdate', function(event, result) {
            $scope.server_type = result;
        });
        $scope.$on('$destroy', unsubscribe);

    }]);

'use strict';

angular.module('dgdtoolApp')
    .factory('Server_type', ["$resource", "DateUtils", function ($resource, DateUtils) {
        return $resource('api/server_types/:id', {}, {
            'query': { method: 'GET', isArray: true},
            'get': {
                method: 'GET',
                transformResponse: function (data) {
                    data = angular.fromJson(data);
                    data.created_date = DateUtils.convertLocaleDateFromServer(data.created_date);
                    data.modified_date = DateUtils.convertLocaleDateFromServer(data.modified_date);
                    return data;
                }
            },
            'update': {
                method: 'PUT',
                transformRequest: function (data) {
                    data.created_date = DateUtils.convertLocaleDateToServer(data.created_date);
                    data.modified_date = DateUtils.convertLocaleDateToServer(data.modified_date);
                    return angular.toJson(data);
                }
            },
            'save': {
                method: 'POST',
                transformRequest: function (data) {
                    data.created_date = DateUtils.convertLocaleDateToServer(data.created_date);
                    data.modified_date = DateUtils.convertLocaleDateToServer(data.modified_date);
                    return angular.toJson(data);
                }
            }
        });
    }]);

'use strict';

angular.module('dgdtoolApp')
    .factory('Server_typeSearch', ["$resource", function ($resource) {
        return $resource('api/_search/server_types/:query', {}, {
            'query': { method: 'GET', isArray: true}
        });
    }]);

'use strict';

angular.module('dgdtoolApp')
    .config(["$stateProvider", function ($stateProvider) {
        $stateProvider
            .state('environment', {
                parent: 'entity',
                url: '/environments',
                data: {
                    authorities: ['ROLE_USER'],
                    pageTitle: 'dgdtoolApp.environment.home.title'
                },
                views: {
                    'content@': {
                        templateUrl: 'scripts/app/entities/environment/environments.html',
                        controller: 'EnvironmentController'
                    }
                },
                resolve: {
                    translatePartialLoader: ['$translate', '$translatePartialLoader', function ($translate, $translatePartialLoader) {
                        $translatePartialLoader.addPart('environment');
                        $translatePartialLoader.addPart('global');
                        return $translate.refresh();
                    }]
                }
            })
            .state('environment.detail', {
                parent: 'entity',
                url: '/environment/{id}',
                data: {
                    authorities: ['ROLE_USER'],
                    pageTitle: 'dgdtoolApp.environment.detail.title'
                },
                views: {
                    'content@': {
                        templateUrl: 'scripts/app/entities/environment/environment-detail.html',
                        controller: 'EnvironmentDetailController'
                    }
                },
                resolve: {
                    translatePartialLoader: ['$translate', '$translatePartialLoader', function ($translate, $translatePartialLoader) {
                        $translatePartialLoader.addPart('environment');
                        return $translate.refresh();
                    }],
                    entity: ['$stateParams', 'Environment', function($stateParams, Environment) {
                        return Environment.get({id : $stateParams.id});
                    }]
                }
            })
            .state('environment.new', {
                parent: 'environment',
                url: '/new',
                data: {
                    authorities: ['ROLE_USER'],
                },
                onEnter: ['$stateParams', '$state', '$modal', function($stateParams, $state, $modal) {
                    $modal.open({
                        templateUrl: 'scripts/app/entities/environment/environment-dialog.html',
                        controller: 'EnvironmentDialogController',
                        size: 'lg',
                        resolve: {
                            entity: function () {
                                return {
                                    environment_name: null,
                                    description: null,
                                    status_id: null,
                                    created_by: null,
                                    created_date: null,
                                    modified_by: null,
                                    modified_date: null,
                                    id: null
                                };
                            }
                        }
                    }).result.then(function(result) {
                        $state.go('environment', null, { reload: true });
                    }, function() {
                        $state.go('environment');
                    })
                }]
            })
            .state('environment.edit', {
                parent: 'environment',
                url: '/{id}/edit',
                data: {
                    authorities: ['ROLE_USER'],
                },
                onEnter: ['$stateParams', '$state', '$modal', function($stateParams, $state, $modal) {
                    $modal.open({
                        templateUrl: 'scripts/app/entities/environment/environment-dialog.html',
                        controller: 'EnvironmentDialogController',
                        size: 'lg',
                        resolve: {
                            entity: ['Environment', function(Environment) {
                                return Environment.get({id : $stateParams.id});
                            }]
                        }
                    }).result.then(function(result) {
                        $state.go('environment', null, { reload: true });
                    }, function() {
                        $state.go('^');
                    })
                }]
            });
    }]);

'use strict';

angular.module('dgdtoolApp')
    .controller('EnvironmentController', ["$scope", "Environment", "EnvironmentSearch", "ParseLinks", function ($scope, Environment, EnvironmentSearch, ParseLinks) {
        $scope.environments = [];
        $scope.page = 0;
        $scope.loadAll = function() {
            Environment.query({page: $scope.page, size: 20}, function(result, headers) {
                $scope.links = ParseLinks.parse(headers('link'));
                $scope.environments = result;
            });
        };
        $scope.loadPage = function(page) {
            $scope.page = page;
            $scope.loadAll();
        };
        $scope.loadAll();

        $scope['delete'] = function (id) {
            Environment.get({id: id}, function(result) {
                $scope.environment = result;
                $('#deleteEnvironmentConfirmation').modal('show');
            });
        };

        $scope.confirmDelete = function (id) {
            Environment['delete']({id: id},
                function () {
                    $scope.loadAll();
                    $('#deleteEnvironmentConfirmation').modal('hide');
                    $scope.clear();
                });
        };

        $scope.search = function () {
            EnvironmentSearch.query({query: $scope.searchQuery}, function(result) {
                $scope.environments = result;
            }, function(response) {
                if(response.status === 404) {
                    $scope.loadAll();
                }
            });
        };

        $scope.refresh = function () {
            $scope.loadAll();
            $scope.clear();
        };

        $scope.clear = function () {
            $scope.environment = {
                environment_name: null,
                description: null,
                status_id: null,
                created_by: null,
                created_date: null,
                modified_by: null,
                modified_date: null,
                id: null
            };
        };
    }]);

'use strict';

angular.module('dgdtoolApp').controller('EnvironmentDialogController',
    ['$scope', '$stateParams', '$modalInstance', 'entity', 'Environment',
        function($scope, $stateParams, $modalInstance, entity, Environment) {

        $scope.environment = entity;
        $scope.load = function(id) {
            Environment.get({id : id}, function(result) {
                $scope.environment = result;
            });
        };

        var onSaveFinished = function (result) {
            $scope.$emit('dgdtoolApp:environmentUpdate', result);
            $modalInstance.close(result);
        };

        $scope.save = function () {
            if ($scope.environment.id != null) {
                Environment.update($scope.environment, onSaveFinished);
            } else {
                Environment.save($scope.environment, onSaveFinished);
            }
        };

        $scope.clear = function() {
            $modalInstance.dismiss('cancel');
        };
}]);

'use strict';

angular.module('dgdtoolApp')
    .controller('EnvironmentDetailController', ["$scope", "$rootScope", "$stateParams", "entity", "Environment", function ($scope, $rootScope, $stateParams, entity, Environment) {
        $scope.environment = entity;
        $scope.load = function (id) {
            Environment.get({id: id}, function(result) {
                $scope.environment = result;
            });
        };
        var unsubscribe = $rootScope.$on('dgdtoolApp:environmentUpdate', function(event, result) {
            $scope.environment = result;
        });
        $scope.$on('$destroy', unsubscribe);

    }]);

'use strict';

angular.module('dgdtoolApp')
    .factory('Environment', ["$resource", "DateUtils", function ($resource, DateUtils) {
        return $resource('api/environments/:id', {}, {
            'query': { method: 'GET', isArray: true},
            'get': {
                method: 'GET',
                transformResponse: function (data) {
                    data = angular.fromJson(data);
                    data.created_date = DateUtils.convertLocaleDateFromServer(data.created_date);
                    data.modified_date = DateUtils.convertLocaleDateFromServer(data.modified_date);
                    return data;
                }
            },
            'update': {
                method: 'PUT',
                transformRequest: function (data) {
                    data.created_date = DateUtils.convertLocaleDateToServer(data.created_date);
                    data.modified_date = DateUtils.convertLocaleDateToServer(data.modified_date);
                    return angular.toJson(data);
                }
            },
            'save': {
                method: 'POST',
                transformRequest: function (data) {
                    data.created_date = DateUtils.convertLocaleDateToServer(data.created_date);
                    data.modified_date = DateUtils.convertLocaleDateToServer(data.modified_date);
                    return angular.toJson(data);
                }
            }
        });
    }]);

'use strict';

angular.module('dgdtoolApp')
    .factory('EnvironmentSearch', ["$resource", function ($resource) {
        return $resource('api/_search/environments/:query', {}, {
            'query': { method: 'GET', isArray: true}
        });
    }]);

'use strict';

angular.module('dgdtoolApp')
    .config(["$stateProvider", function ($stateProvider) {
        $stateProvider
            .state('platform', {
                parent: 'entity',
                url: '/platforms',
                data: {
                    authorities: ['ROLE_USER'],
                    pageTitle: 'dgdtoolApp.platform.home.title'
                },
                views: {
                    'content@': {
                        templateUrl: 'scripts/app/entities/platform/platforms.html',
                        controller: 'PlatformController'
                    }
                },
                resolve: {
                    translatePartialLoader: ['$translate', '$translatePartialLoader', function ($translate, $translatePartialLoader) {
                        $translatePartialLoader.addPart('platform');
                        $translatePartialLoader.addPart('global');
                        return $translate.refresh();
                    }]
                }
            })
            .state('platform.detail', {
                parent: 'entity',
                url: '/platform/{id}',
                data: {
                    authorities: ['ROLE_USER'],
                    pageTitle: 'dgdtoolApp.platform.detail.title'
                },
                views: {
                    'content@': {
                        templateUrl: 'scripts/app/entities/platform/platform-detail.html',
                        controller: 'PlatformDetailController'
                    }
                },
                resolve: {
                    translatePartialLoader: ['$translate', '$translatePartialLoader', function ($translate, $translatePartialLoader) {
                        $translatePartialLoader.addPart('platform');
                        return $translate.refresh();
                    }],
                    entity: ['$stateParams', 'Platform', function($stateParams, Platform) {
                        return Platform.get({id : $stateParams.id});
                    }]
                }
            })
            .state('platform.new', {
                parent: 'platform',
                url: '/new',
                data: {
                    authorities: ['ROLE_USER'],
                },
                onEnter: ['$stateParams', '$state', '$modal', function($stateParams, $state, $modal) {
                    $modal.open({
                        templateUrl: 'scripts/app/entities/platform/platform-dialog.html',
                        controller: 'PlatformDialogController',
                        size: 'lg',
                        resolve: {
                            entity: function () {
                                return {
                                    platform_name: null,
                                    description: null,
                                    status_id: null,
                                    created_by: null,
                                    created_date: null,
                                    modified_by: null,
                                    modified_date: null,
                                    id: null
                                };
                            }
                        }
                    }).result.then(function(result) {
                        $state.go('platform', null, { reload: true });
                    }, function() {
                        $state.go('platform');
                    })
                }]
            })
            .state('platform.edit', {
                parent: 'platform',
                url: '/{id}/edit',
                data: {
                    authorities: ['ROLE_USER'],
                },
                onEnter: ['$stateParams', '$state', '$modal', function($stateParams, $state, $modal) {
                    $modal.open({
                        templateUrl: 'scripts/app/entities/platform/platform-dialog.html',
                        controller: 'PlatformDialogController',
                        size: 'lg',
                        resolve: {
                            entity: ['Platform', function(Platform) {
                                return Platform.get({id : $stateParams.id});
                            }]
                        }
                    }).result.then(function(result) {
                        $state.go('platform', null, { reload: true });
                    }, function() {
                        $state.go('^');
                    })
                }]
            });
    }]);

'use strict';

angular.module('dgdtoolApp')
    .controller('PlatformController', ["$scope", "Platform", "PlatformSearch", "ParseLinks", function ($scope, Platform, PlatformSearch, ParseLinks) {
        $scope.platforms = [];
        $scope.page = 0;
        $scope.loadAll = function() {
            Platform.query({page: $scope.page, size: 20}, function(result, headers) {
                $scope.links = ParseLinks.parse(headers('link'));
                $scope.platforms = result;
            });
        };
        $scope.loadPage = function(page) {
            $scope.page = page;
            $scope.loadAll();
        };
        $scope.loadAll();

        $scope['delete'] = function (id) {
            Platform.get({id: id}, function(result) {
                $scope.platform = result;
                $('#deletePlatformConfirmation').modal('show');
            });
        };

        $scope.confirmDelete = function (id) {
            Platform['delete']({id: id},
                function () {
                    $scope.loadAll();
                    $('#deletePlatformConfirmation').modal('hide');
                    $scope.clear();
                });
        };

        $scope.search = function () {
            PlatformSearch.query({query: $scope.searchQuery}, function(result) {
                $scope.platforms = result;
            }, function(response) {
                if(response.status === 404) {
                    $scope.loadAll();
                }
            });
        };

        $scope.refresh = function () {
            $scope.loadAll();
            $scope.clear();
        };

        $scope.clear = function () {
            $scope.platform = {
                platform_name: null,
                description: null,
                status_id: null,
                created_by: null,
                created_date: null,
                modified_by: null,
                modified_date: null,
                id: null
            };
        };
    }]);

'use strict';

angular.module('dgdtoolApp').controller('PlatformDialogController',
    ['$scope', '$stateParams', '$modalInstance', 'entity', 'Platform',
        function($scope, $stateParams, $modalInstance, entity, Platform) {

        $scope.platform = entity;
        $scope.load = function(id) {
            Platform.get({id : id}, function(result) {
                $scope.platform = result;
            });
        };

        var onSaveFinished = function (result) {
            $scope.$emit('dgdtoolApp:platformUpdate', result);
            $modalInstance.close(result);
        };

        $scope.save = function () {
            if ($scope.platform.id != null) {
                Platform.update($scope.platform, onSaveFinished);
            } else {
                Platform.save($scope.platform, onSaveFinished);
            }
        };

        $scope.clear = function() {
            $modalInstance.dismiss('cancel');
        };
}]);

'use strict';

angular.module('dgdtoolApp')
    .controller('PlatformDetailController', ["$scope", "$rootScope", "$stateParams", "entity", "Platform", function ($scope, $rootScope, $stateParams, entity, Platform) {
        $scope.platform = entity;
        $scope.load = function (id) {
            Platform.get({id: id}, function(result) {
                $scope.platform = result;
            });
        };
        var unsubscribe = $rootScope.$on('dgdtoolApp:platformUpdate', function(event, result) {
            $scope.platform = result;
        });
        $scope.$on('$destroy', unsubscribe);

    }]);

'use strict';

angular.module('dgdtoolApp')
    .factory('Platform', ["$resource", "DateUtils", function ($resource, DateUtils) {
        return $resource('api/platforms/:id', {}, {
            'query': { method: 'GET', isArray: true},
            'get': {
                method: 'GET',
                transformResponse: function (data) {
                    data = angular.fromJson(data);
                    data.created_date = DateUtils.convertLocaleDateFromServer(data.created_date);
                    data.modified_date = DateUtils.convertLocaleDateFromServer(data.modified_date);
                    return data;
                }
            },
            'update': {
                method: 'PUT',
                transformRequest: function (data) {
                    data.created_date = DateUtils.convertLocaleDateToServer(data.created_date);
                    data.modified_date = DateUtils.convertLocaleDateToServer(data.modified_date);
                    return angular.toJson(data);
                }
            },
            'save': {
                method: 'POST',
                transformRequest: function (data) {
                    data.created_date = DateUtils.convertLocaleDateToServer(data.created_date);
                    data.modified_date = DateUtils.convertLocaleDateToServer(data.modified_date);
                    return angular.toJson(data);
                }
            }
        });
    }]);

'use strict';

angular.module('dgdtoolApp')
    .factory('PlatformSearch', ["$resource", function ($resource) {
        return $resource('api/_search/platforms/:query', {}, {
            'query': { method: 'GET', isArray: true}
        });
    }]);

'use strict';

angular.module('dgdtoolApp')
    .config(["$stateProvider", function ($stateProvider) {
        $stateProvider
            .state('os_type', {
                parent: 'entity',
                url: '/os_types',
                data: {
                    authorities: ['ROLE_USER'],
                    pageTitle: 'dgdtoolApp.os_type.home.title'
                },
                views: {
                    'content@': {
                        templateUrl: 'scripts/app/entities/os_type/os_types.html',
                        controller: 'Os_typeController'
                    }
                },
                resolve: {
                    translatePartialLoader: ['$translate', '$translatePartialLoader', function ($translate, $translatePartialLoader) {
                        $translatePartialLoader.addPart('os_type');
                        $translatePartialLoader.addPart('global');
                        return $translate.refresh();
                    }]
                }
            })
            .state('os_type.detail', {
                parent: 'entity',
                url: '/os_type/{id}',
                data: {
                    authorities: ['ROLE_USER'],
                    pageTitle: 'dgdtoolApp.os_type.detail.title'
                },
                views: {
                    'content@': {
                        templateUrl: 'scripts/app/entities/os_type/os_type-detail.html',
                        controller: 'Os_typeDetailController'
                    }
                },
                resolve: {
                    translatePartialLoader: ['$translate', '$translatePartialLoader', function ($translate, $translatePartialLoader) {
                        $translatePartialLoader.addPart('os_type');
                        return $translate.refresh();
                    }],
                    entity: ['$stateParams', 'Os_type', function($stateParams, Os_type) {
                        return Os_type.get({id : $stateParams.id});
                    }]
                }
            })
            .state('os_type.new', {
                parent: 'os_type',
                url: '/new',
                data: {
                    authorities: ['ROLE_USER'],
                },
                onEnter: ['$stateParams', '$state', '$modal', function($stateParams, $state, $modal) {
                    $modal.open({
                        templateUrl: 'scripts/app/entities/os_type/os_type-dialog.html',
                        controller: 'Os_typeDialogController',
                        size: 'lg',
                        resolve: {
                            entity: function () {
                                return {
                                    os_type_name: null,
                                    description: null,
                                    status_id: null,
                                    created_by: null,
                                    created_date: null,
                                    modified_by: null,
                                    modified_date: null,
                                    id: null
                                };
                            }
                        }
                    }).result.then(function(result) {
                        $state.go('os_type', null, { reload: true });
                    }, function() {
                        $state.go('os_type');
                    })
                }]
            })
            .state('os_type.edit', {
                parent: 'os_type',
                url: '/{id}/edit',
                data: {
                    authorities: ['ROLE_USER'],
                },
                onEnter: ['$stateParams', '$state', '$modal', function($stateParams, $state, $modal) {
                    $modal.open({
                        templateUrl: 'scripts/app/entities/os_type/os_type-dialog.html',
                        controller: 'Os_typeDialogController',
                        size: 'lg',
                        resolve: {
                            entity: ['Os_type', function(Os_type) {
                                return Os_type.get({id : $stateParams.id});
                            }]
                        }
                    }).result.then(function(result) {
                        $state.go('os_type', null, { reload: true });
                    }, function() {
                        $state.go('^');
                    })
                }]
            });
    }]);

'use strict';

angular.module('dgdtoolApp')
    .controller('Os_typeController', ["$scope", "Os_type", "Os_typeSearch", "ParseLinks", function ($scope, Os_type, Os_typeSearch, ParseLinks) {
        $scope.os_types = [];
        $scope.page = 0;
        $scope.loadAll = function() {
            Os_type.query({page: $scope.page, size: 20}, function(result, headers) {
                $scope.links = ParseLinks.parse(headers('link'));
                $scope.os_types = result;
            });
        };
        $scope.loadPage = function(page) {
            $scope.page = page;
            $scope.loadAll();
        };
        $scope.loadAll();

        $scope['delete'] = function (id) {
            Os_type.get({id: id}, function(result) {
                $scope.os_type = result;
                $('#deleteOs_typeConfirmation').modal('show');
            });
        };

        $scope.confirmDelete = function (id) {
            Os_type['delete']({id: id},
                function () {
                    $scope.loadAll();
                    $('#deleteOs_typeConfirmation').modal('hide');
                    $scope.clear();
                });
        };

        $scope.search = function () {
            Os_typeSearch.query({query: $scope.searchQuery}, function(result) {
                $scope.os_types = result;
            }, function(response) {
                if(response.status === 404) {
                    $scope.loadAll();
                }
            });
        };

        $scope.refresh = function () {
            $scope.loadAll();
            $scope.clear();
        };

        $scope.clear = function () {
            $scope.os_type = {
                os_type_name: null,
                description: null,
                status_id: null,
                created_by: null,
                created_date: null,
                modified_by: null,
                modified_date: null,
                id: null
            };
        };
    }]);

'use strict';

angular.module('dgdtoolApp').controller('Os_typeDialogController',
    ['$scope', '$stateParams', '$modalInstance', 'entity', 'Os_type',
        function($scope, $stateParams, $modalInstance, entity, Os_type) {

        $scope.os_type = entity;
        $scope.load = function(id) {
            Os_type.get({id : id}, function(result) {
                $scope.os_type = result;
            });
        };

        var onSaveFinished = function (result) {
            $scope.$emit('dgdtoolApp:os_typeUpdate', result);
            $modalInstance.close(result);
        };

        $scope.save = function () {
            if ($scope.os_type.id != null) {
                Os_type.update($scope.os_type, onSaveFinished);
            } else {
                Os_type.save($scope.os_type, onSaveFinished);
            }
        };

        $scope.clear = function() {
            $modalInstance.dismiss('cancel');
        };
}]);

'use strict';

angular.module('dgdtoolApp')
    .controller('Os_typeDetailController', ["$scope", "$rootScope", "$stateParams", "entity", "Os_type", function ($scope, $rootScope, $stateParams, entity, Os_type) {
        $scope.os_type = entity;
        $scope.load = function (id) {
            Os_type.get({id: id}, function(result) {
                $scope.os_type = result;
            });
        };
        var unsubscribe = $rootScope.$on('dgdtoolApp:os_typeUpdate', function(event, result) {
            $scope.os_type = result;
        });
        $scope.$on('$destroy', unsubscribe);

    }]);

'use strict';

angular.module('dgdtoolApp')
    .factory('Os_type', ["$resource", "DateUtils", function ($resource, DateUtils) {
        return $resource('api/os_types/:id', {}, {
            'query': { method: 'GET', isArray: true},
            'get': {
                method: 'GET',
                transformResponse: function (data) {
                    data = angular.fromJson(data);
                    data.created_date = DateUtils.convertLocaleDateFromServer(data.created_date);
                    data.modified_date = DateUtils.convertLocaleDateFromServer(data.modified_date);
                    return data;
                }
            },
            'update': {
                method: 'PUT',
                transformRequest: function (data) {
                    data.created_date = DateUtils.convertLocaleDateToServer(data.created_date);
                    data.modified_date = DateUtils.convertLocaleDateToServer(data.modified_date);
                    return angular.toJson(data);
                }
            },
            'save': {
                method: 'POST',
                transformRequest: function (data) {
                    data.created_date = DateUtils.convertLocaleDateToServer(data.created_date);
                    data.modified_date = DateUtils.convertLocaleDateToServer(data.modified_date);
                    return angular.toJson(data);
                }
            }
        });
    }]);

'use strict';

angular.module('dgdtoolApp')
    .factory('Os_typeSearch', ["$resource", function ($resource) {
        return $resource('api/_search/os_types/:query', {}, {
            'query': { method: 'GET', isArray: true}
        });
    }]);

'use strict';

angular.module('dgdtoolApp')
    .config(["$stateProvider", function ($stateProvider) {
        $stateProvider
            .state('os_version', {
                parent: 'entity',
                url: '/os_versions',
                data: {
                    authorities: ['ROLE_USER'],
                    pageTitle: 'dgdtoolApp.os_version.home.title'
                },
                views: {
                    'content@': {
                        templateUrl: 'scripts/app/entities/os_version/os_versions.html',
                        controller: 'Os_versionController'
                    }
                },
                resolve: {
                    translatePartialLoader: ['$translate', '$translatePartialLoader', function ($translate, $translatePartialLoader) {
                        $translatePartialLoader.addPart('os_version');
                        $translatePartialLoader.addPart('global');
                        return $translate.refresh();
                    }]
                }
            })
            .state('os_version.detail', {
                parent: 'entity',
                url: '/os_version/{id}',
                data: {
                    authorities: ['ROLE_USER'],
                    pageTitle: 'dgdtoolApp.os_version.detail.title'
                },
                views: {
                    'content@': {
                        templateUrl: 'scripts/app/entities/os_version/os_version-detail.html',
                        controller: 'Os_versionDetailController'
                    }
                },
                resolve: {
                    translatePartialLoader: ['$translate', '$translatePartialLoader', function ($translate, $translatePartialLoader) {
                        $translatePartialLoader.addPart('os_version');
                        return $translate.refresh();
                    }],
                    entity: ['$stateParams', 'Os_version', function($stateParams, Os_version) {
                        return Os_version.get({id : $stateParams.id});
                    }]
                }
            })
            .state('os_version.new', {
                parent: 'os_version',
                url: '/new',
                data: {
                    authorities: ['ROLE_USER'],
                },
                onEnter: ['$stateParams', '$state', '$modal', function($stateParams, $state, $modal) {
                    $modal.open({
                        templateUrl: 'scripts/app/entities/os_version/os_version-dialog.html',
                        controller: 'Os_versionDialogController',
                        size: 'lg',
                        resolve: {
                            entity: function () {
                                return {
                                    os_version_name: null,
                                    description: null,
                                    status_id: null,
                                    created_by: null,
                                    created_date: null,
                                    modified_by: null,
                                    modified_date: null,
                                    id: null
                                };
                            }
                        }
                    }).result.then(function(result) {
                        $state.go('os_version', null, { reload: true });
                    }, function() {
                        $state.go('os_version');
                    })
                }]
            })
            .state('os_version.edit', {
                parent: 'os_version',
                url: '/{id}/edit',
                data: {
                    authorities: ['ROLE_USER'],
                },
                onEnter: ['$stateParams', '$state', '$modal', function($stateParams, $state, $modal) {
                    $modal.open({
                        templateUrl: 'scripts/app/entities/os_version/os_version-dialog.html',
                        controller: 'Os_versionDialogController',
                        size: 'lg',
                        resolve: {
                            entity: ['Os_version', function(Os_version) {
                                return Os_version.get({id : $stateParams.id});
                            }]
                        }
                    }).result.then(function(result) {
                        $state.go('os_version', null, { reload: true });
                    }, function() {
                        $state.go('^');
                    })
                }]
            });
    }]);

'use strict';

angular.module('dgdtoolApp')
    .controller('Os_versionController', ["$scope", "Os_version", "Os_versionSearch", "ParseLinks", function ($scope, Os_version, Os_versionSearch, ParseLinks) {
        $scope.os_versions = [];
        $scope.page = 0;
        $scope.loadAll = function() {
            Os_version.query({page: $scope.page, size: 20}, function(result, headers) {
                $scope.links = ParseLinks.parse(headers('link'));
                $scope.os_versions = result;
            });
        };
        $scope.loadPage = function(page) {
            $scope.page = page;
            $scope.loadAll();
        };
        $scope.loadAll();

        $scope['delete'] = function (id) {
            Os_version.get({id: id}, function(result) {
                $scope.os_version = result;
                $('#deleteOs_versionConfirmation').modal('show');
            });
        };

        $scope.confirmDelete = function (id) {
            Os_version['delete']({id: id},
                function () {
                    $scope.loadAll();
                    $('#deleteOs_versionConfirmation').modal('hide');
                    $scope.clear();
                });
        };

        $scope.search = function () {
            Os_versionSearch.query({query: $scope.searchQuery}, function(result) {
                $scope.os_versions = result;
            }, function(response) {
                if(response.status === 404) {
                    $scope.loadAll();
                }
            });
        };

        $scope.refresh = function () {
            $scope.loadAll();
            $scope.clear();
        };

        $scope.clear = function () {
            $scope.os_version = {
                os_version_name: null,
                description: null,
                status_id: null,
                created_by: null,
                created_date: null,
                modified_by: null,
                modified_date: null,
                id: null
            };
        };
    }]);

'use strict';

angular.module('dgdtoolApp').controller('Os_versionDialogController',
    ['$scope', '$stateParams', '$modalInstance', 'entity', 'Os_version',
        function($scope, $stateParams, $modalInstance, entity, Os_version) {

        $scope.os_version = entity;
        $scope.load = function(id) {
            Os_version.get({id : id}, function(result) {
                $scope.os_version = result;
            });
        };

        var onSaveFinished = function (result) {
            $scope.$emit('dgdtoolApp:os_versionUpdate', result);
            $modalInstance.close(result);
        };

        $scope.save = function () {
            if ($scope.os_version.id != null) {
                Os_version.update($scope.os_version, onSaveFinished);
            } else {
                Os_version.save($scope.os_version, onSaveFinished);
            }
        };

        $scope.clear = function() {
            $modalInstance.dismiss('cancel');
        };
}]);

'use strict';

angular.module('dgdtoolApp')
    .controller('Os_versionDetailController', ["$scope", "$rootScope", "$stateParams", "entity", "Os_version", function ($scope, $rootScope, $stateParams, entity, Os_version) {
        $scope.os_version = entity;
        $scope.load = function (id) {
            Os_version.get({id: id}, function(result) {
                $scope.os_version = result;
            });
        };
        var unsubscribe = $rootScope.$on('dgdtoolApp:os_versionUpdate', function(event, result) {
            $scope.os_version = result;
        });
        $scope.$on('$destroy', unsubscribe);

    }]);

'use strict';

angular.module('dgdtoolApp')
    .factory('Os_version', ["$resource", "DateUtils", function ($resource, DateUtils) {
        return $resource('api/os_versions/:id', {}, {
            'query': { method: 'GET', isArray: true},
            'get': {
                method: 'GET',
                transformResponse: function (data) {
                    data = angular.fromJson(data);
                    data.created_date = DateUtils.convertLocaleDateFromServer(data.created_date);
                    data.modified_date = DateUtils.convertLocaleDateFromServer(data.modified_date);
                    return data;
                }
            },
            'update': {
                method: 'PUT',
                transformRequest: function (data) {
                    data.created_date = DateUtils.convertLocaleDateToServer(data.created_date);
                    data.modified_date = DateUtils.convertLocaleDateToServer(data.modified_date);
                    return angular.toJson(data);
                }
            },
            'save': {
                method: 'POST',
                transformRequest: function (data) {
                    data.created_date = DateUtils.convertLocaleDateToServer(data.created_date);
                    data.modified_date = DateUtils.convertLocaleDateToServer(data.modified_date);
                    return angular.toJson(data);
                }
            }
        });
    }]);

'use strict';

angular.module('dgdtoolApp')
    .factory('Os_versionSearch', ["$resource", function ($resource) {
        return $resource('api/_search/os_versions/:query', {}, {
            'query': { method: 'GET', isArray: true}
        });
    }]);

'use strict';

angular.module('dgdtoolApp')
    .config(["$stateProvider", function ($stateProvider) {
        $stateProvider
            .state('server_role', {
                parent: 'entity',
                url: '/server_roles',
                data: {
                    authorities: ['ROLE_USER'],
                    pageTitle: 'dgdtoolApp.server_role.home.title'
                },
                views: {
                    'content@': {
                        templateUrl: 'scripts/app/entities/server_role/server_roles.html',
                        controller: 'Server_roleController'
                    }
                },
                resolve: {
                    translatePartialLoader: ['$translate', '$translatePartialLoader', function ($translate, $translatePartialLoader) {
                        $translatePartialLoader.addPart('server_role');
                        $translatePartialLoader.addPart('global');
                        return $translate.refresh();
                    }]
                }
            })
            .state('server_role.detail', {
                parent: 'entity',
                url: '/server_role/{id}',
                data: {
                    authorities: ['ROLE_USER'],
                    pageTitle: 'dgdtoolApp.server_role.detail.title'
                },
                views: {
                    'content@': {
                        templateUrl: 'scripts/app/entities/server_role/server_role-detail.html',
                        controller: 'Server_roleDetailController'
                    }
                },
                resolve: {
                    translatePartialLoader: ['$translate', '$translatePartialLoader', function ($translate, $translatePartialLoader) {
                        $translatePartialLoader.addPart('server_role');
                        return $translate.refresh();
                    }],
                    entity: ['$stateParams', 'Server_role', function($stateParams, Server_role) {
                        return Server_role.get({id : $stateParams.id});
                    }]
                }
            })
            .state('server_role.new', {
                parent: 'server_role',
                url: '/new',
                data: {
                    authorities: ['ROLE_USER'],
                },
                onEnter: ['$stateParams', '$state', '$modal', function($stateParams, $state, $modal) {
                    $modal.open({
                        templateUrl: 'scripts/app/entities/server_role/server_role-dialog.html',
                        controller: 'Server_roleDialogController',
                        size: 'lg',
                        resolve: {
                            entity: function () {
                                return {
                                    server_role_name: null,
                                    description: null,
                                    status_id: null,
                                    created_by: null,
                                    created_date: null,
                                    modified_by: null,
                                    modified_date: null,
                                    id: null
                                };
                            }
                        }
                    }).result.then(function(result) {
                        $state.go('server_role', null, { reload: true });
                    }, function() {
                        $state.go('server_role');
                    })
                }]
            })
            .state('server_role.edit', {
                parent: 'server_role',
                url: '/{id}/edit',
                data: {
                    authorities: ['ROLE_USER'],
                },
                onEnter: ['$stateParams', '$state', '$modal', function($stateParams, $state, $modal) {
                    $modal.open({
                        templateUrl: 'scripts/app/entities/server_role/server_role-dialog.html',
                        controller: 'Server_roleDialogController',
                        size: 'lg',
                        resolve: {
                            entity: ['Server_role', function(Server_role) {
                                return Server_role.get({id : $stateParams.id});
                            }]
                        }
                    }).result.then(function(result) {
                        $state.go('server_role', null, { reload: true });
                    }, function() {
                        $state.go('^');
                    })
                }]
            });
    }]);

'use strict';

angular.module('dgdtoolApp')
    .controller('Server_roleController', ["$scope", "Server_role", "Server_roleSearch", "ParseLinks", function ($scope, Server_role, Server_roleSearch, ParseLinks) {
        $scope.server_roles = [];
        $scope.page = 0;
        $scope.loadAll = function() {
            Server_role.query({page: $scope.page, size: 20}, function(result, headers) {
                $scope.links = ParseLinks.parse(headers('link'));
                $scope.server_roles = result;
            });
        };
        $scope.loadPage = function(page) {
            $scope.page = page;
            $scope.loadAll();
        };
        $scope.loadAll();

        $scope['delete'] = function (id) {
            Server_role.get({id: id}, function(result) {
                $scope.server_role = result;
                $('#deleteServer_roleConfirmation').modal('show');
            });
        };

        $scope.confirmDelete = function (id) {
            Server_role['delete']({id: id},
                function () {
                    $scope.loadAll();
                    $('#deleteServer_roleConfirmation').modal('hide');
                    $scope.clear();
                });
        };

        $scope.search = function () {
            Server_roleSearch.query({query: $scope.searchQuery}, function(result) {
                $scope.server_roles = result;
            }, function(response) {
                if(response.status === 404) {
                    $scope.loadAll();
                }
            });
        };

        $scope.refresh = function () {
            $scope.loadAll();
            $scope.clear();
        };

        $scope.clear = function () {
            $scope.server_role = {
                server_role_name: null,
                description: null,
                status_id: null,
                created_by: null,
                created_date: null,
                modified_by: null,
                modified_date: null,
                id: null
            };
        };
    }]);

'use strict';

angular.module('dgdtoolApp').controller('Server_roleDialogController',
    ['$scope', '$stateParams', '$modalInstance', 'entity', 'Server_role',
        function($scope, $stateParams, $modalInstance, entity, Server_role) {

        $scope.server_role = entity;
        $scope.load = function(id) {
            Server_role.get({id : id}, function(result) {
                $scope.server_role = result;
            });
        };

        var onSaveFinished = function (result) {
            $scope.$emit('dgdtoolApp:server_roleUpdate', result);
            $modalInstance.close(result);
        };

        $scope.save = function () {
            if ($scope.server_role.id != null) {
                Server_role.update($scope.server_role, onSaveFinished);
            } else {
                Server_role.save($scope.server_role, onSaveFinished);
            }
        };

        $scope.clear = function() {
            $modalInstance.dismiss('cancel');
        };
}]);

'use strict';

angular.module('dgdtoolApp')
    .controller('Server_roleDetailController', ["$scope", "$rootScope", "$stateParams", "entity", "Server_role", function ($scope, $rootScope, $stateParams, entity, Server_role) {
        $scope.server_role = entity;
        $scope.load = function (id) {
            Server_role.get({id: id}, function(result) {
                $scope.server_role = result;
            });
        };
        var unsubscribe = $rootScope.$on('dgdtoolApp:server_roleUpdate', function(event, result) {
            $scope.server_role = result;
        });
        $scope.$on('$destroy', unsubscribe);

    }]);

'use strict';

angular.module('dgdtoolApp')
    .factory('Server_role', ["$resource", "DateUtils", function ($resource, DateUtils) {
        return $resource('api/server_roles/:id', {}, {
            'query': { method: 'GET', isArray: true},
            'get': {
                method: 'GET',
                transformResponse: function (data) {
                    data = angular.fromJson(data);
                    data.created_date = DateUtils.convertLocaleDateFromServer(data.created_date);
                    data.modified_date = DateUtils.convertLocaleDateFromServer(data.modified_date);
                    return data;
                }
            },
            'update': {
                method: 'PUT',
                transformRequest: function (data) {
                    data.created_date = DateUtils.convertLocaleDateToServer(data.created_date);
                    data.modified_date = DateUtils.convertLocaleDateToServer(data.modified_date);
                    return angular.toJson(data);
                }
            },
            'save': {
                method: 'POST',
                transformRequest: function (data) {
                    data.created_date = DateUtils.convertLocaleDateToServer(data.created_date);
                    data.modified_date = DateUtils.convertLocaleDateToServer(data.modified_date);
                    return angular.toJson(data);
                }
            }
        });
    }]);

'use strict';

angular.module('dgdtoolApp')
    .factory('Server_roleSearch', ["$resource", function ($resource) {
        return $resource('api/_search/server_roles/:query', {}, {
            'query': { method: 'GET', isArray: true}
        });
    }]);

'use strict';

angular.module('dgdtoolApp')
    .config(["$stateProvider", function ($stateProvider) {
        $stateProvider
            .state('license_type', {
                parent: 'entity',
                url: '/license_types',
                data: {
                    authorities: ['ROLE_USER'],
                    pageTitle: 'dgdtoolApp.license_type.home.title'
                },
                views: {
                    'content@': {
                        templateUrl: 'scripts/app/entities/license_type/license_types.html',
                        controller: 'License_typeController'
                    }
                },
                resolve: {
                    translatePartialLoader: ['$translate', '$translatePartialLoader', function ($translate, $translatePartialLoader) {
                        $translatePartialLoader.addPart('license_type');
                        $translatePartialLoader.addPart('global');
                        return $translate.refresh();
                    }]
                }
            })
            .state('license_type.detail', {
                parent: 'entity',
                url: '/license_type/{id}',
                data: {
                    authorities: ['ROLE_USER'],
                    pageTitle: 'dgdtoolApp.license_type.detail.title'
                },
                views: {
                    'content@': {
                        templateUrl: 'scripts/app/entities/license_type/license_type-detail.html',
                        controller: 'License_typeDetailController'
                    }
                },
                resolve: {
                    translatePartialLoader: ['$translate', '$translatePartialLoader', function ($translate, $translatePartialLoader) {
                        $translatePartialLoader.addPart('license_type');
                        return $translate.refresh();
                    }],
                    entity: ['$stateParams', 'License_type', function($stateParams, License_type) {
                        return License_type.get({id : $stateParams.id});
                    }]
                }
            })
            .state('license_type.new', {
                parent: 'license_type',
                url: '/new',
                data: {
                    authorities: ['ROLE_USER'],
                },
                onEnter: ['$stateParams', '$state', '$modal', function($stateParams, $state, $modal) {
                    $modal.open({
                        templateUrl: 'scripts/app/entities/license_type/license_type-dialog.html',
                        controller: 'License_typeDialogController',
                        size: 'lg',
                        resolve: {
                            entity: function () {
                                return {
                                    license_type_name: null,
                                    description: null,
                                    status_id: null,
                                    created_by: null,
                                    created_date: null,
                                    modified_by: null,
                                    modified_date: null,
                                    id: null
                                };
                            }
                        }
                    }).result.then(function(result) {
                        $state.go('license_type', null, { reload: true });
                    }, function() {
                        $state.go('license_type');
                    })
                }]
            })
            .state('license_type.edit', {
                parent: 'license_type',
                url: '/{id}/edit',
                data: {
                    authorities: ['ROLE_USER'],
                },
                onEnter: ['$stateParams', '$state', '$modal', function($stateParams, $state, $modal) {
                    $modal.open({
                        templateUrl: 'scripts/app/entities/license_type/license_type-dialog.html',
                        controller: 'License_typeDialogController',
                        size: 'lg',
                        resolve: {
                            entity: ['License_type', function(License_type) {
                                return License_type.get({id : $stateParams.id});
                            }]
                        }
                    }).result.then(function(result) {
                        $state.go('license_type', null, { reload: true });
                    }, function() {
                        $state.go('^');
                    })
                }]
            });
    }]);

'use strict';

angular.module('dgdtoolApp')
    .controller('License_typeController', ["$scope", "License_type", "License_typeSearch", "ParseLinks", function ($scope, License_type, License_typeSearch, ParseLinks) {
        $scope.license_types = [];
        $scope.page = 0;
        $scope.loadAll = function() {
            License_type.query({page: $scope.page, size: 20}, function(result, headers) {
                $scope.links = ParseLinks.parse(headers('link'));
                $scope.license_types = result;
            });
        };
        $scope.loadPage = function(page) {
            $scope.page = page;
            $scope.loadAll();
        };
        $scope.loadAll();

        $scope['delete'] = function (id) {
            License_type.get({id: id}, function(result) {
                $scope.license_type = result;
                $('#deleteLicense_typeConfirmation').modal('show');
            });
        };

        $scope.confirmDelete = function (id) {
            License_type['delete']({id: id},
                function () {
                    $scope.loadAll();
                    $('#deleteLicense_typeConfirmation').modal('hide');
                    $scope.clear();
                });
        };

        $scope.search = function () {
            License_typeSearch.query({query: $scope.searchQuery}, function(result) {
                $scope.license_types = result;
            }, function(response) {
                if(response.status === 404) {
                    $scope.loadAll();
                }
            });
        };

        $scope.refresh = function () {
            $scope.loadAll();
            $scope.clear();
        };

        $scope.clear = function () {
            $scope.license_type = {
                license_type_name: null,
                description: null,
                status_id: null,
                created_by: null,
                created_date: null,
                modified_by: null,
                modified_date: null,
                id: null
            };
        };
    }]);

'use strict';

angular.module('dgdtoolApp').controller('License_typeDialogController',
    ['$scope', '$stateParams', '$modalInstance', 'entity', 'License_type',
        function($scope, $stateParams, $modalInstance, entity, License_type) {

        $scope.license_type = entity;
        $scope.load = function(id) {
            License_type.get({id : id}, function(result) {
                $scope.license_type = result;
            });
        };

        var onSaveFinished = function (result) {
            $scope.$emit('dgdtoolApp:license_typeUpdate', result);
            $modalInstance.close(result);
        };

        $scope.save = function () {
            if ($scope.license_type.id != null) {
                License_type.update($scope.license_type, onSaveFinished);
            } else {
                License_type.save($scope.license_type, onSaveFinished);
            }
        };

        $scope.clear = function() {
            $modalInstance.dismiss('cancel');
        };
}]);

'use strict';

angular.module('dgdtoolApp')
    .controller('License_typeDetailController', ["$scope", "$rootScope", "$stateParams", "entity", "License_type", function ($scope, $rootScope, $stateParams, entity, License_type) {
        $scope.license_type = entity;
        $scope.load = function (id) {
            License_type.get({id: id}, function(result) {
                $scope.license_type = result;
            });
        };
        var unsubscribe = $rootScope.$on('dgdtoolApp:license_typeUpdate', function(event, result) {
            $scope.license_type = result;
        });
        $scope.$on('$destroy', unsubscribe);

    }]);

'use strict';

angular.module('dgdtoolApp')
    .factory('License_type', ["$resource", "DateUtils", function ($resource, DateUtils) {
        return $resource('api/license_types/:id', {}, {
            'query': { method: 'GET', isArray: true},
            'get': {
                method: 'GET',
                transformResponse: function (data) {
                    data = angular.fromJson(data);
                    data.created_date = DateUtils.convertLocaleDateFromServer(data.created_date);
                    data.modified_date = DateUtils.convertLocaleDateFromServer(data.modified_date);
                    return data;
                }
            },
            'update': {
                method: 'PUT',
                transformRequest: function (data) {
                    data.created_date = DateUtils.convertLocaleDateToServer(data.created_date);
                    data.modified_date = DateUtils.convertLocaleDateToServer(data.modified_date);
                    return angular.toJson(data);
                }
            },
            'save': {
                method: 'POST',
                transformRequest: function (data) {
                    data.created_date = DateUtils.convertLocaleDateToServer(data.created_date);
                    data.modified_date = DateUtils.convertLocaleDateToServer(data.modified_date);
                    return angular.toJson(data);
                }
            }
        });
    }]);

'use strict';

angular.module('dgdtoolApp')
    .factory('License_typeSearch', ["$resource", function ($resource) {
        return $resource('api/_search/license_types/:query', {}, {
            'query': { method: 'GET', isArray: true}
        });
    }]);

'use strict';

angular.module('dgdtoolApp')
    .config(["$stateProvider", function ($stateProvider) {
        $stateProvider
            .state('stage', {
                parent: 'entity',
                url: '/stages',
                data: {
                    authorities: ['ROLE_USER'],
                    pageTitle: 'dgdtoolApp.stage.home.title'
                },
                views: {
                    'content@': {
                        templateUrl: 'scripts/app/entities/stage/stages.html',
                        controller: 'StageController'
                    }
                },
                resolve: {
                    translatePartialLoader: ['$translate', '$translatePartialLoader', function ($translate, $translatePartialLoader) {
                        $translatePartialLoader.addPart('stage');
                        $translatePartialLoader.addPart('global');
                        return $translate.refresh();
                    }]
                }
            })
            .state('stage.detail', {
                parent: 'entity',
                url: '/stage/{id}',
                data: {
                    authorities: ['ROLE_USER'],
                    pageTitle: 'dgdtoolApp.stage.detail.title'
                },
                views: {
                    'content@': {
                        templateUrl: 'scripts/app/entities/stage/stage-detail.html',
                        controller: 'StageDetailController'
                    }
                },
                resolve: {
                    translatePartialLoader: ['$translate', '$translatePartialLoader', function ($translate, $translatePartialLoader) {
                        $translatePartialLoader.addPart('stage');
                        return $translate.refresh();
                    }],
                    entity: ['$stateParams', 'Stage', function($stateParams, Stage) {
                        return Stage.get({id : $stateParams.id});
                    }]
                }
            })
            .state('stage.new', {
                parent: 'stage',
                url: '/new',
                data: {
                    authorities: ['ROLE_USER'],
                },
                onEnter: ['$stateParams', '$state', '$modal', function($stateParams, $state, $modal) {
                    $modal.open({
                        templateUrl: 'scripts/app/entities/stage/stage-dialog.html',
                        controller: 'StageDialogController',
                        size: 'lg',
                        resolve: {
                            entity: function () {
                                return {
                                    stage_name: null,
                                    description: null,
                                    status_id: null,
                                    created_by: null,
                                    created_date: null,
                                    modified_by: null,
                                    modified_date: null,
                                    id: null
                                };
                            }
                        }
                    }).result.then(function(result) {
                        $state.go('stage', null, { reload: true });
                    }, function() {
                        $state.go('stage');
                    })
                }]
            })
            .state('stage.edit', {
                parent: 'stage',
                url: '/{id}/edit',
                data: {
                    authorities: ['ROLE_USER'],
                },
                onEnter: ['$stateParams', '$state', '$modal', function($stateParams, $state, $modal) {
                    $modal.open({
                        templateUrl: 'scripts/app/entities/stage/stage-dialog.html',
                        controller: 'StageDialogController',
                        size: 'lg',
                        resolve: {
                            entity: ['Stage', function(Stage) {
                                return Stage.get({id : $stateParams.id});
                            }]
                        }
                    }).result.then(function(result) {
                        $state.go('stage', null, { reload: true });
                    }, function() {
                        $state.go('^');
                    })
                }]
            });
    }]);

'use strict';

angular.module('dgdtoolApp')
    .controller('StageController', ["$scope", "Stage", "StageSearch", "ParseLinks", function ($scope, Stage, StageSearch, ParseLinks) {
        $scope.stages = [];
        $scope.page = 0;
        $scope.loadAll = function() {
            Stage.query({page: $scope.page, size: 20}, function(result, headers) {
                $scope.links = ParseLinks.parse(headers('link'));
                $scope.stages = result;
            });
        };
        $scope.loadPage = function(page) {
            $scope.page = page;
            $scope.loadAll();
        };
        $scope.loadAll();

        $scope['delete'] = function (id) {
            Stage.get({id: id}, function(result) {
                $scope.stage = result;
                $('#deleteStageConfirmation').modal('show');
            });
        };

        $scope.confirmDelete = function (id) {
            Stage['delete']({id: id},
                function () {
                    $scope.loadAll();
                    $('#deleteStageConfirmation').modal('hide');
                    $scope.clear();
                });
        };

        $scope.search = function () {
            StageSearch.query({query: $scope.searchQuery}, function(result) {
                $scope.stages = result;
            }, function(response) {
                if(response.status === 404) {
                    $scope.loadAll();
                }
            });
        };

        $scope.refresh = function () {
            $scope.loadAll();
            $scope.clear();
        };

        $scope.clear = function () {
            $scope.stage = {
                stage_name: null,
                description: null,
                status_id: null,
                created_by: null,
                created_date: null,
                modified_by: null,
                modified_date: null,
                id: null
            };
        };
    }]);

'use strict';

angular.module('dgdtoolApp').controller('StageDialogController',
    ['$scope', '$stateParams', '$modalInstance', 'entity', 'Stage',
        function($scope, $stateParams, $modalInstance, entity, Stage) {

        $scope.stage = entity;
        $scope.load = function(id) {
            Stage.get({id : id}, function(result) {
                $scope.stage = result;
            });
        };

        var onSaveFinished = function (result) {
            $scope.$emit('dgdtoolApp:stageUpdate', result);
            $modalInstance.close(result);
        };

        $scope.save = function () {
            if ($scope.stage.id != null) {
                Stage.update($scope.stage, onSaveFinished);
            } else {
                Stage.save($scope.stage, onSaveFinished);
            }
        };

        $scope.clear = function() {
            $modalInstance.dismiss('cancel');
        };
}]);

'use strict';

angular.module('dgdtoolApp')
    .controller('StageDetailController', ["$scope", "$rootScope", "$stateParams", "entity", "Stage", function ($scope, $rootScope, $stateParams, entity, Stage) {
        $scope.stage = entity;
        $scope.load = function (id) {
            Stage.get({id: id}, function(result) {
                $scope.stage = result;
            });
        };
        var unsubscribe = $rootScope.$on('dgdtoolApp:stageUpdate', function(event, result) {
            $scope.stage = result;
        });
        $scope.$on('$destroy', unsubscribe);

    }]);

'use strict';

angular.module('dgdtoolApp')
    .factory('Stage', ["$resource", "DateUtils", function ($resource, DateUtils) {
        return $resource('api/stages/:id', {}, {
            'query': { method: 'GET', isArray: true},
            'get': {
                method: 'GET',
                transformResponse: function (data) {
                    data = angular.fromJson(data);
                    data.created_date = DateUtils.convertLocaleDateFromServer(data.created_date);
                    data.modified_date = DateUtils.convertLocaleDateFromServer(data.modified_date);
                    return data;
                }
            },
            'update': {
                method: 'PUT',
                transformRequest: function (data) {
                    data.created_date = DateUtils.convertLocaleDateToServer(data.created_date);
                    data.modified_date = DateUtils.convertLocaleDateToServer(data.modified_date);
                    return angular.toJson(data);
                }
            },
            'save': {
                method: 'POST',
                transformRequest: function (data) {
                    data.created_date = DateUtils.convertLocaleDateToServer(data.created_date);
                    data.modified_date = DateUtils.convertLocaleDateToServer(data.modified_date);
                    return angular.toJson(data);
                }
            }
        });
    }]);

'use strict';

angular.module('dgdtoolApp')
    .factory('StageSearch', ["$resource", function ($resource) {
        return $resource('api/_search/stages/:query', {}, {
            'query': { method: 'GET', isArray: true}
        });
    }]);

'use strict';

angular.module('dgdtoolApp')
    .config(["$stateProvider", function ($stateProvider) {
        $stateProvider
            .state('path', {
                parent: 'entity',
                url: '/paths',
                data: {
                    authorities: ['ROLE_USER'],
                    pageTitle: 'dgdtoolApp.path.home.title'
                },
                views: {
                    'content@': {
                        templateUrl: 'scripts/app/entities/path/paths.html',
                        controller: 'PathController'
                    }
                },
                resolve: {
                    translatePartialLoader: ['$translate', '$translatePartialLoader', function ($translate, $translatePartialLoader) {
                        $translatePartialLoader.addPart('path');
                        $translatePartialLoader.addPart('global');
                        return $translate.refresh();
                    }]
                }
            })
            .state('path.detail', {
                parent: 'entity',
                url: '/path/{id}',
                data: {
                    authorities: ['ROLE_USER'],
                    pageTitle: 'dgdtoolApp.path.detail.title'
                },
                views: {
                    'content@': {
                        templateUrl: 'scripts/app/entities/path/path-detail.html',
                        controller: 'PathDetailController'
                    }
                },
                resolve: {
                    translatePartialLoader: ['$translate', '$translatePartialLoader', function ($translate, $translatePartialLoader) {
                        $translatePartialLoader.addPart('path');
                        return $translate.refresh();
                    }],
                    entity: ['$stateParams', 'Path', function($stateParams, Path) {
                        return Path.get({id : $stateParams.id});
                    }]
                }
            })
            .state('path.new', {
                parent: 'path',
                url: '/new',
                data: {
                    authorities: ['ROLE_USER'],
                },
                onEnter: ['$stateParams', '$state', '$modal', function($stateParams, $state, $modal) {
                    $modal.open({
                        templateUrl: 'scripts/app/entities/path/path-dialog.html',
                        controller: 'PathDialogController',
                        size: 'lg',
                        resolve: {
                            entity: function () {
                                return {
                                    path_name: null,
                                    description: null,
                                    status_id: null,
                                    created_by: null,
                                    created_date: null,
                                    modified_by: null,
                                    modified_date: null,
                                    id: null
                                };
                            }
                        }
                    }).result.then(function(result) {
                        $state.go('path', null, { reload: true });
                    }, function() {
                        $state.go('path');
                    })
                }]
            })
            .state('path.edit', {
                parent: 'path',
                url: '/{id}/edit',
                data: {
                    authorities: ['ROLE_USER'],
                },
                onEnter: ['$stateParams', '$state', '$modal', function($stateParams, $state, $modal) {
                    $modal.open({
                        templateUrl: 'scripts/app/entities/path/path-dialog.html',
                        controller: 'PathDialogController',
                        size: 'lg',
                        resolve: {
                            entity: ['Path', function(Path) {
                                return Path.get({id : $stateParams.id});
                            }]
                        }
                    }).result.then(function(result) {
                        $state.go('path', null, { reload: true });
                    }, function() {
                        $state.go('^');
                    })
                }]
            });
    }]);

'use strict';

angular.module('dgdtoolApp')
    .controller('PathController', ["$scope", "Path", "PathSearch", "ParseLinks", function ($scope, Path, PathSearch, ParseLinks) {
        $scope.paths = [];
        $scope.page = 0;
        $scope.loadAll = function() {
            Path.query({page: $scope.page, size: 20}, function(result, headers) {
                $scope.links = ParseLinks.parse(headers('link'));
                $scope.paths = result;
            });
        };
        $scope.loadPage = function(page) {
            $scope.page = page;
            $scope.loadAll();
        };
        $scope.loadAll();

        $scope['delete'] = function (id) {
            Path.get({id: id}, function(result) {
                $scope.path = result;
                $('#deletePathConfirmation').modal('show');
            });
        };

        $scope.confirmDelete = function (id) {
            Path['delete']({id: id},
                function () {
                    $scope.loadAll();
                    $('#deletePathConfirmation').modal('hide');
                    $scope.clear();
                });
        };

        $scope.search = function () {
            PathSearch.query({query: $scope.searchQuery}, function(result) {
                $scope.paths = result;
            }, function(response) {
                if(response.status === 404) {
                    $scope.loadAll();
                }
            });
        };

        $scope.refresh = function () {
            $scope.loadAll();
            $scope.clear();
        };

        $scope.clear = function () {
            $scope.path = {
                path_name: null,
                description: null,
                status_id: null,
                created_by: null,
                created_date: null,
                modified_by: null,
                modified_date: null,
                id: null
            };
        };
    }]);

'use strict';

angular.module('dgdtoolApp').controller('PathDialogController',
    ['$scope', '$stateParams', '$modalInstance', 'entity', 'Path',
        function($scope, $stateParams, $modalInstance, entity, Path) {

        $scope.path = entity;
        $scope.load = function(id) {
            Path.get({id : id}, function(result) {
                $scope.path = result;
            });
        };

        var onSaveFinished = function (result) {
            $scope.$emit('dgdtoolApp:pathUpdate', result);
            $modalInstance.close(result);
        };

        $scope.save = function () {
            if ($scope.path.id != null) {
                Path.update($scope.path, onSaveFinished);
            } else {
                Path.save($scope.path, onSaveFinished);
            }
        };

        $scope.clear = function() {
            $modalInstance.dismiss('cancel');
        };
}]);

'use strict';

angular.module('dgdtoolApp')
    .controller('PathDetailController', ["$scope", "$rootScope", "$stateParams", "entity", "Path", function ($scope, $rootScope, $stateParams, entity, Path) {
        $scope.path = entity;
        $scope.load = function (id) {
            Path.get({id: id}, function(result) {
                $scope.path = result;
            });
        };
        var unsubscribe = $rootScope.$on('dgdtoolApp:pathUpdate', function(event, result) {
            $scope.path = result;
        });
        $scope.$on('$destroy', unsubscribe);

    }]);

'use strict';

angular.module('dgdtoolApp')
    .factory('Path', ["$resource", "DateUtils", function ($resource, DateUtils) {
        return $resource('api/paths/:id', {}, {
            'query': { method: 'GET', isArray: true},
            'get': {
                method: 'GET',
                transformResponse: function (data) {
                    data = angular.fromJson(data);
                    data.created_date = DateUtils.convertLocaleDateFromServer(data.created_date);
                    data.modified_date = DateUtils.convertLocaleDateFromServer(data.modified_date);
                    return data;
                }
            },
            'update': {
                method: 'PUT',
                transformRequest: function (data) {
                    data.created_date = DateUtils.convertLocaleDateToServer(data.created_date);
                    data.modified_date = DateUtils.convertLocaleDateToServer(data.modified_date);
                    return angular.toJson(data);
                }
            },
            'save': {
                method: 'POST',
                transformRequest: function (data) {
                    data.created_date = DateUtils.convertLocaleDateToServer(data.created_date);
                    data.modified_date = DateUtils.convertLocaleDateToServer(data.modified_date);
                    return angular.toJson(data);
                }
            }
        });
    }]);

'use strict';

angular.module('dgdtoolApp')
    .factory('PathSearch', ["$resource", function ($resource) {
        return $resource('api/_search/paths/:query', {}, {
            'query': { method: 'GET', isArray: true}
        });
    }]);

'use strict';

angular.module('dgdtoolApp')
    .config(["$stateProvider", function ($stateProvider) {
        $stateProvider
            .state('feedback', {
                parent: 'entity',
                url: '/feedbacks',
                data: {
                    authorities: ['ROLE_USER'],
                    pageTitle: 'dgdtoolApp.feedback.home.title'
                },
                views: {
                    'content@': {
                        templateUrl: 'scripts/app/entities/feedback/feedbacks.html',
                        controller: 'FeedbackController'
                    }
                },
                resolve: {
                    translatePartialLoader: ['$translate', '$translatePartialLoader', function ($translate, $translatePartialLoader) {
                        $translatePartialLoader.addPart('feedback');
                        $translatePartialLoader.addPart('global');
                        return $translate.refresh();
                    }]
                }
            })
            .state('feedback.detail', {
                parent: 'entity',
                url: '/feedback/{id}',
                data: {
                    authorities: ['ROLE_USER'],
                    pageTitle: 'dgdtoolApp.feedback.detail.title'
                },
                views: {
                    'content@': {
                        templateUrl: 'scripts/app/entities/feedback/feedback-detail.html',
                        controller: 'FeedbackDetailController'
                    }
                },
                resolve: {
                    translatePartialLoader: ['$translate', '$translatePartialLoader', function ($translate, $translatePartialLoader) {
                        $translatePartialLoader.addPart('feedback');
                        return $translate.refresh();
                    }],
                    entity: ['$stateParams', 'Feedback', function($stateParams, Feedback) {
                        return Feedback.get({id : $stateParams.id});
                    }]
                }
            })
            .state('feedback.new', {
                parent: 'feedback',
                url: '/new',
                data: {
                    authorities: ['ROLE_USER'],
                },
                onEnter: ['$stateParams', '$state', '$modal', function($stateParams, $state, $modal) {
                    $modal.open({
                        templateUrl: 'scripts/app/entities/feedback/feedback-dialog.html',
                        controller: 'FeedbackDialogController',
                        size: 'lg',
                        resolve: {
                            entity: function () {
                                return {
                                    feedback_type_id: null,
                                    feedback_name: null,
                                    description: null,
                                    status_id: null,
                                    created_by: null,
                                    created_date: null,
                                    modified_by: null,
                                    modified_date: null,
                                    id: null
                                };
                            }
                        }
                    }).result.then(function(result) {
                        $state.go('feedback', null, { reload: true });
                    }, function() {
                        $state.go('feedback');
                    })
                }]
            })
            .state('feedback.edit', {
                parent: 'feedback',
                url: '/{id}/edit',
                data: {
                    authorities: ['ROLE_USER'],
                },
                onEnter: ['$stateParams', '$state', '$modal', function($stateParams, $state, $modal) {
                    $modal.open({
                        templateUrl: 'scripts/app/entities/feedback/feedback-dialog.html',
                        controller: 'FeedbackDialogController',
                        size: 'lg',
                        resolve: {
                            entity: ['Feedback', function(Feedback) {
                                return Feedback.get({id : $stateParams.id});
                            }]
                        }
                    }).result.then(function(result) {
                        $state.go('feedback', null, { reload: true });
                    }, function() {
                        $state.go('^');
                    })
                }]
            });
    }]);

'use strict';

angular.module('dgdtoolApp')
    .controller('FeedbackController', ["$scope", "Feedback", "FeedbackSearch", "ParseLinks", function ($scope, Feedback, FeedbackSearch, ParseLinks) {
        $scope.feedbacks = [];
        $scope.page = 0;
        $scope.loadAll = function() {
            Feedback.query({page: $scope.page, size: 20}, function(result, headers) {
                $scope.links = ParseLinks.parse(headers('link'));
                $scope.feedbacks = result;
            });
        };
        $scope.loadPage = function(page) {
            $scope.page = page;
            $scope.loadAll();
        };
        $scope.loadAll();

        $scope['delete'] = function (id) {
            Feedback.get({id: id}, function(result) {
                $scope.feedback = result;
                $('#deleteFeedbackConfirmation').modal('show');
            });
        };

        $scope.confirmDelete = function (id) {
            Feedback['delete']({id: id},
                function () {
                    $scope.loadAll();
                    $('#deleteFeedbackConfirmation').modal('hide');
                    $scope.clear();
                });
        };

        $scope.search = function () {
            FeedbackSearch.query({query: $scope.searchQuery}, function(result) {
                $scope.feedbacks = result;
            }, function(response) {
                if(response.status === 404) {
                    $scope.loadAll();
                }
            });
        };

        $scope.refresh = function () {
            $scope.loadAll();
            $scope.clear();
        };

        $scope.clear = function () {
            $scope.feedback = {
                feedback_type_id: null,
                feedback_name: null,
                description: null,
                status_id: null,
                created_by: null,
                created_date: null,
                modified_by: null,
                modified_date: null,
                id: null
            };
        };
    }]);

'use strict';

angular.module('dgdtoolApp').controller('FeedbackDialogController',
    ['$scope', '$stateParams', '$modalInstance', 'entity', 'Feedback',
        function($scope, $stateParams, $modalInstance, entity, Feedback) {

        $scope.feedback = entity;
        $scope.load = function(id) {
            Feedback.get({id : id}, function(result) {
                $scope.feedback = result;
            });
        };

        var onSaveFinished = function (result) {
            $scope.$emit('dgdtoolApp:feedbackUpdate', result);
            $modalInstance.close(result);
        };

        $scope.save = function () {
            if ($scope.feedback.id != null) {
                Feedback.update($scope.feedback, onSaveFinished);
            } else {
                Feedback.save($scope.feedback, onSaveFinished);
            }
        };

        $scope.clear = function() {
            $modalInstance.dismiss('cancel');
        };
}]);

'use strict';

angular.module('dgdtoolApp')
    .controller('FeedbackDetailController', ["$scope", "$rootScope", "$stateParams", "entity", "Feedback", function ($scope, $rootScope, $stateParams, entity, Feedback) {
        $scope.feedback = entity;
        $scope.load = function (id) {
            Feedback.get({id: id}, function(result) {
                $scope.feedback = result;
            });
        };
        var unsubscribe = $rootScope.$on('dgdtoolApp:feedbackUpdate', function(event, result) {
            $scope.feedback = result;
        });
        $scope.$on('$destroy', unsubscribe);

    }]);

'use strict';

angular.module('dgdtoolApp')
    .factory('Feedback', ["$resource", "DateUtils", function ($resource, DateUtils) {
        return $resource('api/feedbacks/:id', {}, {
            'query': { method: 'GET', isArray: true},
            'get': {
                method: 'GET',
                transformResponse: function (data) {
                    data = angular.fromJson(data);
                    data.created_date = DateUtils.convertLocaleDateFromServer(data.created_date);
                    data.modified_date = DateUtils.convertLocaleDateFromServer(data.modified_date);
                    return data;
                }
            },
            'update': {
                method: 'PUT',
                transformRequest: function (data) {
                    data.created_date = DateUtils.convertLocaleDateToServer(data.created_date);
                    data.modified_date = DateUtils.convertLocaleDateToServer(data.modified_date);
                    return angular.toJson(data);
                }
            },
            'save': {
                method: 'POST',
                transformRequest: function (data) {
                    data.created_date = DateUtils.convertLocaleDateToServer(data.created_date);
                    data.modified_date = DateUtils.convertLocaleDateToServer(data.modified_date);
                    return angular.toJson(data);
                }
            }
        });
    }]);

'use strict';

angular.module('dgdtoolApp')
    .factory('FeedbackSearch', ["$resource", function ($resource) {
        return $resource('api/_search/feedbacks/:query', {}, {
            'query': { method: 'GET', isArray: true}
        });
    }]);

'use strict';

angular.module('dgdtoolApp')
    .config(["$stateProvider", function ($stateProvider) {
        $stateProvider
            .state('feedback_type', {
                parent: 'entity',
                url: '/feedback_types',
                data: {
                    authorities: ['ROLE_USER'],
                    pageTitle: 'dgdtoolApp.feedback_type.home.title'
                },
                views: {
                    'content@': {
                        templateUrl: 'scripts/app/entities/feedback_type/feedback_types.html',
                        controller: 'Feedback_typeController'
                    }
                },
                resolve: {
                    translatePartialLoader: ['$translate', '$translatePartialLoader', function ($translate, $translatePartialLoader) {
                        $translatePartialLoader.addPart('feedback_type');
                        $translatePartialLoader.addPart('global');
                        return $translate.refresh();
                    }]
                }
            })
            .state('feedback_type.detail', {
                parent: 'entity',
                url: '/feedback_type/{id}',
                data: {
                    authorities: ['ROLE_USER'],
                    pageTitle: 'dgdtoolApp.feedback_type.detail.title'
                },
                views: {
                    'content@': {
                        templateUrl: 'scripts/app/entities/feedback_type/feedback_type-detail.html',
                        controller: 'Feedback_typeDetailController'
                    }
                },
                resolve: {
                    translatePartialLoader: ['$translate', '$translatePartialLoader', function ($translate, $translatePartialLoader) {
                        $translatePartialLoader.addPart('feedback_type');
                        return $translate.refresh();
                    }],
                    entity: ['$stateParams', 'Feedback_type', function($stateParams, Feedback_type) {
                        return Feedback_type.get({id : $stateParams.id});
                    }]
                }
            })
            .state('feedback_type.new', {
                parent: 'feedback_type',
                url: '/new',
                data: {
                    authorities: ['ROLE_USER'],
                },
                onEnter: ['$stateParams', '$state', '$modal', function($stateParams, $state, $modal) {
                    $modal.open({
                        templateUrl: 'scripts/app/entities/feedback_type/feedback_type-dialog.html',
                        controller: 'Feedback_typeDialogController',
                        size: 'lg',
                        resolve: {
                            entity: function () {
                                return {
                                    feedback_type_name: null,
                                    description: null,
                                    status_id: null,
                                    created_by: null,
                                    created_date: null,
                                    modified_by: null,
                                    modified_date: null,
                                    id: null
                                };
                            }
                        }
                    }).result.then(function(result) {
                        $state.go('feedback_type', null, { reload: true });
                    }, function() {
                        $state.go('feedback_type');
                    })
                }]
            })
            .state('feedback_type.edit', {
                parent: 'feedback_type',
                url: '/{id}/edit',
                data: {
                    authorities: ['ROLE_USER'],
                },
                onEnter: ['$stateParams', '$state', '$modal', function($stateParams, $state, $modal) {
                    $modal.open({
                        templateUrl: 'scripts/app/entities/feedback_type/feedback_type-dialog.html',
                        controller: 'Feedback_typeDialogController',
                        size: 'lg',
                        resolve: {
                            entity: ['Feedback_type', function(Feedback_type) {
                                return Feedback_type.get({id : $stateParams.id});
                            }]
                        }
                    }).result.then(function(result) {
                        $state.go('feedback_type', null, { reload: true });
                    }, function() {
                        $state.go('^');
                    })
                }]
            });
    }]);

'use strict';

angular.module('dgdtoolApp')
    .controller('Feedback_typeController', ["$scope", "Feedback_type", "Feedback_typeSearch", "ParseLinks", function ($scope, Feedback_type, Feedback_typeSearch, ParseLinks) {
        $scope.feedback_types = [];
        $scope.page = 0;
        $scope.loadAll = function() {
            Feedback_type.query({page: $scope.page, size: 20}, function(result, headers) {
                $scope.links = ParseLinks.parse(headers('link'));
                $scope.feedback_types = result;
            });
        };
        $scope.loadPage = function(page) {
            $scope.page = page;
            $scope.loadAll();
        };
        $scope.loadAll();

        $scope['delete'] = function (id) {
            Feedback_type.get({id: id}, function(result) {
                $scope.feedback_type = result;
                $('#deleteFeedback_typeConfirmation').modal('show');
            });
        };

        $scope.confirmDelete = function (id) {
            Feedback_type['delete']({id: id},
                function () {
                    $scope.loadAll();
                    $('#deleteFeedback_typeConfirmation').modal('hide');
                    $scope.clear();
                });
        };

        $scope.search = function () {
            Feedback_typeSearch.query({query: $scope.searchQuery}, function(result) {
                $scope.feedback_types = result;
            }, function(response) {
                if(response.status === 404) {
                    $scope.loadAll();
                }
            });
        };

        $scope.refresh = function () {
            $scope.loadAll();
            $scope.clear();
        };

        $scope.clear = function () {
            $scope.feedback_type = {
                feedback_type_name: null,
                description: null,
                status_id: null,
                created_by: null,
                created_date: null,
                modified_by: null,
                modified_date: null,
                id: null
            };
        };
    }]);

'use strict';

angular.module('dgdtoolApp').controller('Feedback_typeDialogController',
    ['$scope', '$stateParams', '$modalInstance', 'entity', 'Feedback_type',
        function($scope, $stateParams, $modalInstance, entity, Feedback_type) {

        $scope.feedback_type = entity;
        $scope.load = function(id) {
            Feedback_type.get({id : id}, function(result) {
                $scope.feedback_type = result;
            });
        };

        var onSaveFinished = function (result) {
            $scope.$emit('dgdtoolApp:feedback_typeUpdate', result);
            $modalInstance.close(result);
        };

        $scope.save = function () {
            if ($scope.feedback_type.id != null) {
                Feedback_type.update($scope.feedback_type, onSaveFinished);
            } else {
                Feedback_type.save($scope.feedback_type, onSaveFinished);
            }
        };

        $scope.clear = function() {
            $modalInstance.dismiss('cancel');
        };
}]);

'use strict';

angular.module('dgdtoolApp')
    .controller('Feedback_typeDetailController', ["$scope", "$rootScope", "$stateParams", "entity", "Feedback_type", function ($scope, $rootScope, $stateParams, entity, Feedback_type) {
        $scope.feedback_type = entity;
        $scope.load = function (id) {
            Feedback_type.get({id: id}, function(result) {
                $scope.feedback_type = result;
            });
        };
        var unsubscribe = $rootScope.$on('dgdtoolApp:feedback_typeUpdate', function(event, result) {
            $scope.feedback_type = result;
        });
        $scope.$on('$destroy', unsubscribe);

    }]);

'use strict';

angular.module('dgdtoolApp')
    .factory('Feedback_type', ["$resource", "DateUtils", function ($resource, DateUtils) {
        return $resource('api/feedback_types/:id', {}, {
            'query': { method: 'GET', isArray: true},
            'get': {
                method: 'GET',
                transformResponse: function (data) {
                    data = angular.fromJson(data);
                    data.created_date = DateUtils.convertLocaleDateFromServer(data.created_date);
                    data.modified_date = DateUtils.convertLocaleDateFromServer(data.modified_date);
                    return data;
                }
            },
            'update': {
                method: 'PUT',
                transformRequest: function (data) {
                    data.created_date = DateUtils.convertLocaleDateToServer(data.created_date);
                    data.modified_date = DateUtils.convertLocaleDateToServer(data.modified_date);
                    return angular.toJson(data);
                }
            },
            'save': {
                method: 'POST',
                transformRequest: function (data) {
                    data.created_date = DateUtils.convertLocaleDateToServer(data.created_date);
                    data.modified_date = DateUtils.convertLocaleDateToServer(data.modified_date);
                    return angular.toJson(data);
                }
            }
        });
    }]);

'use strict';

angular.module('dgdtoolApp')
    .factory('Feedback_typeSearch', ["$resource", function ($resource) {
        return $resource('api/_search/feedback_types/:query', {}, {
            'query': { method: 'GET', isArray: true}
        });
    }]);

'use strict';

angular.module('dgdtoolApp')
    .config(["$stateProvider", function ($stateProvider) {
        $stateProvider
            .state('statuses', {
                parent: 'entity',
                url: '/statusess',
                data: {
                    authorities: ['ROLE_USER'],
                    pageTitle: 'dgdtoolApp.statuses.home.title'
                },
                views: {
                    'content@': {
                        templateUrl: 'scripts/app/entities/statuses/statusess.html',
                        controller: 'StatusesController'
                    }
                },
                resolve: {
                    translatePartialLoader: ['$translate', '$translatePartialLoader', function ($translate, $translatePartialLoader) {
                        $translatePartialLoader.addPart('statuses');
                        $translatePartialLoader.addPart('global');
                        return $translate.refresh();
                    }]
                }
            })
            .state('statuses.detail', {
                parent: 'entity',
                url: '/statuses/{id}',
                data: {
                    authorities: ['ROLE_USER'],
                    pageTitle: 'dgdtoolApp.statuses.detail.title'
                },
                views: {
                    'content@': {
                        templateUrl: 'scripts/app/entities/statuses/statuses-detail.html',
                        controller: 'StatusesDetailController'
                    }
                },
                resolve: {
                    translatePartialLoader: ['$translate', '$translatePartialLoader', function ($translate, $translatePartialLoader) {
                        $translatePartialLoader.addPart('statuses');
                        return $translate.refresh();
                    }],
                    entity: ['$stateParams', 'Statuses', function($stateParams, Statuses) {
                        return Statuses.get({id : $stateParams.id});
                    }]
                }
            })
            .state('statuses.new', {
                parent: 'statuses',
                url: '/new',
                data: {
                    authorities: ['ROLE_USER'],
                },
                onEnter: ['$stateParams', '$state', '$modal', function($stateParams, $state, $modal) {
                    $modal.open({
                        templateUrl: 'scripts/app/entities/statuses/statuses-dialog.html',
                        controller: 'StatusesDialogController',
                        size: 'lg',
                        resolve: {
                            entity: function () {
                                return {
                                    status_type_id: null,
                                    status_name: null,
                                    description: null,
                                    status_id: null,
                                    created_by: null,
                                    created_date: null,
                                    modified_by: null,
                                    modified_date: null,
                                    id: null
                                };
                            }
                        }
                    }).result.then(function(result) {
                        $state.go('statuses', null, { reload: true });
                    }, function() {
                        $state.go('statuses');
                    })
                }]
            })
            .state('statuses.edit', {
                parent: 'statuses',
                url: '/{id}/edit',
                data: {
                    authorities: ['ROLE_USER'],
                },
                onEnter: ['$stateParams', '$state', '$modal', function($stateParams, $state, $modal) {
                    $modal.open({
                        templateUrl: 'scripts/app/entities/statuses/statuses-dialog.html',
                        controller: 'StatusesDialogController',
                        size: 'lg',
                        resolve: {
                            entity: ['Statuses', function(Statuses) {
                                return Statuses.get({id : $stateParams.id});
                            }]
                        }
                    }).result.then(function(result) {
                        $state.go('statuses', null, { reload: true });
                    }, function() {
                        $state.go('^');
                    })
                }]
            });
    }]);

'use strict';

angular.module('dgdtoolApp')
    .controller('StatusesController', ["$scope", "Statuses", "StatusesSearch", "ParseLinks", function ($scope, Statuses, StatusesSearch, ParseLinks) {
        $scope.statusess = [];
        $scope.page = 0;
        $scope.loadAll = function() {
            Statuses.query({page: $scope.page, size: 20}, function(result, headers) {
                $scope.links = ParseLinks.parse(headers('link'));
                $scope.statusess = result;
            });
        };
        $scope.loadPage = function(page) {
            $scope.page = page;
            $scope.loadAll();
        };
        $scope.loadAll();

        $scope['delete'] = function (id) {
            Statuses.get({id: id}, function(result) {
                $scope.statuses = result;
                $('#deleteStatusesConfirmation').modal('show');
            });
        };

        $scope.confirmDelete = function (id) {
            Statuses['delete']({id: id},
                function () {
                    $scope.loadAll();
                    $('#deleteStatusesConfirmation').modal('hide');
                    $scope.clear();
                });
        };

        $scope.search = function () {
            StatusesSearch.query({query: $scope.searchQuery}, function(result) {
                $scope.statusess = result;
            }, function(response) {
                if(response.status === 404) {
                    $scope.loadAll();
                }
            });
        };

        $scope.refresh = function () {
            $scope.loadAll();
            $scope.clear();
        };

        $scope.clear = function () {
            $scope.statuses = {
                status_type_id: null,
                status_name: null,
                description: null,
                status_id: null,
                created_by: null,
                created_date: null,
                modified_by: null,
                modified_date: null,
                id: null
            };
        };
    }]);

'use strict';

angular.module('dgdtoolApp').controller('StatusesDialogController',
    ['$scope', '$stateParams', '$modalInstance', 'entity', 'Statuses',
        function($scope, $stateParams, $modalInstance, entity, Statuses) {

        $scope.statuses = entity;
        $scope.load = function(id) {
            Statuses.get({id : id}, function(result) {
                $scope.statuses = result;
            });
        };

        var onSaveFinished = function (result) {
            $scope.$emit('dgdtoolApp:statusesUpdate', result);
            $modalInstance.close(result);
        };

        $scope.save = function () {
            if ($scope.statuses.id != null) {
                Statuses.update($scope.statuses, onSaveFinished);
            } else {
                Statuses.save($scope.statuses, onSaveFinished);
            }
        };

        $scope.clear = function() {
            $modalInstance.dismiss('cancel');
        };
}]);

'use strict';

angular.module('dgdtoolApp')
    .controller('StatusesDetailController', ["$scope", "$rootScope", "$stateParams", "entity", "Statuses", function ($scope, $rootScope, $stateParams, entity, Statuses) {
        $scope.statuses = entity;
        $scope.load = function (id) {
            Statuses.get({id: id}, function(result) {
                $scope.statuses = result;
            });
        };
        var unsubscribe = $rootScope.$on('dgdtoolApp:statusesUpdate', function(event, result) {
            $scope.statuses = result;
        });
        $scope.$on('$destroy', unsubscribe);

    }]);

'use strict';

angular.module('dgdtoolApp')
    .factory('Statuses', ["$resource", "DateUtils", function ($resource, DateUtils) {
        return $resource('api/statusess/:id', {}, {
            'query': { method: 'GET', isArray: true},
            'get': {
                method: 'GET',
                transformResponse: function (data) {
                    data = angular.fromJson(data);
                    data.created_date = DateUtils.convertLocaleDateFromServer(data.created_date);
                    data.modified_date = DateUtils.convertLocaleDateFromServer(data.modified_date);
                    return data;
                }
            },
            'update': {
                method: 'PUT',
                transformRequest: function (data) {
                    data.created_date = DateUtils.convertLocaleDateToServer(data.created_date);
                    data.modified_date = DateUtils.convertLocaleDateToServer(data.modified_date);
                    return angular.toJson(data);
                }
            },
            'save': {
                method: 'POST',
                transformRequest: function (data) {
                    data.created_date = DateUtils.convertLocaleDateToServer(data.created_date);
                    data.modified_date = DateUtils.convertLocaleDateToServer(data.modified_date);
                    return angular.toJson(data);
                }
            }
        });
    }]);

'use strict';

angular.module('dgdtoolApp')
    .factory('StatusesSearch', ["$resource", function ($resource) {
        return $resource('api/_search/statusess/:query', {}, {
            'query': { method: 'GET', isArray: true}
        });
    }]);

angular.module('dgdtoolApp').run(['$templateCache', function($templateCache) {
  'use strict';

  $templateCache.put('scripts/app/account/activate/activate.html',
    "<div> <div class=row> <div class=\"col-md-8 col-md-offset-2\"> <h1 translate=activate.title>Activation</h1> <div class=\"alert alert-success\" ng-show=success translate=activate.messages.success> <strong>Your user has been activated.</strong> Please <a class=alert-link href=#/login>sign in</a>. </div> <div class=\"alert alert-danger\" ng-show=error translate=activate.messages.error> <strong>Your user could not be activated.</strong> Please use the registration form to sign up. </div> </div> </div> </div>"
  );


  $templateCache.put('scripts/app/account/login/login.html',
    "<div> <div class=row> <div class=\"col-md-4 col-md-offset-4\"> <h1 translate=login.title>Sign in</h1> <div class=\"alert alert-danger\" ng-show=authenticationError translate=login.messages.error.authentication> <strong>Failed to sign in!</strong> Please check your credentials and try again. </div> </div> <div class=\"col-md-4 col-md-offset-2\"> <form class=form role=form ng-submit=login($event)> <div class=form-group> <label for=username translate=global.form.username>Login</label> <input class=form-control id=username placeholder=\"{{'global.form.username.placeholder' | translate}}\" ng-model=username> </div> <div class=form-group> <label for=password translate=login.form.password>Password</label> <input type=password class=form-control id=password placeholder=\"{{'login.form.password.placeholder' | translate}}\" ng-model=password> </div> <div class=form-group> <label for=rememberMe> <input type=checkbox id=rememberMe ng-model=rememberMe checked> <span translate=login.form.rememberme>Remember me</span> </label> </div> <button type=submit class=\"btn btn-primary\" translate=login.form.button>Sign in</button> </form> <p></p> <div class=\"alert alert-warning\"> <a class=alert-link href=#/reset/request translate=login.password.forgot>Did you forget your password?</a> </div> <div class=\"alert alert-warning\" translate=global.messages.info.register> You don't have an account yet? <a class=alert-link href=#/register>Register a new account</a> </div> </div> <div class=col-md-4> <br/> <jh-social ng-provider=google></jh-social> <jh-social ng-provider=facebook></jh-social> <jh-social ng-provider=twitter></jh-social> </div> </div> </div>"
  );


  $templateCache.put('scripts/app/account/password/password.html',
    "<div> <div class=row> <div class=\"col-md-8 col-md-offset-2\"> <h2 translate=password.title translate-values=\"{username: '{{account.login}}'}\">Password for [<b>{{account.login}}</b>]</h2> <div class=\"alert alert-success\" ng-show=success translate=password.messages.success> <strong>Password changed!</strong> </div> <div class=\"alert alert-danger\" ng-show=error translate=password.messages.error> <strong>An error has occurred!</strong> The password could not be changed. </div> <div class=\"alert alert-danger\" ng-show=doNotMatch translate=global.messages.error.dontmatch> The password and its confirmation do not match! </div> <form name=form role=form novalidate ng-submit=changePassword() show-validation> <div class=form-group> <label for=password translate=global.form.newpassword>New password</label> <input type=password class=form-control id=password name=password placeholder=\"{{'global.form.newpassword.placeholder' | translate}}\" ng-model=password ng-minlength=5 ng-maxlength=50 required> <div ng-show=\"form.password.$dirty && form.password.$invalid\"> <p class=help-block ng-show=form.password.$error.required translate=global.messages.validate.newpassword.required> Your password is required. </p> <p class=help-block ng-show=form.password.$error.minlength translate=global.messages.validate.newpassword.minlength> Your password is required to be at least 5 characters. </p> <p class=help-block ng-show=form.password.$error.maxlength translate=global.messages.validate.newpassword.maxlength> Your password cannot be longer than 50 characters. </p> </div> <password-strength-bar password-to-check=password></password-strength-bar> </div> <div class=form-group> <label for=confirmPassword translate=global.form.confirmpassword>New password confirmation</label> <input type=password class=form-control id=confirmPassword name=confirmPassword placeholder=\"{{'global.form.confirmpassword.placeholder' | translate}}\" ng-model=confirmPassword ng-minlength=5 ng-maxlength=50 required> <div ng-show=\"form.confirmPassword.$dirty && form.confirmPassword.$invalid\"> <p class=help-block ng-show=form.confirmPassword.$error.required translate=global.messages.validate.confirmpassword.required> Your confirmation password is required. </p> <p class=help-block ng-show=form.confirmPassword.$error.minlength translate=global.messages.validate.confirmpassword.minlength> Your confirmation password is required to be at least 5 characters. </p> <p class=help-block ng-show=form.confirmPassword.$error.maxlength translate=global.messages.validate.confirmpassword.maxlength> Your confirmation password cannot be longer than 50 characters. </p> </div> </div> <button type=submit ng-disabled=form.$invalid class=\"btn btn-primary\" translate=password.form.button>Save</button> </form> </div> </div> </div>"
  );


  $templateCache.put('scripts/app/account/register/register.html',
    "<div> <div class=row> <div class=\"col-md-8 col-md-offset-2\"> <h1 translate=register.title>Registration</h1> <div class=\"alert alert-success\" ng-show=success translate=register.messages.success> <strong>Registration saved!</strong> Please check your email for confirmation. </div> <div class=\"alert alert-danger\" ng-show=error translate=register.messages.error.fail> <strong>Registration failed!</strong> Please try again later. </div> <div class=\"alert alert-danger\" ng-show=errorUserExists translate=register.messages.error.userexists> <strong>Login name already registered!</strong> Please choose another one. </div> <div class=\"alert alert-danger\" ng-show=errorEmailExists translate=register.messages.error.emailexists> <strong>E-mail is already in use!</strong> Please choose another one. </div> <div class=\"alert alert-danger\" ng-show=doNotMatch translate=global.messages.error.dontmatch> The password and its confirmation do not match! </div> </div> <div class=\"col-md-4 col-md-offset-2\"> <form ng-show=!success name=form role=form novalidate ng-submit=register() show-validation> <div class=form-group> <label for=login translate=global.form.username>Username</label> <input class=form-control id=login name=login placeholder=\"{{'global.form.username.placeholder' | translate}}\" ng-model=registerAccount.login ng-minlength=1 ng-maxlength=50 ng-pattern=\"/^[a-z0-9]*$/\" required> <div ng-show=\"form.login.$dirty && form.login.$invalid\"> <p class=help-block ng-show=form.login.$error.required translate=register.messages.validate.login.required> Your username is required. </p> <p class=help-block ng-show=form.login.$error.minlength translate=register.messages.validate.login.minlength> Your username is required to be at least 1 character. </p> <p class=help-block ng-show=form.login.$error.maxlength translate=register.messages.validate.login.maxlength> Your username cannot be longer than 50 characters. </p> <p class=help-block ng-show=form.login.$error.pattern translate=register.messages.validate.login.pattern> Your username can only contain lower-case letters and digits. </p> </div> </div> <div class=form-group> <label for=email translate=global.form.email>E-mail</label> <input type=email class=form-control id=email name=email placeholder=\"{{'global.form.email.placeholder' | translate}}\" ng-model=registerAccount.email ng-minlength=5 ng-maxlength=100 required> <div ng-show=\"form.email.$dirty && form.email.$invalid\"> <p class=help-block ng-show=form.email.$error.required translate=global.messages.validate.email.required> Your e-mail is required. </p> <p class=help-block ng-show=form.email.$error.email translate=global.messages.validate.email.invalid> Your e-mail is invalid. </p> <p class=help-block ng-show=form.email.$error.minlength translate=global.messages.validate.email.minlength> Your e-mail is required to be at least 5 characters. </p> <p class=help-block ng-show=form.email.$error.maxlength translate=global.messages.validate.email.maxlength> Your e-mail cannot be longer than 100 characters. </p> </div> </div> <div class=form-group> <label for=password translate=global.form.newpassword>New password</label> <input type=password class=form-control id=password name=password placeholder=\"{{'global.form.newpassword.placeholder' | translate}}\" ng-model=registerAccount.password ng-minlength=5 ng-maxlength=50 required> <div ng-show=\"form.password.$dirty && form.password.$invalid\"> <p class=help-block ng-show=form.password.$error.required translate=global.messages.validate.newpassword.required> Your password is required. </p> <p class=help-block ng-show=form.password.$error.minlength translate=global.messages.validate.newpassword.minlength> Your password is required to be at least 5 characters. </p> <p class=help-block ng-show=form.password.$error.maxlength translate=global.messages.validate.newpassword.maxlength> Your password cannot be longer than 50 characters. </p> </div> <password-strength-bar password-to-check=registerAccount.password></password-strength-bar> </div> <div class=form-group> <label for=confirmPassword translate=global.form.confirmpassword>New password confirmation</label> <input type=password class=form-control id=confirmPassword name=confirmPassword placeholder=\"{{'global.form.confirmpassword.placeholder' | translate}}\" ng-model=confirmPassword ng-minlength=5 ng-maxlength=50 required> <div ng-show=\"form.confirmPassword.$dirty && form.confirmPassword.$invalid\"> <p class=help-block ng-show=form.confirmPassword.$error.required translate=global.messages.validate.confirmpassword.required> Your confirmation password is required. </p> <p class=help-block ng-show=form.confirmPassword.$error.minlength translate=global.messages.validate.confirmpassword.minlength> Your confirmation password is required to be at least 5 characters. </p> <p class=help-block ng-show=form.confirmPassword.$error.maxlength translate=global.messages.validate.confirmpassword.maxlength> Your confirmation password cannot be longer than 50 characters. </p> </div> </div> <button type=submit ng-disabled=form.$invalid class=\"btn btn-primary\" translate=register.form.button>Register</button> </form> <p></p> <div class=\"alert alert-warning\" translate=global.messages.info.authenticated> If you want to <a class=alert-link href=#/login>sign in</a>, you can try the default accounts:<br/>- Administrator (login=\"admin\" and password=\"admin\") <br/>- User (login=\"user\" and password=\"user\"). </div> </div> <div class=col-md-4> <br/> <jh-social ng-provider=google></jh-social> <jh-social ng-provider=facebook></jh-social> <jh-social ng-provider=twitter></jh-social> </div> </div></div>"
  );


  $templateCache.put('scripts/app/account/reset/finish/reset.finish.html',
    "<div> <div class=row> <div class=\"col-md-4 col-md-offset-4\"> <h1 translate=reset.finish.title>Reset password</h1> <div class=\"alert alert-danger\" translate=reset.finish.messages.keymissing ng-show=keyMissing> <strong>The password reset key is missing.</strong> </div> <div class=\"alert alert-warning\" ng-hide=\"success || keyMissing\"> <p translate=reset.finish.messages.info>Choose a new password</p> </div> <div class=\"alert alert-danger\" ng-show=error> <p translate=reset.finish.messages.error>Your password couldn't be reset. Remember a password request is only valid for 24 hours.</p> </div> <div class=\"alert alert-success\" ng-show=success> <p translate=reset.finish.messages.success><strong>Your password has been reset.</strong> Please <a class=alert-link href=#/login>sign in</a>.</p> </div> <div class=\"alert alert-danger\" ng-show=doNotMatch translate=global.messages.error.dontmatch> The password and its confirmation do not match! </div> <div ng-hide=keyMissing> <form ng-show=!success name=form role=form novalidate ng-submit=finishReset() show-validation> <div class=form-group> <label for=password translate=global.form.newpassword>New password</label> <input type=password class=form-control id=password name=password placeholder=\"{{'global.form.newpassword.placeholder' | translate}}\" ng-model=resetAccount.password ng-minlength=5 ng-maxlength=50 required> <div ng-show=\"form.password.$dirty && form.password.$invalid\"> <p class=help-block ng-show=form.password.$error.required translate=global.messages.validate.newpassword.required> Your password is required. </p> <p class=help-block ng-show=form.password.$error.minlength translate=global.messages.validate.newpassword.minlength> Your password is required to be at least 5 characters. </p> <p class=help-block ng-show=form.password.$error.maxlength translate=global.messages.validate.newpassword.maxlength> Your password cannot be longer than 50 characters. </p> </div> <password-strength-bar password-to-check=resetAccount.password></password-strength-bar> </div> <div class=form-group> <label for=confirmPassword translate=global.form.confirmpassword>New password confirmation</label> <input type=password class=form-control id=confirmPassword name=confirmPassword placeholder=\"{{'global.form.confirmpassword.placeholder' | translate}}\" ng-model=confirmPassword ng-minlength=5 ng-maxlength=50 required> <div ng-show=\"form.confirmPassword.$dirty && form.confirmPassword.$invalid\"> <p class=help-block ng-show=form.confirmPassword.$error.required translate=global.messages.validate.confirmpassword.required> Your password confirmation is required. </p> <p class=help-block ng-show=form.confirmPassword.$error.minlength translate=global.messages.validate.confirmpassword.minlength> Your password confirmation is required to be at least 5 characters. </p> <p class=help-block ng-show=form.confirmPassword.$error.maxlength translate=global.messages.validate.confirmpassword.maxlength> Your password confirmation cannot be longer than 50 characters. </p> </div> </div> <button type=submit ng-disabled=form.$invalid class=\"btn btn-primary\" translate=reset.finish.form.button>Reset Password</button> </form> </div> </div> </div> </div>"
  );


  $templateCache.put('scripts/app/account/reset/request/reset.request.html',
    "<div> <div class=row> <div class=\"col-md-8 col-md-offset-2\"> <h1 translate=reset.request.title>Reset your password</h1> <div class=\"alert alert-danger\" translate=reset.request.messages.notfound ng-show=errorEmailNotExists> <strong>E-Mail address isn't registered!</strong> Please check and try again. </div> <div class=\"alert alert-warning\" ng-hide=success> <p translate=reset.request.messages.info>Enter the e-mail address you used to register.</p> </div> <div class=\"alert alert-success\" ng-show=\"success == 'OK'\"> <p translate=reset.request.messages.success>Check your e-mails for details on how to reset your password.</p> </div> <form ng-show=!success name=form role=form novalidate ng-submit=requestReset() show-validation> <div class=form-group> <label for=email translate=global.form.email>E-mail</label> <input type=email class=form-control id=email name=email placeholder=\"{{'global.form.email.placeholder' | translate}}\" ng-model=resetAccount.email ng-minlength=5 ng-maxlength=100 required> <div ng-show=\"form.email.$dirty && form.email.$invalid\"> <p class=help-block ng-show=form.email.$error.required translate=global.messages.validate.email.required> Your e-mail is required. </p> <p class=help-block ng-show=form.email.$error.email translate=global.messages.validate.email.invalid> Your e-mail is invalid. </p> <p class=help-block ng-show=form.email.$error.minlength translate=global.messages.validate.email.minlength> Your e-mail is required to be at least 5 characters. </p> <p class=help-block ng-show=form.email.$error.maxlength translate=global.messages.validate.email.maxlength> Your e-mail cannot be longer than 100 characters. </p> </div> </div> <button type=submit ng-disabled=form.$invalid class=\"btn btn-primary\" translate=reset.request.form.button>Register</button> </form> </div> </div> </div>"
  );


  $templateCache.put('scripts/app/account/sessions/sessions.html',
    "<div> <h2 translate=sessions.title translate-values=\"{username: '{{account.login}}'}\">Active sessions for [<b>{{account.login}}</b>]</h2> <div class=\"alert alert-success\" ng-show=success translate=sessions.messages.success> <strong>Session invalidated!</strong> </div> <div class=\"alert alert-danger\" ng-show=error translate=sessions.messages.error> <strong>An error has occured!</strong> The session could not be invalidated. </div> <div class=table-responsive> <table class=\"table table-striped\"> <thead> <tr> <th translate=sessions.table.ipaddress>IP Address</th> <th translate=sessions.table.useragent>User agent</th> <th translate=sessions.table.date>Date</th> <th></th> </tr> </thead> <tbody> <tr ng-repeat=\"session in sessions\"> <td>{{session.ipAddress}}</td> <td>{{session.userAgent}}</td> <td>{{session.formattedTokenDate}}</td> <td> <button type=submit class=\"btn btn-primary\" ng-click=invalidate(session.series) translate=sessions.table.button> Invalidate </button> </td> </tr> </tbody> </table> </div> </div>"
  );


  $templateCache.put('scripts/app/account/settings/settings.html',
    "<div> <div class=row> <div class=\"col-md-8 col-md-offset-2\"> <h2 translate=settings.title translate-values=\"{username: '{{settingsAccount.login}}'}\">User settings for [<b>{{settingsAccount.login}}</b>]</h2> <div class=\"alert alert-success\" ng-show=success translate=settings.messages.success> <strong>Settings saved!</strong> </div> <div class=\"alert alert-danger\" ng-show=errorEmailExists translate=settings.messages.error.emailexists> <strong>E-mail is already in use!</strong> Please choose another one. </div> <div class=\"alert alert-danger\" ng-show=error translate=settings.messages.error.fail> <strong>An error has occurred!</strong> Settings could not be saved. </div> <form name=form role=form novalidate ng-submit=save() show-validation> <div class=form-group> <label for=firstName translate=settings.form.firstname>First Name</label> <input class=form-control id=firstName name=firstName placeholder=\"{{'settings.form.firstname.placeholder' | translate}}\" ng-model=settingsAccount.firstName ng-minlength=1 ng-maxlength=50 required maxlength=50> <div ng-show=\"form.firstName.$dirty && form.firstName.$invalid\"> <p class=help-block ng-show=form.firstName.$error.required translate=settings.messages.validate.firstname.required> Your first name is required. </p> <p class=help-block ng-show=form.firstName.$error.minlength translate=settings.messages.validate.firstname.minlength> Your first name is required to be at least 1 character. </p> <p class=help-block ng-show=form.firstName.$error.maxlength translate=settings.messages.validate.firstname.maxlength> Your first name cannot be longer than 50 characters. </p> </div> </div> <div class=form-group> <label for=lastName translate=settings.form.lastname>Last Name</label> <input class=form-control id=lastName name=lastName placeholder=\"{{'settings.form.lastname.placeholder' | translate}}\" ng-model=settingsAccount.lastName ng-minlength=1 ng-maxlength=50 required maxlength=50> <div ng-show=\"form.lastName.$dirty && form.lastName.$invalid\"> <p class=help-block ng-show=form.lastName.$error.required translate=settings.messages.validate.lastname.required> Your last name is required. </p> <p class=help-block ng-show=form.lastName.$error.minlength translate=settings.messages.validate.lastname.minlength> Your last name is required to be at least 1 character. </p> <p class=help-block ng-show=form.lastName.$error.maxlength translate=settings.messages.validate.lastname.maxlength> Your last name cannot be longer than 50 characters. </p> </div> </div> <div class=form-group> <label for=email translate=global.form.email>E-mail</label> <input type=email class=form-control id=email name=email placeholder=\"{{'global.form.email.placeholder' | translate}}\" ng-model=settingsAccount.email ng-minlength=5 ng-maxlength=100 required maxlength=100> <div ng-show=\"form.email.$dirty && form.email.$invalid\"> <p class=help-block ng-show=form.email.$error.required translate=global.messages.validate.email.required> Your e-mail is required. </p> <p class=help-block ng-show=form.email.$error.email translate=global.messages.validate.email.invalid> Your e-mail is invalid. </p> <p class=help-block ng-show=form.email.$error.minlength translate=global.messages.validate.email.minlength> Your e-mail is required to be at least 5 characters. </p> <p class=help-block ng-show=form.email.$error.maxlength translate=global.messages.validate.email.maxlength> Your e-mail cannot be longer than 100 characters. </p> </div> </div> <div class=form-group> <label for=langKey translate=settings.form.language>Language</label> <select id=langKey name=langKey class=form-control ng-model=settingsAccount.langKey ng-controller=LanguageController ng-options=\"code as (code | findLanguageFromKey) for code in languages\"></select> </div> <button type=submit ng-disabled=form.$invalid class=\"btn btn-primary\" translate=settings.form.button>Save</button> </form> </div> </div> </div>"
  );


  $templateCache.put('scripts/app/account/social/directive/social.html',
    "<form action=\"{{ providerURL }}\" method=POST> <button type=submit class=\"btn btn-block jh-btn-social jh-btn-{{ provider }}\"> <span translate=social.btnLabel translate-values=\"{ label: label }\">Sign in with {{ label }}</span> </button> <input name=scope type=hidden value=\"{{ providerSetting }}\"/> <input name=_csrf type=hidden value=\"{{ csrf }}\"/> </form>"
  );


  $templateCache.put('scripts/app/account/social/social-register.html',
    "<div> <div class=row> <div class=\"col-md-8 col-md-offset-2\"> <h1 ng-show=success translate=social.register.title translate-values=\"{ label: providerLabel }\">Registration with</h1> <h1 ng-show=error translate=social.register.errorTitle>Registration</h1> <div class=\"alert alert-success\" ng-show=success translate=social.register.messages.success> <strong>Registration saved!</strong> Please check your email for confirmation. </div> <div class=\"alert alert-danger\" ng-show=error translate=social.register.messages.error.fail> <strong>Registration failed!</strong> Please try again later. </div> <jh-social ng-if=success ng-provider=\"{{ provider }}\"></jh-social> <br/> <div class=\"alert alert-warning\" translate=global.messages.info.authenticated> If you want to <a class=alert-link href=#/login>sign in</a>, you can try the default accounts:<br/>- Administrator (login=\"admin\" and password=\"admin\") <br/>- User (login=\"user\" and password=\"user\"). </div> </div> </div> </div>"
  );


  $templateCache.put('scripts/app/admin/audits/audits.html',
    "<div> <h2 translate=audits.title>Audits</h2> <div class=row> <div class=col-md-5> <h4 translate=audits.filter.title>Filter by date</h4> <p class=input-group> <span class=input-group-addon translate=audits.filter.from>from</span> <input type=date class=\"input-sm form-control\" name=start ng-model=fromDate ng-change=onChangeDate() required/> <span class=input-group-addon translate=audits.filter.to>to</span> <input type=date class=\"input-sm form-control\" name=end ng-model=toDate ng-change=onChangeDate() required/> </p> </div> </div> <table class=\"table table-condensed table-striped table-bordered table-responsive\"> <thead> <tr> <th ng-click=\"predicate = 'timestamp'; reverse=!reverse\"><span translate=audits.table.header.date>Date</span></th> <th ng-click=\"predicate = 'principal'; reverse=!reverse\"><span translate=audits.table.header.principal>User</span></th> <th ng-click=\"predicate = 'type'; reverse=!reverse\"><span translate=audits.table.header.status>State</span></th> <th ng-click=\"predicate = 'data.message'; reverse=!reverse\"><span translate=audits.table.header.data>Extra data</span></th> </tr> </thead> <tr ng-repeat=\"audit in audits | filter:filter | orderBy:predicate:reverse\" ng-hide=audit.filtered> <td><span>{{audit.timestamp| date:'medium'}}</span></td> <td><small>{{audit.principal}}</small></td> <td>{{audit.type}}</td> <td> <span ng-show=audit.data.message>{{audit.data.message}}</span> <span ng-show=audit.data.remoteAddress><span translate=audits.table.data.remoteAddress>Remote Address</span> {{audit.data.remoteAddress}}</span> </td> </tr> </table> </div>"
  );


  $templateCache.put('scripts/app/admin/configuration/configuration.html',
    "<div> <h2 translate=configuration.title>configuration</h2> <span translate=configuration.filter>Filter (by prefix)</span> <input ng-model=filter class=form-control> <table class=\"table table-condensed table-striped table-bordered table-responsive\" style=table-layout:fixed> <thead> <tr> <th ng-click=\"predicate = 'prefix'; reverse=!reverse\" class=col-sm-4><span translate=configuration.table.prefix>Prefix</span></th> <th translate=configuration.table.properties class=col-sm-8>Properties</th> </tr> </thead> <tr ng-repeat=\"entry in configuration | filter:filter | orderBy:predicate:reverse\"> <td><span>{{entry.prefix}}</span></td> <td> <div class=row ng-repeat=\"(key, value) in entry.properties\"> <div class=col-md-4>{{key}}</div> <div class=col-md-8><span class=\"pull-right label label-info\" style=\"white-space: normal;word-break:break-all\">{{value}}</span></div> </div> </td> </tr> </table> </div>"
  );


  $templateCache.put('scripts/app/admin/docs/docs.html',
    "<iframe src=swagger-ui/index.html frameborder=0 marginheight=0 marginwidth=0 width=100% height=900 scrolling=auto target=_top></iframe>"
  );


  $templateCache.put('scripts/app/admin/health/health.html',
    "<div> <h2 translate=health.title>Health Checks</h2> <p> <button type=button class=\"btn btn-primary\" ng-click=refresh()><span class=\"glyphicon glyphicon-refresh\"></span>&nbsp;<span translate=health.refresh.button>Refresh</span> </button> </p> <table id=healthCheck class=\"table table-striped\"> <thead> <tr> <th class=col-md-7 translate=health.table.service>Service Name</th> <th class=\"col-md-2 text-center\" translate=health.table.status>Status</th> <th class=\"col-md-2 text-center\" translate=health.details.details>Details</th> </tr> </thead> <tbody> <tr ng-repeat=\"health in healthData\"> <td>{{'health.indicator.' + baseName(health.name) | translate}} {{subSystemName(health.name)}}</td> <td class=text-center> <span class=label ng-class=getLabelClass(health.status)> {{'health.status.' + health.status | translate}} </span> </td> <td class=text-center> <a class=hand ng-click=showHealth(health) ng-show=\"health.details || health.error\"> <i class=\"glyphicon glyphicon-eye-open\"></i> </a> </td> </tr> </tbody> </table> </div>"
  );


  $templateCache.put('scripts/app/admin/health/health.modal.html',
    "<div class=modal-header> <button aria-label=Close data-dismiss=modal class=close type=button ng-click=cancel()><span aria-hidden=true>&times;</span> </button> <h4 class=modal-title id=showHealthLabel> {{'health.indicator.' + baseName(currentHealth.name) | translate}} {{subSystemName(currentHealth.name)}} </h4> </div> <div class=\"modal-body pad\"> <div ng-show=currentHealth.details> <h4 translate=health.details.properties>Properties</h4> <table class=\"table table-striped\"> <thead> <tr> <th class=\"col-md-6 text-left\" translate=health.details.name>Name</th> <th class=\"col-md-6 text-left\" translate=health.details.value>Value</th> </tr> </thead> <tbody> <tr ng-repeat=\"(k,v) in currentHealth.details\"> <td class=\"col-md-6 text-left\">{{k}}</td> <td class=\"col-md-6 text-left\">{{v}}</td> </tr> </tbody> </table> </div> <div ng-show=currentHealth.error> <h4 translate=health.details.error>Error</h4> <pre>{{currentHealth.error}}</pre> </div> </div> <div class=modal-footer> <button data-dismiss=modal class=\"btn btn-default pull-left\" type=button ng-click=cancel()>Done</button> </div>"
  );


  $templateCache.put('scripts/app/admin/logs/logs.html',
    "<div> <h2 translate=logs.title>Logs</h2> <p translate=logs.nbloggers translate-values=\"{total: '{{ loggers.length }}'}\">There are {{ loggers.length }} loggers.</p> <span translate=logs.filter>Filter</span> <input ng-model=filter class=form-control> <table class=\"table table-condensed table-striped table-bordered table-responsive\"> <thead> <tr title=\"click to order\"> <th ng-click=\"predicate = 'name'; reverse=!reverse\"><span translate=logs.table.name>Name</span></th> <th ng-click=\"predicate = 'level'; reverse=!reverse\"><span translate=logs.table.level>Level</span></th> </tr> </thead> <tr ng-repeat=\"logger in loggers | filter:filter | orderBy:predicate:reverse\"> <td><small>{{logger.name | characters:140}}</small></td> <td> <button ng-click=\"changeLevel(logger.name, 'TRACE')\" ng-class=\"(logger.level=='TRACE') ? 'btn-danger' : 'btn-default'\" class=\"btn btn-default btn-xs\">TRACE</button> <button ng-click=\"changeLevel(logger.name, 'DEBUG')\" ng-class=\"(logger.level=='DEBUG') ? 'btn-warning' : 'btn-default'\" class=\"btn btn-default btn-xs\">DEBUG</button> <button ng-click=\"changeLevel(logger.name, 'INFO')\" ng-class=\"(logger.level=='INFO') ? 'btn-info' : 'btn-default'\" class=\"btn btn-default btn-xs\">INFO</button> <button ng-click=\"changeLevel(logger.name, 'WARN')\" ng-class=\"(logger.level=='WARN') ? 'btn-success' : 'btn-default'\" class=\"btn btn-default btn-xs\">WARN</button> <button ng-click=\"changeLevel(logger.name, 'ERROR')\" ng-class=\"(logger.level=='ERROR') ? 'btn-primary' : 'btn-default'\" class=\"btn btn-default btn-xs\">ERROR</button> </td> </tr> </table> </div>"
  );


  $templateCache.put('scripts/app/admin/metrics/metrics.html',
    "<div> <h2 translate=metrics.title>Application Metrics</h2> <p> <button type=button class=\"btn btn-primary\" ng-click=refresh()><span class=\"glyphicon glyphicon-refresh\"></span>&nbsp;<span translate=metrics.refresh.button>Refresh</span></button> </p> <h3 translate=metrics.jvm.title>JVM Metrics</h3> <div class=row ng-hide=updatingMetrics> <div class=col-md-4> <b translate=metrics.jvm.memory.title>Memory</b> <p><span translate=metrics.jvm.memory.total>Total Memory</span> ({{metrics.gauges['jvm.memory.total.used'].value / 1000000 | number:0}}M / {{metrics.gauges['jvm.memory.total.max'].value / 1000000 | number:0}}M)</p> <progressbar min=0 max=\"metrics.gauges['jvm.memory.total.max'].value\" value=\"metrics.gauges['jvm.memory.total.used'].value\" class=\"progress-striped active\" type=success> <span>{{metrics.gauges['jvm.memory.total.used'].value * 100 / metrics.gauges['jvm.memory.total.max'].value | number:0}}%</span> </progressbar> <p><span translate=metrics.jvm.memory.heap>Heap Memory</span> ({{metrics.gauges['jvm.memory.heap.used'].value / 1000000 | number:0}}M / {{metrics.gauges['jvm.memory.heap.max'].value / 1000000 | number:0}}M)</p> <progressbar min=0 max=\"metrics.gauges['jvm.memory.heap.max'].value\" value=\"metrics.gauges['jvm.memory.heap.used'].value\" class=\"progress-striped active\" type=success> <span>{{metrics.gauges['jvm.memory.heap.used'].value * 100 / metrics.gauges['jvm.memory.heap.max'].value | number:0}}%</span> </progressbar> <p><span translate=metrics.jvm.memory.nonheap>Non-Heap Memory</span> ({{metrics.gauges['jvm.memory.non-heap.used'].value / 1000000 | number:0}}M / {{metrics.gauges['jvm.memory.non-heap.committed'].value / 1000000 | number:0}}M)</p> <progressbar min=0 max=\"metrics.gauges['jvm.memory.non-heap.committed'].value\" value=\"metrics.gauges['jvm.memory.non-heap.used'].value\" class=\"progress-striped active\" type=success> <span>{{metrics.gauges['jvm.memory.non-heap.used'].value * 100 / metrics.gauges['jvm.memory.non-heap.committed'].value | number:0}}%</span> </progressbar> </div> <div class=col-md-4> <b translate=metrics.jvm.threads.title>Threads</b> (Total: {{metrics.gauges['jvm.threads.count'].value}}) <a class=hand ng-click=refreshThreadDumpData() data-toggle=modal data-target=#threadDump><i class=\"glyphicon glyphicon-eye-open\"></i></a> <p><span translate=metrics.jvm.threads.runnable>Runnable</span> {{metrics.gauges['jvm.threads.runnable.count'].value}}</p> <progressbar min=0 value=\"metrics.gauges['jvm.threads.runnable.count'].value\" max=\"metrics.gauges['jvm.threads.count'].value\" class=\"progress-striped active\" type=success> <span>{{metrics.gauges['jvm.threads.runnable.count'].value * 100 / metrics.gauges['jvm.threads.count'].value | number:0}}%</span> </progressbar> <p><span translate=metrics.jvm.threads.timedwaiting>Timed Waiting</span> ({{metrics.gauges['jvm.threads.timed_waiting.count'].value}})</p> <progressbar min=0 value=\"metrics.gauges['jvm.threads.timed_waiting.count'].value\" max=\"metrics.gauges['jvm.threads.count'].value\" class=\"progress-striped active\" type=warning> <span>{{metrics.gauges['jvm.threads.timed_waiting.count'].value * 100 / metrics.gauges['jvm.threads.count'].value | number:0}}%</span> </progressbar> <p><span translate=metrics.jvm.threads.waiting>Waiting</span> ({{metrics.gauges['jvm.threads.waiting.count'].value}})</p> <progressbar min=0 value=\"metrics.gauges['jvm.threads.waiting.count'].value\" max=\"metrics.gauges['jvm.threads.count'].value\" class=\"progress-striped active\" type=warning> <span>{{metrics.gauges['jvm.threads.waiting.count'].value * 100 / metrics.gauges['jvm.threads.count'].value | number:0}}%</span> </progressbar> <p><span translate=metrics.jvm.threads.blocked>Blocked</span> ({{metrics.gauges['jvm.threads.blocked.count'].value}})</p> <progressbar min=0 value=\"metrics.gauges['jvm.threads.blocked.count'].value\" max=\"metrics.gauges['jvm.threads.count'].value\" class=\"progress-striped active\" type=success> <span>{{metrics.gauges['jvm.threads.blocked.count'].value * 100 / metrics.gauges['jvm.threads.count'].value | number:0}}%</span> </progressbar> </div> <div class=col-md-4> <b translate=metrics.jvm.gc.title>Garbage collections</b> <div class=row> <div class=col-md-9 translate=metrics.jvm.gc.marksweepcount>Mark Sweep count</div> <div class=\"col-md-3 text-right\">{{metrics.gauges['jvm.garbage.PS-MarkSweep.count'].value}}</div> </div> <div class=row> <div class=col-md-9 translate=metrics.jvm.gc.marksweeptime>Mark Sweep time</div> <div class=\"col-md-3 text-right\">{{metrics.gauges['jvm.garbage.PS-MarkSweep.time'].value}}ms</div> </div> <div class=row> <div class=col-md-9 translate=metrics.jvm.gc.scavengecount>Scavenge count</div> <div class=\"col-md-3 text-right\">{{metrics.gauges['jvm.garbage.PS-Scavenge.count'].value}}</div> </div> <div class=row> <div class=col-md-9 translate=metrics.jvm.gc.scavengetime>Scavenge time</div> <div class=\"col-md-3 text-right\">{{metrics.gauges['jvm.garbage.PS-Scavenge.time'].value}}ms</div> </div> </div> </div> <div class=\"well well-lg\" ng-show=updatingMetrics translate=metrics.updating>Updating...</div> <h3 translate=metrics.jvm.http.title>HTTP requests (events per second)</h3> <p><span translate=metrics.jvm.http.active>Active requests</span> <b>{{metrics.counters['com.codahale.metrics.servlet.InstrumentedFilter.activeRequests'].count | number:0}}</b> - <span translate=metrics.jvm.http.total>Total requests</span> <b>{{metrics.timers['com.codahale.metrics.servlet.InstrumentedFilter.requests'].count | number:0}}</b></p> <div class=table-responsive> <table class=\"table table-striped\"> <thead> <tr> <th translate=metrics.jvm.http.table.code>Code</th> <th translate=metrics.jvm.http.table.count>Count</th> <th class=text-right translate=metrics.jvm.http.table.mean>Mean</th> <th class=text-right><span translate=metrics.jvm.http.table.average>Average</span> (1 min)</th> <th class=text-right><span translate=metrics.jvm.http.table.average>Average</span> (5 min)</th> <th class=text-right><span translate=metrics.jvm.http.table.average>Average</span> (15 min)</th> </tr> </thead> <tbody> <tr> <td translate=metrics.jvm.http.code.ok>OK</td> <td> <progressbar min=0 max=\"metrics.timers['com.codahale.metrics.servlet.InstrumentedFilter.requests'].count\" value=\"metrics.meters['com.codahale.metrics.servlet.InstrumentedFilter.responseCodes.ok'].count\" class=\"progress-striped active\" type=success> <span>{{metrics.meters['com.codahale.metrics.servlet.InstrumentedFilter.responseCodes.ok'].count}}</span> </progressbar> </td> <td class=text-right> {{metrics.meters['com.codahale.metrics.servlet.InstrumentedFilter.responseCodes.ok'].mean_rate | number:2}} </td> <td class=text-right>{{metrics.meters['com.codahale.metrics.servlet.InstrumentedFilter.responseCodes.ok'].m1_rate | number:2}} </td> <td class=text-right>{{metrics.meters['com.codahale.metrics.servlet.InstrumentedFilter.responseCodes.ok'].m5_rate | number:2}} </td> <td class=text-right> {{metrics.meters['com.codahale.metrics.servlet.InstrumentedFilter.responseCodes.ok'].m15_rate | number:2}} </td> </tr> <tr> <td translate=metrics.jvm.http.code.notfound>Not Found</td> <td> <progressbar min=0 max=\"metrics.timers['com.codahale.metrics.servlet.InstrumentedFilter.requests'].count\" value=\"metrics.meters['com.codahale.metrics.servlet.InstrumentedFilter.responseCodes.notFound'].count\" class=\"progress-striped active\" type=success> <span>{{metrics.meters['com.codahale.metrics.servlet.InstrumentedFilter.responseCodes.notFound'].count}}</span> </progressbar> </td> <td class=text-right> {{metrics.meters['com.codahale.metrics.servlet.InstrumentedFilter.responseCodes.notFound'].mean_rate | number:2}} </td> <td class=text-right> {{metrics.meters['com.codahale.metrics.servlet.InstrumentedFilter.responseCodes.notFound'].m1_rate | number:2}} </td> <td class=text-right> {{metrics.meters['com.codahale.metrics.servlet.InstrumentedFilter.responseCodes.notFound'].m5_rate | number:2}} </td> <td class=text-right> {{metrics.meters['com.codahale.metrics.servlet.InstrumentedFilter.responseCodes.notFound'].m15_rate | number:2}} </td> </tr> <tr> <td translate=metrics.jvm.http.code.servererror>Server error</td> <td> <progressbar min=0 max=\"metrics.timers['com.codahale.metrics.servlet.InstrumentedFilter.requests'].count\" value=\"metrics.meters['com.codahale.metrics.servlet.InstrumentedFilter.responseCodes.serverError'].count\" class=\"progress-striped active\" type=success> <span>{{metrics.meters['com.codahale.metrics.servlet.InstrumentedFilter.responseCodes.serverError'].count}}</span> </progressbar> </td> <td class=text-right> {{metrics.meters['com.codahale.metrics.servlet.InstrumentedFilter.responseCodes.serverError'].mean_rate | number:2}} </td> <td class=text-right> {{metrics.meters['com.codahale.metrics.servlet.InstrumentedFilter.responseCodes.serverError'].m1_rate | number:2}} </td> <td class=text-right> {{metrics.meters['com.codahale.metrics.servlet.InstrumentedFilter.responseCodes.serverError'].m5_rate | number:2}} </td> <td class=text-right> {{metrics.meters['com.codahale.metrics.servlet.InstrumentedFilter.responseCodes.serverError'].m15_rate | number:2}} </td> </tr> </tbody> </table> </div> <h3 translate=metrics.servicesstats.title>Services statistics (time in millisecond)</h3> <div class=table-responsive> <table class=\"table table-striped\"> <thead> <tr> <th translate=metrics.servicesstats.table.name>Service name</th> <th class=text-right translate=metrics.servicesstats.table.count>Count</th> <th class=text-right translate=metrics.servicesstats.table.mean>Mean</th> <th class=text-right translate=metrics.servicesstats.table.min>Min</th> <th class=text-right translate=metrics.servicesstats.table.p50>p50</th> <th class=text-right translate=metrics.servicesstats.table.p75>p75</th> <th class=text-right translate=metrics.servicesstats.table.p95>p95</th> <th class=text-right translate=metrics.servicesstats.table.p99>p99</th> <th class=text-right translate=metrics.servicesstats.table.max>Max</th> </tr> </thead> <tbody> <tr ng-repeat=\"(k, v) in servicesStats\"> <td>{{k}}</td> <td class=text-right>{{v.count}}</td> <td class=text-right>{{v.mean * 1000 | number:0}}</td> <td class=text-right>{{v.min * 1000 | number:0}}</td> <td class=text-right>{{v.p50 * 1000 | number:0}}</td> <td class=text-right>{{v.p75 * 1000 | number:0}}</td> <td class=text-right>{{v.p95 * 1000 | number:0}}</td> <td class=text-right>{{v.p99 * 1000 | number:0}}</td> <td class=text-right>{{v.max * 1000 | number:0}}</td> </tr> </tbody> </table> </div> <h3 translate=metrics.ehcache.title>Ehcache statistics</h3> <div class=table-responsive> <table class=\"table table-striped\"> <thead> <tr> <th translate=metrics.ehcache.cachename>Cache name</th> <th class=text-right translate=metrics.ehcache.objects>Objects</th> <th class=text-right translate=metrics.ehcache.hits>Hits</th> <th class=text-right translate=metrics.ehcache.misses>Misses</th> <th class=text-right translate=metrics.ehcache.evictioncount>Eviction count</th> <th class=text-right translate=metrics.ehcache.mean>Mean get time (ms)</th> </tr> </thead> <tbody> <tr ng-repeat=\"(k, v) in cachesStats\" ng-once> <td>{{v.name}}</td> <td class=text-right>{{metrics.gauges[k + '.objects'].value}}</td> <td class=text-right>{{metrics.gauges[k + '.hits'].value}}</td> <td class=text-right>{{metrics.gauges[k + '.misses'].value}}</td> <td class=text-right>{{metrics.gauges[k + '.eviction-count'].value}}</td> <td class=text-right>{{metrics.gauges[k + '.mean-get-time'].value | number:2}}</td> </tr> </tbody> </table> </div> <h3 translate=metrics.datasource.title ng-show=\"metrics.gauges['HikariPool-0.pool.TotalConnections'].value > 0\">DataSource statistics (time in millisecond)</h3> <div class=table-responsive ng-show=\"metrics.gauges['HikariPool-0.pool.TotalConnections'].value > 0\"> <table class=\"table table-striped\"> <thead> <tr> <th><span translate=metrics.datasource.usage>Usage</span> ({{metrics.gauges['HikariPool-0.pool.ActiveConnections'].value}} / {{metrics.gauges['HikariPool-0.pool.TotalConnections'].value}})</th> <th class=text-right translate=metrics.datasource.count>Count</th> <th class=text-right translate=metrics.datasource.mean>Mean</th> <th class=text-right translate=metrics.datasource.min>Min</th> <th class=text-right translate=metrics.datasource.p50>p50</th> <th class=text-right translate=metrics.datasource.p75>p75</th> <th class=text-right translate=metrics.datasource.p95>p95</th> <th class=text-right translate=metrics.datasource.p99>p99</th> <th class=text-right translate=metrics.datasource.max>Max</th> </tr> </thead> <tbody> <tr> <td> <div class=\"progress progress-striped\"> <progressbar min=0 max=\"metrics.gauges['HikariPool-0.pool.TotalConnections'].value\" value=\"metrics.gauges['HikariPool-0.pool.ActiveConnections'].value\" class=\"progress-striped active\" type=success> <span>{{metrics.gauges['HikariPool-0.pool.ActiveConnections'].value * 100 / metrics.gauges['HikariPool-0.pool.TotalConnections'].value | number:0}}%</span> </progressbar> </div> </td> <td class=text-right>{{metrics.histograms['HikariPool-0.pool.Usage'].count}}</td> <td class=text-right>{{metrics.histograms['HikariPool-0.pool.Usage'].mean | number:2}}</td> <td class=text-right>{{metrics.histograms['HikariPool-0.pool.Usage'].min | number:2}}</td> <td class=text-right>{{metrics.histograms['HikariPool-0.pool.Usage'].p50 | number:2}}</td> <td class=text-right>{{metrics.histograms['HikariPool-0.pool.Usage'].p75 | number:2}}</td> <td class=text-right>{{metrics.histograms['HikariPool-0.pool.Usage'].p95 | number:2}}</td> <td class=text-right>{{metrics.histograms['HikariPool-0.pool.Usage'].p99 | number:2}}</td> <td class=text-right>{{metrics.histograms['HikariPool-0.pool.Usage'].max | number:2}}</td> </tr> </tbody> </table> </div> </div>"
  );


  $templateCache.put('scripts/app/admin/metrics/metrics.modal.html',
    "<!-- Modal used to display the threads dump --> <div class=modal-header> <button type=button class=close ng-click=cancel()>&times;</button> <h4 class=modal-title translate=metrics.jvm.threads.dump.title>Threads dump</h4> </div> <div class=\"modal-body pad\"> <span class=\"label label-primary\" ng-click=\"threadDumpFilter = {}\">All&nbsp;<span class=badge>{{threadDumpAll}}</span></span>&nbsp; <span class=\"label label-success\" ng-click=\"threadDumpFilter = {threadState: 'RUNNABLE'}\">Runnable&nbsp;<span class=badge>{{threadDumpRunnable}}</span></span>&nbsp; <span class=\"label label-info\" ng-click=\"threadDumpFilter = {threadState: 'WAITING'}\">Waiting&nbsp;<span class=badge>{{threadDumpWaiting}}</span></span>&nbsp; <span class=\"label label-warning\" ng-click=\"threadDumpFilter = {threadState: 'TIMED_WAITING'}\">Timed Waiting&nbsp;<span class=badge>{{threadDumpTimedWaiting}}</span></span>&nbsp; <span class=\"label label-danger\" ng-click=\"threadDumpFilter = {threadState: 'BLOCKED'}\">Blocked&nbsp;<span class=badge>{{threadDumpBlocked}}</span></span>&nbsp; <div class=voffset2>&nbsp;</div> Filter <input ng-model=threadDumpFilter class=form-control> <div class=\"row pad\" ng-repeat=\"(k, v) in threadDump | filter:threadDumpFilter\"> <h5><span class=label ng-class=getLabelClass(v.threadState)>{{v.threadState}}</span>&nbsp;{{v.threadName}} (ID {{v.threadId}}) <a ng-click=\"show = !show\"> <span ng-show=!show translate=metrics.jvm.threads.dump.show>Show StackTrace</span> <span ng-show=show translate=metrics.jvm.threads.dump.hide>Hide StackTrace</span> </a> </h5> <div class=well ng-show=show> <div ng-repeat=\"(stK, stV) in v.stackTrace\"> {{stV.className}}.{{stV.methodName}}({{stV.fileName}}:{{stV.lineNumber}}) <span class=voffset1></span> </div> </div> <table class=\"table table-condensed\"> <thead> <tr> <th class=text-right translate=metrics.jvm.threads.dump.blockedtime>Blocked Time</th> <th class=text-right translate=metrics.jvm.threads.dump.blockedcount>Blocked Count</th> <th class=text-right translate=metrics.jvm.threads.dump.waitedtime>Waited Time</th> <th class=text-right translate=metrics.jvm.threads.dump.waitedcount>Waited Count</th> <th translate=metrics.jvm.threads.dump.lockname>Lock Name</th> </tr> </thead> <tbody> <tr> <td>{{v.blockedTime}}</td> <td>{{v.blockedCount}}</td> <td>{{v.waitedTime}}</td> <td>{{v.waitedCount}}</td> <td>{{v.lockName}}</td> </tr> </tbody> </table> </div> </div> <div class=modal-footer> <button type=button class=\"btn btn-default pull-left\" data-dismiss=modal ng-click=cancel()>Done</button> </div>"
  );


  $templateCache.put('scripts/app/admin/user-management/user-management-detail.html',
    "<div> <h2><span translate=user-management.detail.title>User</span> \"{{user.login}}\"</h2> <div class=table-responsive> <table class=\"table table-striped\"> <thead> <tr> <th translate=entity.detail.field>Field</th> <th translate=entity.detail.value>Value</th> </tr> </thead> <tbody> <tr> <td> <span translate=user-management.login>Login</span> </td> <td> <input class=\"input-sm form-control\" value={{user.login}} readonly> </td> </tr> <tr> <td> <span translate=user-management.firstName>FirstName</span> </td> <td> <input class=\"input-sm form-control\" value={{user.firstName}} readonly> </td> </tr> <tr> <td> <span translate=user-management.lastName>LastName</span> </td> <td> <input class=\"input-sm form-control\" value={{user.lastName}} readonly> </td> </tr> <tr> <td> <span translate=user-management.email>Email</span> </td> <td> <input class=\"input-sm form-control\" value={{user.email}} readonly> </td> </tr> <tr> <td> <span translate=user-management.activated>Activated</span> </td> <td> <input class=\"input-sm form-control\" value={{user.activated}} readonly> </td> </tr> <tr> <td> <span translate=user-management.langKey>LangKey</span> </td> <td> <input class=\"input-sm form-control\" value={{user.langKey}} readonly> </td> </tr> <tr> <td> <span translate=user-management.createdBy>CreatedBy</span> </td> <td> <input class=\"input-sm form-control\" value={{user.createdBy}} readonly> </td> </tr> <tr> <td> <span translate=user-management.createdDate>CreatedDate</span> </td> <td> <input class=\"input-sm form-control\" value=\"{{user.createdDate | date:'dd/MM/yy HH:mm' }}\" readonly> </td> </tr> <tr> <td> <span translate=user-management.lastModifiedBy>LastModifiedBy</span> </td> <td> <input class=\"input-sm form-control\" value={{user.lastModifiedBy}} readonly> </td> </tr> <tr> <td> <span translate=user-management.lastModifiedDate>LastCreatedDate</span> </td> <td> <input class=\"input-sm form-control\" value=\"{{user.lastModifiedDate | date:'dd/MM/yy HH:mm'}}\" readonly> </td> </tr> <tr> <td> <span translate=user-management.profiles>Profiles</span> </td> <td> <ul class=list-unstyled> <li ng-repeat=\"authority in user.authorities\"><span>{{authority}}</span></li> </ul> </td> </tr> </tbody> </table> </div> <button type=submit ui-sref=user-management class=\"btn btn-info\"> <span class=\"glyphicon glyphicon-arrow-left\"></span>&nbsp;<span translate=entity.action.back> Back</span> </button> </div>"
  );


  $templateCache.put('scripts/app/admin/user-management/user-management.html',
    "<div> <div class=row> <h2 class=col-sm-6 translate=user-management.home.title>Users</h2> </div> <div class=\"modal fade\" id=saveUserModal tabindex=-1 role=dialog aria-labelledby=myUserLabel aria-hidden=true> <div class=modal-dialog> <div class=modal-content> <form name=editForm role=form novalidate ng-submit=save() show-validation> <div class=modal-header> <button type=button class=close data-dismiss=modal aria-hidden=true ng-click=clear()>&times;</button> <h4 class=modal-title id=myUserLabel translate=user-management.home.createOrEditLabel> Create or edit a User</h4> </div> <div class=modal-body> <div class=form-group> <label translate=global.field.id>ID</label> <input class=form-control name=id ng-model=user.id readonly> </div> <div class=form-group> <label translate=user-management.login>Login</label> <input class=form-control name=login ng-model=user.login ng-required=\"user.id == null\" ng-maxlength=50> <div ng-show=editForm.login.$invalid> <p class=help-block ng-show=editForm.login.$error.required translate=entity.validation.required> This field is required. </p> <p class=help-block ng-show=editForm.login.$error.maxlength translate=entity.validation.maxlength translate-value-max=50> This field cannot be longer than 50 characters. </p> </div> </div> <div class=form-group> <label translate=user-management.firstName>FirstName</label> <input class=form-control name=firstName ng-model=user.firstName ng-maxlength=50> <div ng-show=editForm.firstName.$invalid> <p class=help-block ng-show=editForm.firstName.$error.maxlength translate=entity.validation.maxlength translate-value-max=50> This field cannot be longer than 50 characters. </p> </div> </div> <div class=form-group> <label translate=user-management.lastName>LastName</label> <input class=form-control name=lastName ng-model=user.lastName ng-maxlength=50> <div ng-show=editForm.lastName.$invalid> <p class=help-block ng-show=editForm.lastName.$error.maxlength translate=entity.validation.maxlength translate-value-max=50> This field cannot be longer than 50 characters. </p> </div> </div> <div class=form-group> <label translate=user-management.email>Email</label> <input class=form-control name=email ng-model=user.email required ng-maxlength=100> <div ng-show=editForm.email.$invalid> <p class=help-block ng-show=editForm.email.$error.required translate=entity.validation.required> This field is required. </p> <p class=help-block ng-show=editForm.email.$error.maxlength translate=entity.validation.maxlength translate-value-max=100> This field cannot be longer than 100 characters. </p> </div> </div> <div class=form-group> <label for=activated> <input type=checkbox id=activated ng-model=user.activated> <span translate=user-management.activated>Activated</span> </label> </div> <div class=form-group> <label translate=user-management.langKey>LangKey</label> <select class=form-control name=langKey ng-model=user.langKey ng-options=\"language as language for language in languages track by language\"> </select> </div> <div class=form-group> <label translate=user-management.profiles>Profiles</label> <select class=form-control multiple name=authority ng-model=user.authorities ng-options=\"authority for authority in authorities\"> </select> </div> </div> <div class=modal-footer> <button type=button class=\"btn btn-default\" data-dismiss=modal ng-click=clear()> <span class=\"glyphicon glyphicon-ban-circle\"></span>&nbsp;<span translate=entity.action.cancel>Cancel</span> </button> <button type=submit ng-disabled=editForm.$invalid class=\"btn btn-primary\"> <span class=\"glyphicon glyphicon-save\"></span>&nbsp;<span translate=entity.action.save>Save</span> </button> </div> </form> </div> </div> </div> <div class=\"modal fade\" id=deleteUserConfirmation> <div class=modal-dialog> <div class=modal-content> <form name=deleteForm ng-submit=confirmDelete(user.id)> <div class=modal-header> <button type=button class=close data-dismiss=modal aria-hidden=true ng-click=clear()>&times;</button> <h4 class=modal-title translate=entity.delete.title>Confirm delete operation</h4> </div> <div class=modal-body> <p translate=user-management.delete.question translate-values=\"{login: '{{user.login}}'}\">Are you sure you want to delete this User?</p> </div> <div class=modal-footer> <button type=button class=\"btn btn-default\" data-dismiss=modal ng-click=clear()> <span class=\"glyphicon glyphicon-ban-circle\"></span>&nbsp;<span translate=entity.action.cancel>Cancel</span> </button> <button type=submit ng-disabled=deleteForm.$invalid class=\"btn btn-danger\"> <span class=\"glyphicon glyphicon-remove-circle\"></span>&nbsp;<span translate=entity.action.delete>Delete</span> </button> </div> </form> </div> </div> </div> <div class=table-responsive> <table class=\"table table-striped\"> <thead> <tr> <th translate=global.field.id>ID</th> <th translate=user-management.login>Login</th> <th translate=user-management.email>Email</th> <th></th> <th translate=user-management.langKey>LangKey</th> <th translate=user-management.profiles>Profiles</th> <th translate=user-management.createdDate>CreatedDate</th> <th translate=user-management.lastModifiedBy>LastModifiedBy</th> <th translate=user-management.lastModifiedDate>LastModifiedDate</th> <th></th> </tr> </thead> <tbody> <tr ng-repeat=\"user in users track by user.id\"> <td><a ui-sref=user-management-detail({login:user.login})>{{user.id}}</a></td> <td>{{user.login}}</td> <td>{{user.email}}</td> <td> <span class=\"label label-danger\" ng-click=\"setActive(user, true)\" ng-show=!user.activated translate=user-management.deactivated style=\"cursor: pointer\">Desactivated</span> <span class=\"label label-success\" ng-click=\"setActive(user, false)\" ng-show=user.activated translate=user-management.activated style=\"cursor: pointer\">Activated</span> </td> <td>{{user.langKey}}</td> <td> <div ng-repeat=\"authority in user.authorities\"> <span class=\"label label-info\">{{ authority }}</span> </div> </td> <td>{{user.createdDate | date:'dd/MM/yy HH:mm'}}</td> <td>{{user.lastModifiedBy}}</td> <td>{{user.lastModifiedDate | date:'dd/MM/yy HH:mm'}}</td> <td class=text-right> <button type=submit ui-sref=user-management-detail({login:user.login}) class=\"btn btn-info btn-sm\"> <span class=\"glyphicon glyphicon-eye-open\"></span> </button> <button type=submit ng-click=showUpdate(user.login) class=\"btn btn-primary btn-sm\"> <span class=\"glyphicon glyphicon-pencil\"></span> </button> </td> </tr> </tbody> </table> <nav> <ul class=pagination> <li ng-show=\"links['first'] >= 0\" ng-click=\"loadPage(links['first'])\"><a>&lt;&lt;</a></li> <li ng-show=\"page > 0\" ng-click=\"loadPage(links['prev'] || 0)\"><a>&lt;</a></li> <li ng-show=\"page > 1\" ng-click=\"loadPage(page - 2)\"><a>{{page - 1}}</a></li> <li ng-show=\"page > 0\" ng-click=\"loadPage(page - 1)\"><a>{{page}}</a></li> <li class=active><a>{{page + 1}}</a></li> <li ng-show=\"page < links['last']\" ng-click=\"loadPage(page + 1)\"><a>{{page + 2}}</a></li> <li ng-show=\"page < links['last'] - 1\" ng-click=\"loadPage(page + 2)\"><a>{{page + 3}}</a></li> <li ng-show=\"links['next']\" ng-click=\"loadPage(links['next'])\"><a>&gt;</a></li> <li ng-show=\"links['last'] > 0\" ng-click=\"loadPage(links['last'])\"><a>&gt;&gt;</a></li> </ul> </nav> </div> </div>"
  );


  $templateCache.put('scripts/app/entities/app/app-detail.html',
    "<div> <h2><span translate=dgdtoolApp.app.detail.title>App</span> {{app.id}}</h2> <div class=table-responsive> <table class=\"table table-striped\"> <thead> <tr> <th translate=entity.detail.field>Field</th> <th translate=entity.detail.value>Value</th> </tr> </thead> <tbody> <tr> <td> <span translate=dgdtoolApp.app.app_name>App_name</span> </td> <td> <span class=form-control-static>{{app.app_name}}</span> </td> </tr> <tr> <td> <span translate=dgdtoolApp.app.app_type_id>App_type_id</span> </td> <td> <span class=form-control-static>{{app.app_type_id}}</span> </td> </tr> <tr> <td> <span translate=dgdtoolApp.app.description>Description</span> </td> <td> <span class=form-control-static>{{app.description}}</span> </td> </tr> <tr> <td> <span translate=dgdtoolApp.app.status_id>Status_id</span> </td> <td> <span class=form-control-static>{{app.status_id}}</span> </td> </tr> <tr> <td> <span translate=dgdtoolApp.app.created_by>Created_by</span> </td> <td> <span class=form-control-static>{{app.created_by}}</span> </td> </tr> <tr> <td> <span translate=dgdtoolApp.app.created_date>Created_date</span> </td> <td> <span class=form-control-static>{{app.created_date | date:'mediumDate'}}</span> </td> </tr> <tr> <td> <span translate=dgdtoolApp.app.modified_by>Modified_by</span> </td> <td> <span class=form-control-static>{{app.modified_by}}</span> </td> </tr> <tr> <td> <span translate=dgdtoolApp.app.modified_date>Modified_date</span> </td> <td> <span class=form-control-static>{{app.modified_date | date:'mediumDate'}}</span> </td> </tr> </tbody> </table> </div> <button type=submit onclick=window.history.back() class=\"btn btn-info\"> <span class=\"glyphicon glyphicon-arrow-left\"></span>&nbsp;<span translate=entity.action.back> Back</span> </button> </div>"
  );


  $templateCache.put('scripts/app/entities/app/app-dialog.html',
    "<form name=editForm role=form novalidate ng-submit=save() show-validation> <div class=modal-header> <button type=button class=close data-dismiss=modal aria-hidden=true ng-click=clear()>&times;</button> <h4 class=modal-title id=myAppLabel translate=dgdtoolApp.app.home.createOrEditLabel>Create or edit a App</h4> </div> <div class=modal-body> <jh-alert-error></jh-alert-error> <div class=form-group> <label for=id translate=global.field.id>ID</label> <input class=form-control id=id name=id ng-model=app.id readonly/> </div> <div class=form-group> <label translate=dgdtoolApp.app.app_name for=field_app_name>App_name</label> <input class=form-control name=app_name id=field_app_name ng-model=app.app_name required ng-maxlength=\"200\"/> <div ng-show=editForm.app_name.$invalid> <p class=help-block ng-show=editForm.app_name.$error.required translate=entity.validation.required> This field is required. </p> <p class=help-block ng-show=editForm.app_name.$error.maxlength translate=entity.validation.maxlength translate-value-max=200> This field cannot be longer than 200 characters. </p> </div> </div> <div class=form-group> <label translate=dgdtoolApp.app.app_type_id for=field_app_type_id>App_type_id</label> <input type=number class=form-control name=app_type_id id=field_app_type_id ng-model=app.app_type_id required/> <div ng-show=editForm.app_type_id.$invalid> <p class=help-block ng-show=editForm.app_type_id.$error.required translate=entity.validation.required> This field is required. </p> <p class=help-block ng-show=editForm.app_type_id.$error.number translate=entity.validation.number> This field should be a number. </p> </div> </div> <div class=form-group> <label translate=dgdtoolApp.app.description for=field_description>Description</label> <input class=form-control name=description id=field_description ng-model=app.description required ng-maxlength=\"2000\"/> <div ng-show=editForm.description.$invalid> <p class=help-block ng-show=editForm.description.$error.required translate=entity.validation.required> This field is required. </p> <p class=help-block ng-show=editForm.description.$error.maxlength translate=entity.validation.maxlength translate-value-max=2000> This field cannot be longer than 2000 characters. </p> </div> </div> <div class=form-group> <label translate=dgdtoolApp.app.status_id for=field_status_id>Status_id</label> <input type=number class=form-control name=status_id id=field_status_id ng-model=app.status_id required/> <div ng-show=editForm.status_id.$invalid> <p class=help-block ng-show=editForm.status_id.$error.required translate=entity.validation.required> This field is required. </p> <p class=help-block ng-show=editForm.status_id.$error.number translate=entity.validation.number> This field should be a number. </p> </div> </div> <div class=form-group> <label translate=dgdtoolApp.app.created_by for=field_created_by>Created_by</label> <input class=form-control name=created_by id=field_created_by ng-model=app.created_by required ng-maxlength=\"200\"/> <div ng-show=editForm.created_by.$invalid> <p class=help-block ng-show=editForm.created_by.$error.required translate=entity.validation.required> This field is required. </p> <p class=help-block ng-show=editForm.created_by.$error.maxlength translate=entity.validation.maxlength translate-value-max=200> This field cannot be longer than 200 characters. </p> </div> </div> <div class=form-group> <label translate=dgdtoolApp.app.created_date for=field_created_date>Created_date</label> <input type=date class=form-control name=created_date id=field_created_date ng-model=app.created_date required/> <div ng-show=editForm.created_date.$invalid> <p class=help-block ng-show=editForm.created_date.$error.required translate=entity.validation.required> This field is required. </p> </div> </div> <div class=form-group> <label translate=dgdtoolApp.app.modified_by for=field_modified_by>Modified_by</label> <input class=form-control name=modified_by id=field_modified_by ng-model=app.modified_by required ng-maxlength=\"200\"/> <div ng-show=editForm.modified_by.$invalid> <p class=help-block ng-show=editForm.modified_by.$error.required translate=entity.validation.required> This field is required. </p> <p class=help-block ng-show=editForm.modified_by.$error.maxlength translate=entity.validation.maxlength translate-value-max=200> This field cannot be longer than 200 characters. </p> </div> </div> <div class=form-group> <label translate=dgdtoolApp.app.modified_date for=field_modified_date>Modified_date</label> <input type=date class=form-control name=modified_date id=field_modified_date ng-model=app.modified_date required/> <div ng-show=editForm.modified_date.$invalid> <p class=help-block ng-show=editForm.modified_date.$error.required translate=entity.validation.required> This field is required. </p> </div> </div> </div> <div class=modal-footer> <button type=button class=\"btn btn-default\" data-dismiss=modal ng-click=clear()> <span class=\"glyphicon glyphicon-ban-circle\"></span>&nbsp;<span translate=entity.action.cancel>Cancel</span> </button> <button type=submit ng-disabled=\"editForm.$invalid || editForm.$submitted\" class=\"btn btn-primary\"> <span class=\"glyphicon glyphicon-save\"></span>&nbsp;<span translate=entity.action.save>Save</span> </button> </div> </form>"
  );


  $templateCache.put('scripts/app/entities/app/apps.html',
    "<div> <h2 translate=dgdtoolApp.app.home.title>Apps</h2> <jh-alert></jh-alert> <div class=container> <div class=row> <div class=col-md-4> <button class=\"btn btn-primary\" ui-sref=app.new> <span class=\"glyphicon glyphicon-flash\"></span> <span translate=dgdtoolApp.app.home.createLabel>Create a new App</span> </button> </div> <div class=col-md-8> <form name=searchForm class=form-inline> <div class=form-group> <input class=form-control ng-model=searchQuery id=searchQuery placeholder=query> </div> <button class=\"btn btn-info\" ng-click=search()><span class=\"glyphicon glyphicon-search\"></span> <span>Search a App</span> </button> </form> </div> </div> </div> <div class=\"modal fade\" id=deleteAppConfirmation> <div class=modal-dialog> <div class=modal-content> <form name=deleteForm ng-submit=confirmDelete(app.id)> <div class=modal-header> <button type=button class=close data-dismiss=modal aria-hidden=true ng-click=clear()>&times;</button> <h4 class=modal-title translate=entity.delete.title>Confirm delete operation</h4> </div> <div class=modal-body> <p translate=dgdtoolApp.app.delete.question translate-values=\"{id: '{{app.id}}'}\">Are you sure you want to delete this App?</p> </div> <div class=modal-footer> <button type=button class=\"btn btn-default\" data-dismiss=modal ng-click=clear()> <span class=\"glyphicon glyphicon-ban-circle\"></span>&nbsp;<span translate=entity.action.cancel>Cancel</span> </button> <button type=submit ng-disabled=deleteForm.$invalid class=\"btn btn-danger\"> <span class=\"glyphicon glyphicon-remove-circle\"></span>&nbsp;<span translate=entity.action.delete>Delete</span> </button> </div> </form> </div> </div> </div> <div class=table-responsive> <table class=\"table table-striped\"> <thead> <tr> <th translate=global.field.id>ID</th> <th translate=dgdtoolApp.app.app_name>App_name</th> <th translate=dgdtoolApp.app.app_type_id>App_type_id</th> <th translate=dgdtoolApp.app.description>Description</th> <th translate=dgdtoolApp.app.status_id>Status_id</th> <th translate=dgdtoolApp.app.created_by>Created_by</th> <th translate=dgdtoolApp.app.created_date>Created_date</th> <th translate=dgdtoolApp.app.modified_by>Modified_by</th> <th translate=dgdtoolApp.app.modified_date>Modified_date</th> <th></th> </tr> </thead> <tbody> <tr ng-repeat=\"app in apps track by app.id\"> <td><a ui-sref=app.detail({id:app.id})>{{app.id}}</a></td> <td>{{app.app_name}}</td> <td>{{app.app_type_id}}</td> <td>{{app.description}}</td> <td>{{app.status_id}}</td> <td>{{app.created_by}}</td> <td>{{app.created_date | date:'mediumDate'}}</td> <td>{{app.modified_by}}</td> <td>{{app.modified_date | date:'mediumDate'}}</td> <td> <button type=submit ui-sref=app.detail({id:app.id}) class=\"btn btn-info btn-sm\"> <span class=\"glyphicon glyphicon-eye-open\"></span>&nbsp;<span translate=entity.action.view> View</span> </button> <button type=submit ui-sref=app.edit({id:app.id}) class=\"btn btn-primary btn-sm\"> <span class=\"glyphicon glyphicon-pencil\"></span>&nbsp;<span translate=entity.action.edit> Edit</span> </button> <button type=submit ng-click=delete(app.id) class=\"btn btn-danger btn-sm\"> <span class=\"glyphicon glyphicon-remove-circle\"></span>&nbsp;<span translate=entity.action.delete> Delete</span> </button> </td> </tr> </tbody> </table> <nav> <ul class=pager> <li ng-show=\"links['first'] >= 0\" ng-click=\"loadPage(links['first'])\"><a href=#>&lt;&lt;</a></li> <li ng-show=\"page > 0\" ng-click=\"loadPage(links['prev'] || 0)\"><a href=#>&lt;</a></li> <li ng-show=\"links['next']\" ng-click=\"loadPage(links['next'])\"><a href=#>&gt;</a></li> <li ng-show=\"links['last'] > 0\" ng-click=\"loadPage(links['last'])\"><a href=#>&gt;&gt;</a></li> </ul> </nav> </div> </div>"
  );


  $templateCache.put('scripts/app/entities/app_type/app_type-detail.html',
    "<div> <h2><span translate=dgdtoolApp.app_type.detail.title>App_type</span> {{app_type.id}}</h2> <div class=table-responsive> <table class=\"table table-striped\"> <thead> <tr> <th translate=entity.detail.field>Field</th> <th translate=entity.detail.value>Value</th> </tr> </thead> <tbody> <tr> <td> <span translate=dgdtoolApp.app_type.app_type_name>App_type_name</span> </td> <td> <span class=form-control-static>{{app_type.app_type_name}}</span> </td> </tr> <tr> <td> <span translate=dgdtoolApp.app_type.description>Description</span> </td> <td> <span class=form-control-static>{{app_type.description}}</span> </td> </tr> <tr> <td> <span translate=dgdtoolApp.app_type.status_id>Status_id</span> </td> <td> <span class=form-control-static>{{app_type.status_id}}</span> </td> </tr> <tr> <td> <span translate=dgdtoolApp.app_type.created_by>Created_by</span> </td> <td> <span class=form-control-static>{{app_type.created_by}}</span> </td> </tr> <tr> <td> <span translate=dgdtoolApp.app_type.created_date>Created_date</span> </td> <td> <span class=form-control-static>{{app_type.created_date | date:'mediumDate'}}</span> </td> </tr> <tr> <td> <span translate=dgdtoolApp.app_type.modified_by>Modified_by</span> </td> <td> <span class=form-control-static>{{app_type.modified_by}}</span> </td> </tr> <tr> <td> <span translate=dgdtoolApp.app_type.modified_date>Modified_date</span> </td> <td> <span class=form-control-static>{{app_type.modified_date | date:'mediumDate'}}</span> </td> </tr> </tbody> </table> </div> <button type=submit onclick=window.history.back() class=\"btn btn-info\"> <span class=\"glyphicon glyphicon-arrow-left\"></span>&nbsp;<span translate=entity.action.back> Back</span> </button> </div>"
  );


  $templateCache.put('scripts/app/entities/app_type/app_type-dialog.html',
    "<form name=editForm role=form novalidate ng-submit=save() show-validation> <div class=modal-header> <button type=button class=close data-dismiss=modal aria-hidden=true ng-click=clear()>&times;</button> <h4 class=modal-title id=myApp_typeLabel translate=dgdtoolApp.app_type.home.createOrEditLabel>Create or edit a App_type</h4> </div> <div class=modal-body> <jh-alert-error></jh-alert-error> <div class=form-group> <label for=id translate=global.field.id>ID</label> <input class=form-control id=id name=id ng-model=app_type.id readonly/> </div> <div class=form-group> <label translate=dgdtoolApp.app_type.app_type_name for=field_app_type_name>App_type_name</label> <input class=form-control name=app_type_name id=field_app_type_name ng-model=app_type.app_type_name required ng-maxlength=\"200\"/> <div ng-show=editForm.app_type_name.$invalid> <p class=help-block ng-show=editForm.app_type_name.$error.required translate=entity.validation.required> This field is required. </p> <p class=help-block ng-show=editForm.app_type_name.$error.maxlength translate=entity.validation.maxlength translate-value-max=200> This field cannot be longer than 200 characters. </p> </div> </div> <div class=form-group> <label translate=dgdtoolApp.app_type.description for=field_description>Description</label> <input class=form-control name=description id=field_description ng-model=app_type.description required ng-maxlength=\"2000\"/> <div ng-show=editForm.description.$invalid> <p class=help-block ng-show=editForm.description.$error.required translate=entity.validation.required> This field is required. </p> <p class=help-block ng-show=editForm.description.$error.maxlength translate=entity.validation.maxlength translate-value-max=2000> This field cannot be longer than 2000 characters. </p> </div> </div> <div class=form-group> <label translate=dgdtoolApp.app_type.status_id for=field_status_id>Status_id</label> <input type=number class=form-control name=status_id id=field_status_id ng-model=app_type.status_id required/> <div ng-show=editForm.status_id.$invalid> <p class=help-block ng-show=editForm.status_id.$error.required translate=entity.validation.required> This field is required. </p> <p class=help-block ng-show=editForm.status_id.$error.number translate=entity.validation.number> This field should be a number. </p> </div> </div> <div class=form-group> <label translate=dgdtoolApp.app_type.created_by for=field_created_by>Created_by</label> <input class=form-control name=created_by id=field_created_by ng-model=app_type.created_by required ng-maxlength=\"200\"/> <div ng-show=editForm.created_by.$invalid> <p class=help-block ng-show=editForm.created_by.$error.required translate=entity.validation.required> This field is required. </p> <p class=help-block ng-show=editForm.created_by.$error.maxlength translate=entity.validation.maxlength translate-value-max=200> This field cannot be longer than 200 characters. </p> </div> </div> <div class=form-group> <label translate=dgdtoolApp.app_type.created_date for=field_created_date>Created_date</label> <input type=date class=form-control name=created_date id=field_created_date ng-model=app_type.created_date required/> <div ng-show=editForm.created_date.$invalid> <p class=help-block ng-show=editForm.created_date.$error.required translate=entity.validation.required> This field is required. </p> </div> </div> <div class=form-group> <label translate=dgdtoolApp.app_type.modified_by for=field_modified_by>Modified_by</label> <input class=form-control name=modified_by id=field_modified_by ng-model=app_type.modified_by required ng-maxlength=\"200\"/> <div ng-show=editForm.modified_by.$invalid> <p class=help-block ng-show=editForm.modified_by.$error.required translate=entity.validation.required> This field is required. </p> <p class=help-block ng-show=editForm.modified_by.$error.maxlength translate=entity.validation.maxlength translate-value-max=200> This field cannot be longer than 200 characters. </p> </div> </div> <div class=form-group> <label translate=dgdtoolApp.app_type.modified_date for=field_modified_date>Modified_date</label> <input type=date class=form-control name=modified_date id=field_modified_date ng-model=app_type.modified_date required/> <div ng-show=editForm.modified_date.$invalid> <p class=help-block ng-show=editForm.modified_date.$error.required translate=entity.validation.required> This field is required. </p> </div> </div> </div> <div class=modal-footer> <button type=button class=\"btn btn-default\" data-dismiss=modal ng-click=clear()> <span class=\"glyphicon glyphicon-ban-circle\"></span>&nbsp;<span translate=entity.action.cancel>Cancel</span> </button> <button type=submit ng-disabled=\"editForm.$invalid || editForm.$submitted\" class=\"btn btn-primary\"> <span class=\"glyphicon glyphicon-save\"></span>&nbsp;<span translate=entity.action.save>Save</span> </button> </div> </form>"
  );


  $templateCache.put('scripts/app/entities/app_type/app_types.html',
    "<div> <h2 translate=dgdtoolApp.app_type.home.title>App_types</h2> <jh-alert></jh-alert> <div class=container> <div class=row> <div class=col-md-4> <button class=\"btn btn-primary\" ui-sref=app_type.new> <span class=\"glyphicon glyphicon-flash\"></span> <span translate=dgdtoolApp.app_type.home.createLabel>Create a new App_type</span> </button> </div> <div class=col-md-8> <form name=searchForm class=form-inline> <div class=form-group> <input class=form-control ng-model=searchQuery id=searchQuery placeholder=query> </div> <button class=\"btn btn-info\" ng-click=search()><span class=\"glyphicon glyphicon-search\"></span> <span>Search a App_type</span> </button> </form> </div> </div> </div> <div class=\"modal fade\" id=deleteApp_typeConfirmation> <div class=modal-dialog> <div class=modal-content> <form name=deleteForm ng-submit=confirmDelete(app_type.id)> <div class=modal-header> <button type=button class=close data-dismiss=modal aria-hidden=true ng-click=clear()>&times;</button> <h4 class=modal-title translate=entity.delete.title>Confirm delete operation</h4> </div> <div class=modal-body> <p translate=dgdtoolApp.app_type.delete.question translate-values=\"{id: '{{app_type.id}}'}\">Are you sure you want to delete this App_type?</p> </div> <div class=modal-footer> <button type=button class=\"btn btn-default\" data-dismiss=modal ng-click=clear()> <span class=\"glyphicon glyphicon-ban-circle\"></span>&nbsp;<span translate=entity.action.cancel>Cancel</span> </button> <button type=submit ng-disabled=deleteForm.$invalid class=\"btn btn-danger\"> <span class=\"glyphicon glyphicon-remove-circle\"></span>&nbsp;<span translate=entity.action.delete>Delete</span> </button> </div> </form> </div> </div> </div> <div class=table-responsive> <table class=\"table table-striped\"> <thead> <tr> <th translate=global.field.id>ID</th> <th translate=dgdtoolApp.app_type.app_type_name>App_type_name</th> <th translate=dgdtoolApp.app_type.description>Description</th> <th translate=dgdtoolApp.app_type.status_id>Status_id</th> <th translate=dgdtoolApp.app_type.created_by>Created_by</th> <th translate=dgdtoolApp.app_type.created_date>Created_date</th> <th translate=dgdtoolApp.app_type.modified_by>Modified_by</th> <th translate=dgdtoolApp.app_type.modified_date>Modified_date</th> <th></th> </tr> </thead> <tbody> <tr ng-repeat=\"app_type in app_types track by app_type.id\"> <td><a ui-sref=app_type.detail({id:app_type.id})>{{app_type.id}}</a></td> <td>{{app_type.app_type_name}}</td> <td>{{app_type.description}}</td> <td>{{app_type.status_id}}</td> <td>{{app_type.created_by}}</td> <td>{{app_type.created_date | date:'mediumDate'}}</td> <td>{{app_type.modified_by}}</td> <td>{{app_type.modified_date | date:'mediumDate'}}</td> <td> <button type=submit ui-sref=app_type.detail({id:app_type.id}) class=\"btn btn-info btn-sm\"> <span class=\"glyphicon glyphicon-eye-open\"></span>&nbsp;<span translate=entity.action.view> View</span> </button> <button type=submit ui-sref=app_type.edit({id:app_type.id}) class=\"btn btn-primary btn-sm\"> <span class=\"glyphicon glyphicon-pencil\"></span>&nbsp;<span translate=entity.action.edit> Edit</span> </button> <button type=submit ng-click=delete(app_type.id) class=\"btn btn-danger btn-sm\"> <span class=\"glyphicon glyphicon-remove-circle\"></span>&nbsp;<span translate=entity.action.delete> Delete</span> </button> </td> </tr> </tbody> </table> <nav> <ul class=pager> <li ng-show=\"links['first'] >= 0\" ng-click=\"loadPage(links['first'])\"><a href=#>&lt;&lt;</a></li> <li ng-show=\"page > 0\" ng-click=\"loadPage(links['prev'] || 0)\"><a href=#>&lt;</a></li> <li ng-show=\"links['next']\" ng-click=\"loadPage(links['next'])\"><a href=#>&gt;</a></li> <li ng-show=\"links['last'] > 0\" ng-click=\"loadPage(links['last'])\"><a href=#>&gt;&gt;</a></li> </ul> </nav> </div> </div>"
  );


  $templateCache.put('scripts/app/entities/asset_type/asset_type-detail.html',
    "<div> <h2><span translate=dgdtoolApp.asset_type.detail.title>Asset_type</span> {{asset_type.id}}</h2> <div class=table-responsive> <table class=\"table table-striped\"> <thead> <tr> <th translate=entity.detail.field>Field</th> <th translate=entity.detail.value>Value</th> </tr> </thead> <tbody> <tr> <td> <span translate=dgdtoolApp.asset_type.asset_type_name>Asset_type_name</span> </td> <td> <span class=form-control-static>{{asset_type.asset_type_name}}</span> </td> </tr> <tr> <td> <span translate=dgdtoolApp.asset_type.description>Description</span> </td> <td> <span class=form-control-static>{{asset_type.description}}</span> </td> </tr> <tr> <td> <span translate=dgdtoolApp.asset_type.status_id>Status_id</span> </td> <td> <span class=form-control-static>{{asset_type.status_id}}</span> </td> </tr> <tr> <td> <span translate=dgdtoolApp.asset_type.created_by>Created_by</span> </td> <td> <span class=form-control-static>{{asset_type.created_by}}</span> </td> </tr> <tr> <td> <span translate=dgdtoolApp.asset_type.created_date>Created_date</span> </td> <td> <span class=form-control-static>{{asset_type.created_date | date:'mediumDate'}}</span> </td> </tr> <tr> <td> <span translate=dgdtoolApp.asset_type.modified_by>Modified_by</span> </td> <td> <span class=form-control-static>{{asset_type.modified_by}}</span> </td> </tr> <tr> <td> <span translate=dgdtoolApp.asset_type.modified_date>Modified_date</span> </td> <td> <span class=form-control-static>{{asset_type.modified_date | date:'mediumDate'}}</span> </td> </tr> </tbody> </table> </div> <button type=submit onclick=window.history.back() class=\"btn btn-info\"> <span class=\"glyphicon glyphicon-arrow-left\"></span>&nbsp;<span translate=entity.action.back> Back</span> </button> </div>"
  );


  $templateCache.put('scripts/app/entities/asset_type/asset_type-dialog.html',
    "<form name=editForm role=form novalidate ng-submit=save() show-validation> <div class=modal-header> <button type=button class=close data-dismiss=modal aria-hidden=true ng-click=clear()>&times;</button> <h4 class=modal-title id=myAsset_typeLabel translate=dgdtoolApp.asset_type.home.createOrEditLabel>Create or edit a Asset_type</h4> </div> <div class=modal-body> <jh-alert-error></jh-alert-error> <div class=form-group> <label for=id translate=global.field.id>ID</label> <input class=form-control id=id name=id ng-model=asset_type.id readonly/> </div> <div class=form-group> <label translate=dgdtoolApp.asset_type.asset_type_name for=field_asset_type_name>Asset_type_name</label> <input class=form-control name=asset_type_name id=field_asset_type_name ng-model=asset_type.asset_type_name required ng-maxlength=\"200\"/> <div ng-show=editForm.asset_type_name.$invalid> <p class=help-block ng-show=editForm.asset_type_name.$error.required translate=entity.validation.required> This field is required. </p> <p class=help-block ng-show=editForm.asset_type_name.$error.maxlength translate=entity.validation.maxlength translate-value-max=200> This field cannot be longer than 200 characters. </p> </div> </div> <div class=form-group> <label translate=dgdtoolApp.asset_type.description for=field_description>Description</label> <input class=form-control name=description id=field_description ng-model=asset_type.description required ng-maxlength=\"2000\"/> <div ng-show=editForm.description.$invalid> <p class=help-block ng-show=editForm.description.$error.required translate=entity.validation.required> This field is required. </p> <p class=help-block ng-show=editForm.description.$error.maxlength translate=entity.validation.maxlength translate-value-max=2000> This field cannot be longer than 2000 characters. </p> </div> </div> <div class=form-group> <label translate=dgdtoolApp.asset_type.status_id for=field_status_id>Status_id</label> <input type=number class=form-control name=status_id id=field_status_id ng-model=asset_type.status_id required/> <div ng-show=editForm.status_id.$invalid> <p class=help-block ng-show=editForm.status_id.$error.required translate=entity.validation.required> This field is required. </p> <p class=help-block ng-show=editForm.status_id.$error.number translate=entity.validation.number> This field should be a number. </p> </div> </div> <div class=form-group> <label translate=dgdtoolApp.asset_type.created_by for=field_created_by>Created_by</label> <input class=form-control name=created_by id=field_created_by ng-model=asset_type.created_by required ng-maxlength=\"200\"/> <div ng-show=editForm.created_by.$invalid> <p class=help-block ng-show=editForm.created_by.$error.required translate=entity.validation.required> This field is required. </p> <p class=help-block ng-show=editForm.created_by.$error.maxlength translate=entity.validation.maxlength translate-value-max=200> This field cannot be longer than 200 characters. </p> </div> </div> <div class=form-group> <label translate=dgdtoolApp.asset_type.created_date for=field_created_date>Created_date</label> <input type=date class=form-control name=created_date id=field_created_date ng-model=asset_type.created_date required/> <div ng-show=editForm.created_date.$invalid> <p class=help-block ng-show=editForm.created_date.$error.required translate=entity.validation.required> This field is required. </p> </div> </div> <div class=form-group> <label translate=dgdtoolApp.asset_type.modified_by for=field_modified_by>Modified_by</label> <input class=form-control name=modified_by id=field_modified_by ng-model=asset_type.modified_by required ng-maxlength=\"200\"/> <div ng-show=editForm.modified_by.$invalid> <p class=help-block ng-show=editForm.modified_by.$error.required translate=entity.validation.required> This field is required. </p> <p class=help-block ng-show=editForm.modified_by.$error.maxlength translate=entity.validation.maxlength translate-value-max=200> This field cannot be longer than 200 characters. </p> </div> </div> <div class=form-group> <label translate=dgdtoolApp.asset_type.modified_date for=field_modified_date>Modified_date</label> <input type=date class=form-control name=modified_date id=field_modified_date ng-model=asset_type.modified_date required/> <div ng-show=editForm.modified_date.$invalid> <p class=help-block ng-show=editForm.modified_date.$error.required translate=entity.validation.required> This field is required. </p> </div> </div> </div> <div class=modal-footer> <button type=button class=\"btn btn-default\" data-dismiss=modal ng-click=clear()> <span class=\"glyphicon glyphicon-ban-circle\"></span>&nbsp;<span translate=entity.action.cancel>Cancel</span> </button> <button type=submit ng-disabled=\"editForm.$invalid || editForm.$submitted\" class=\"btn btn-primary\"> <span class=\"glyphicon glyphicon-save\"></span>&nbsp;<span translate=entity.action.save>Save</span> </button> </div> </form>"
  );


  $templateCache.put('scripts/app/entities/asset_type/asset_types.html',
    "<div> <h2 translate=dgdtoolApp.asset_type.home.title>Asset_types</h2> <jh-alert></jh-alert> <div class=container> <div class=row> <div class=col-md-4> <button class=\"btn btn-primary\" ui-sref=asset_type.new> <span class=\"glyphicon glyphicon-flash\"></span> <span translate=dgdtoolApp.asset_type.home.createLabel>Create a new Asset_type</span> </button> </div> <div class=col-md-8> <form name=searchForm class=form-inline> <div class=form-group> <input class=form-control ng-model=searchQuery id=searchQuery placeholder=query> </div> <button class=\"btn btn-info\" ng-click=search()><span class=\"glyphicon glyphicon-search\"></span> <span>Search a Asset_type</span> </button> </form> </div> </div> </div> <div class=\"modal fade\" id=deleteAsset_typeConfirmation> <div class=modal-dialog> <div class=modal-content> <form name=deleteForm ng-submit=confirmDelete(asset_type.id)> <div class=modal-header> <button type=button class=close data-dismiss=modal aria-hidden=true ng-click=clear()>&times;</button> <h4 class=modal-title translate=entity.delete.title>Confirm delete operation</h4> </div> <div class=modal-body> <p translate=dgdtoolApp.asset_type.delete.question translate-values=\"{id: '{{asset_type.id}}'}\">Are you sure you want to delete this Asset_type?</p> </div> <div class=modal-footer> <button type=button class=\"btn btn-default\" data-dismiss=modal ng-click=clear()> <span class=\"glyphicon glyphicon-ban-circle\"></span>&nbsp;<span translate=entity.action.cancel>Cancel</span> </button> <button type=submit ng-disabled=deleteForm.$invalid class=\"btn btn-danger\"> <span class=\"glyphicon glyphicon-remove-circle\"></span>&nbsp;<span translate=entity.action.delete>Delete</span> </button> </div> </form> </div> </div> </div> <div class=table-responsive> <table class=\"table table-striped\"> <thead> <tr> <th translate=global.field.id>ID</th> <th translate=dgdtoolApp.asset_type.asset_type_name>Asset_type_name</th> <th translate=dgdtoolApp.asset_type.description>Description</th> <th translate=dgdtoolApp.asset_type.status_id>Status_id</th> <th translate=dgdtoolApp.asset_type.created_by>Created_by</th> <th translate=dgdtoolApp.asset_type.created_date>Created_date</th> <th translate=dgdtoolApp.asset_type.modified_by>Modified_by</th> <th translate=dgdtoolApp.asset_type.modified_date>Modified_date</th> <th></th> </tr> </thead> <tbody> <tr ng-repeat=\"asset_type in asset_types track by asset_type.id\"> <td><a ui-sref=asset_type.detail({id:asset_type.id})>{{asset_type.id}}</a></td> <td>{{asset_type.asset_type_name}}</td> <td>{{asset_type.description}}</td> <td>{{asset_type.status_id}}</td> <td>{{asset_type.created_by}}</td> <td>{{asset_type.created_date | date:'mediumDate'}}</td> <td>{{asset_type.modified_by}}</td> <td>{{asset_type.modified_date | date:'mediumDate'}}</td> <td> <button type=submit ui-sref=asset_type.detail({id:asset_type.id}) class=\"btn btn-info btn-sm\"> <span class=\"glyphicon glyphicon-eye-open\"></span>&nbsp;<span translate=entity.action.view> View</span> </button> <button type=submit ui-sref=asset_type.edit({id:asset_type.id}) class=\"btn btn-primary btn-sm\"> <span class=\"glyphicon glyphicon-pencil\"></span>&nbsp;<span translate=entity.action.edit> Edit</span> </button> <button type=submit ng-click=delete(asset_type.id) class=\"btn btn-danger btn-sm\"> <span class=\"glyphicon glyphicon-remove-circle\"></span>&nbsp;<span translate=entity.action.delete> Delete</span> </button> </td> </tr> </tbody> </table> <nav> <ul class=pager> <li ng-show=\"links['first'] >= 0\" ng-click=\"loadPage(links['first'])\"><a href=#>&lt;&lt;</a></li> <li ng-show=\"page > 0\" ng-click=\"loadPage(links['prev'] || 0)\"><a href=#>&lt;</a></li> <li ng-show=\"links['next']\" ng-click=\"loadPage(links['next'])\"><a href=#>&gt;</a></li> <li ng-show=\"links['last'] > 0\" ng-click=\"loadPage(links['last'])\"><a href=#>&gt;&gt;</a></li> </ul> </nav> </div> </div>"
  );


  $templateCache.put('scripts/app/entities/data_state/data_state-detail.html',
    "<div> <h2><span translate=dgdtoolApp.data_state.detail.title>Data_state</span> {{data_state.id}}</h2> <div class=table-responsive> <table class=\"table table-striped\"> <thead> <tr> <th translate=entity.detail.field>Field</th> <th translate=entity.detail.value>Value</th> </tr> </thead> <tbody> <tr> <td> <span translate=dgdtoolApp.data_state.data_state_name>Data_state_name</span> </td> <td> <span class=form-control-static>{{data_state.data_state_name}}</span> </td> </tr> <tr> <td> <span translate=dgdtoolApp.data_state.description>Description</span> </td> <td> <span class=form-control-static>{{data_state.description}}</span> </td> </tr> <tr> <td> <span translate=dgdtoolApp.data_state.status_id>Status_id</span> </td> <td> <span class=form-control-static>{{data_state.status_id}}</span> </td> </tr> <tr> <td> <span translate=dgdtoolApp.data_state.created_by>Created_by</span> </td> <td> <span class=form-control-static>{{data_state.created_by}}</span> </td> </tr> <tr> <td> <span translate=dgdtoolApp.data_state.created_date>Created_date</span> </td> <td> <span class=form-control-static>{{data_state.created_date | date:'mediumDate'}}</span> </td> </tr> <tr> <td> <span translate=dgdtoolApp.data_state.modified_by>Modified_by</span> </td> <td> <span class=form-control-static>{{data_state.modified_by}}</span> </td> </tr> <tr> <td> <span translate=dgdtoolApp.data_state.modified_date>Modified_date</span> </td> <td> <span class=form-control-static>{{data_state.modified_date | date:'mediumDate'}}</span> </td> </tr> </tbody> </table> </div> <button type=submit onclick=window.history.back() class=\"btn btn-info\"> <span class=\"glyphicon glyphicon-arrow-left\"></span>&nbsp;<span translate=entity.action.back> Back</span> </button> </div>"
  );


  $templateCache.put('scripts/app/entities/data_state/data_state-dialog.html',
    "<form name=editForm role=form novalidate ng-submit=save() show-validation> <div class=modal-header> <button type=button class=close data-dismiss=modal aria-hidden=true ng-click=clear()>&times;</button> <h4 class=modal-title id=myData_stateLabel translate=dgdtoolApp.data_state.home.createOrEditLabel>Create or edit a Data_state</h4> </div> <div class=modal-body> <jh-alert-error></jh-alert-error> <div class=form-group> <label for=id translate=global.field.id>ID</label> <input class=form-control id=id name=id ng-model=data_state.id readonly/> </div> <div class=form-group> <label translate=dgdtoolApp.data_state.data_state_name for=field_data_state_name>Data_state_name</label> <input class=form-control name=data_state_name id=field_data_state_name ng-model=data_state.data_state_name required ng-maxlength=\"200\"/> <div ng-show=editForm.data_state_name.$invalid> <p class=help-block ng-show=editForm.data_state_name.$error.required translate=entity.validation.required> This field is required. </p> <p class=help-block ng-show=editForm.data_state_name.$error.maxlength translate=entity.validation.maxlength translate-value-max=200> This field cannot be longer than 200 characters. </p> </div> </div> <div class=form-group> <label translate=dgdtoolApp.data_state.description for=field_description>Description</label> <input class=form-control name=description id=field_description ng-model=data_state.description required ng-maxlength=\"2000\"/> <div ng-show=editForm.description.$invalid> <p class=help-block ng-show=editForm.description.$error.required translate=entity.validation.required> This field is required. </p> <p class=help-block ng-show=editForm.description.$error.maxlength translate=entity.validation.maxlength translate-value-max=2000> This field cannot be longer than 2000 characters. </p> </div> </div> <div class=form-group> <label translate=dgdtoolApp.data_state.status_id for=field_status_id>Status_id</label> <input type=number class=form-control name=status_id id=field_status_id ng-model=data_state.status_id required/> <div ng-show=editForm.status_id.$invalid> <p class=help-block ng-show=editForm.status_id.$error.required translate=entity.validation.required> This field is required. </p> <p class=help-block ng-show=editForm.status_id.$error.number translate=entity.validation.number> This field should be a number. </p> </div> </div> <div class=form-group> <label translate=dgdtoolApp.data_state.created_by for=field_created_by>Created_by</label> <input class=form-control name=created_by id=field_created_by ng-model=data_state.created_by required ng-maxlength=\"200\"/> <div ng-show=editForm.created_by.$invalid> <p class=help-block ng-show=editForm.created_by.$error.required translate=entity.validation.required> This field is required. </p> <p class=help-block ng-show=editForm.created_by.$error.maxlength translate=entity.validation.maxlength translate-value-max=200> This field cannot be longer than 200 characters. </p> </div> </div> <div class=form-group> <label translate=dgdtoolApp.data_state.created_date for=field_created_date>Created_date</label> <input type=date class=form-control name=created_date id=field_created_date ng-model=data_state.created_date required/> <div ng-show=editForm.created_date.$invalid> <p class=help-block ng-show=editForm.created_date.$error.required translate=entity.validation.required> This field is required. </p> </div> </div> <div class=form-group> <label translate=dgdtoolApp.data_state.modified_by for=field_modified_by>Modified_by</label> <input class=form-control name=modified_by id=field_modified_by ng-model=data_state.modified_by required ng-maxlength=\"200\"/> <div ng-show=editForm.modified_by.$invalid> <p class=help-block ng-show=editForm.modified_by.$error.required translate=entity.validation.required> This field is required. </p> <p class=help-block ng-show=editForm.modified_by.$error.maxlength translate=entity.validation.maxlength translate-value-max=200> This field cannot be longer than 200 characters. </p> </div> </div> <div class=form-group> <label translate=dgdtoolApp.data_state.modified_date for=field_modified_date>Modified_date</label> <input type=date class=form-control name=modified_date id=field_modified_date ng-model=data_state.modified_date required/> <div ng-show=editForm.modified_date.$invalid> <p class=help-block ng-show=editForm.modified_date.$error.required translate=entity.validation.required> This field is required. </p> </div> </div> </div> <div class=modal-footer> <button type=button class=\"btn btn-default\" data-dismiss=modal ng-click=clear()> <span class=\"glyphicon glyphicon-ban-circle\"></span>&nbsp;<span translate=entity.action.cancel>Cancel</span> </button> <button type=submit ng-disabled=\"editForm.$invalid || editForm.$submitted\" class=\"btn btn-primary\"> <span class=\"glyphicon glyphicon-save\"></span>&nbsp;<span translate=entity.action.save>Save</span> </button> </div> </form>"
  );


  $templateCache.put('scripts/app/entities/data_state/data_states.html',
    "<div> <h2 translate=dgdtoolApp.data_state.home.title>Data_states</h2> <jh-alert></jh-alert> <div class=container> <div class=row> <div class=col-md-4> <button class=\"btn btn-primary\" ui-sref=data_state.new> <span class=\"glyphicon glyphicon-flash\"></span> <span translate=dgdtoolApp.data_state.home.createLabel>Create a new Data_state</span> </button> </div> <div class=col-md-8> <form name=searchForm class=form-inline> <div class=form-group> <input class=form-control ng-model=searchQuery id=searchQuery placeholder=query> </div> <button class=\"btn btn-info\" ng-click=search()><span class=\"glyphicon glyphicon-search\"></span> <span>Search a Data_state</span> </button> </form> </div> </div> </div> <div class=\"modal fade\" id=deleteData_stateConfirmation> <div class=modal-dialog> <div class=modal-content> <form name=deleteForm ng-submit=confirmDelete(data_state.id)> <div class=modal-header> <button type=button class=close data-dismiss=modal aria-hidden=true ng-click=clear()>&times;</button> <h4 class=modal-title translate=entity.delete.title>Confirm delete operation</h4> </div> <div class=modal-body> <p translate=dgdtoolApp.data_state.delete.question translate-values=\"{id: '{{data_state.id}}'}\">Are you sure you want to delete this Data_state?</p> </div> <div class=modal-footer> <button type=button class=\"btn btn-default\" data-dismiss=modal ng-click=clear()> <span class=\"glyphicon glyphicon-ban-circle\"></span>&nbsp;<span translate=entity.action.cancel>Cancel</span> </button> <button type=submit ng-disabled=deleteForm.$invalid class=\"btn btn-danger\"> <span class=\"glyphicon glyphicon-remove-circle\"></span>&nbsp;<span translate=entity.action.delete>Delete</span> </button> </div> </form> </div> </div> </div> <div class=table-responsive> <table class=\"table table-striped\"> <thead> <tr> <th translate=global.field.id>ID</th> <th translate=dgdtoolApp.data_state.data_state_name>Data_state_name</th> <th translate=dgdtoolApp.data_state.description>Description</th> <th translate=dgdtoolApp.data_state.status_id>Status_id</th> <th translate=dgdtoolApp.data_state.created_by>Created_by</th> <th translate=dgdtoolApp.data_state.created_date>Created_date</th> <th translate=dgdtoolApp.data_state.modified_by>Modified_by</th> <th translate=dgdtoolApp.data_state.modified_date>Modified_date</th> <th></th> </tr> </thead> <tbody> <tr ng-repeat=\"data_state in data_states track by data_state.id\"> <td><a ui-sref=data_state.detail({id:data_state.id})>{{data_state.id}}</a></td> <td>{{data_state.data_state_name}}</td> <td>{{data_state.description}}</td> <td>{{data_state.status_id}}</td> <td>{{data_state.created_by}}</td> <td>{{data_state.created_date | date:'mediumDate'}}</td> <td>{{data_state.modified_by}}</td> <td>{{data_state.modified_date | date:'mediumDate'}}</td> <td> <button type=submit ui-sref=data_state.detail({id:data_state.id}) class=\"btn btn-info btn-sm\"> <span class=\"glyphicon glyphicon-eye-open\"></span>&nbsp;<span translate=entity.action.view> View</span> </button> <button type=submit ui-sref=data_state.edit({id:data_state.id}) class=\"btn btn-primary btn-sm\"> <span class=\"glyphicon glyphicon-pencil\"></span>&nbsp;<span translate=entity.action.edit> Edit</span> </button> <button type=submit ng-click=delete(data_state.id) class=\"btn btn-danger btn-sm\"> <span class=\"glyphicon glyphicon-remove-circle\"></span>&nbsp;<span translate=entity.action.delete> Delete</span> </button> </td> </tr> </tbody> </table> <nav> <ul class=pager> <li ng-show=\"links['first'] >= 0\" ng-click=\"loadPage(links['first'])\"><a href=#>&lt;&lt;</a></li> <li ng-show=\"page > 0\" ng-click=\"loadPage(links['prev'] || 0)\"><a href=#>&lt;</a></li> <li ng-show=\"links['next']\" ng-click=\"loadPage(links['next'])\"><a href=#>&gt;</a></li> <li ng-show=\"links['last'] > 0\" ng-click=\"loadPage(links['last'])\"><a href=#>&gt;&gt;</a></li> </ul> </nav> </div> </div>"
  );


  $templateCache.put('scripts/app/entities/data_type/data_type-detail.html',
    "<div> <h2><span translate=dgdtoolApp.data_type.detail.title>Data_type</span> {{data_type.id}}</h2> <div class=table-responsive> <table class=\"table table-striped\"> <thead> <tr> <th translate=entity.detail.field>Field</th> <th translate=entity.detail.value>Value</th> </tr> </thead> <tbody> <tr> <td> <span translate=dgdtoolApp.data_type.data_type_name>Data_type_name</span> </td> <td> <span class=form-control-static>{{data_type.data_type_name}}</span> </td> </tr> <tr> <td> <span translate=dgdtoolApp.data_type.description>Description</span> </td> <td> <span class=form-control-static>{{data_type.description}}</span> </td> </tr> <tr> <td> <span translate=dgdtoolApp.data_type.status_id>Status_id</span> </td> <td> <span class=form-control-static>{{data_type.status_id}}</span> </td> </tr> <tr> <td> <span translate=dgdtoolApp.data_type.created_by>Created_by</span> </td> <td> <span class=form-control-static>{{data_type.created_by}}</span> </td> </tr> <tr> <td> <span translate=dgdtoolApp.data_type.created_date>Created_date</span> </td> <td> <span class=form-control-static>{{data_type.created_date | date:'mediumDate'}}</span> </td> </tr> <tr> <td> <span translate=dgdtoolApp.data_type.modified_by>Modified_by</span> </td> <td> <span class=form-control-static>{{data_type.modified_by}}</span> </td> </tr> <tr> <td> <span translate=dgdtoolApp.data_type.modified_date>Modified_date</span> </td> <td> <span class=form-control-static>{{data_type.modified_date | date:'mediumDate'}}</span> </td> </tr> </tbody> </table> </div> <button type=submit onclick=window.history.back() class=\"btn btn-info\"> <span class=\"glyphicon glyphicon-arrow-left\"></span>&nbsp;<span translate=entity.action.back> Back</span> </button> </div>"
  );


  $templateCache.put('scripts/app/entities/data_type/data_type-dialog.html',
    "<form name=editForm role=form novalidate ng-submit=save() show-validation> <div class=modal-header> <button type=button class=close data-dismiss=modal aria-hidden=true ng-click=clear()>&times;</button> <h4 class=modal-title id=myData_typeLabel translate=dgdtoolApp.data_type.home.createOrEditLabel>Create or edit a Data_type</h4> </div> <div class=modal-body> <jh-alert-error></jh-alert-error> <div class=form-group> <label for=id translate=global.field.id>ID</label> <input class=form-control id=id name=id ng-model=data_type.id readonly/> </div> <div class=form-group> <label translate=dgdtoolApp.data_type.data_type_name for=field_data_type_name>Data_type_name</label> <input class=form-control name=data_type_name id=field_data_type_name ng-model=data_type.data_type_name required ng-maxlength=\"200\"/> <div ng-show=editForm.data_type_name.$invalid> <p class=help-block ng-show=editForm.data_type_name.$error.required translate=entity.validation.required> This field is required. </p> <p class=help-block ng-show=editForm.data_type_name.$error.maxlength translate=entity.validation.maxlength translate-value-max=200> This field cannot be longer than 200 characters. </p> </div> </div> <div class=form-group> <label translate=dgdtoolApp.data_type.description for=field_description>Description</label> <input class=form-control name=description id=field_description ng-model=data_type.description required ng-maxlength=\"2000\"/> <div ng-show=editForm.description.$invalid> <p class=help-block ng-show=editForm.description.$error.required translate=entity.validation.required> This field is required. </p> <p class=help-block ng-show=editForm.description.$error.maxlength translate=entity.validation.maxlength translate-value-max=2000> This field cannot be longer than 2000 characters. </p> </div> </div> <div class=form-group> <label translate=dgdtoolApp.data_type.status_id for=field_status_id>Status_id</label> <input type=number class=form-control name=status_id id=field_status_id ng-model=data_type.status_id required/> <div ng-show=editForm.status_id.$invalid> <p class=help-block ng-show=editForm.status_id.$error.required translate=entity.validation.required> This field is required. </p> <p class=help-block ng-show=editForm.status_id.$error.number translate=entity.validation.number> This field should be a number. </p> </div> </div> <div class=form-group> <label translate=dgdtoolApp.data_type.created_by for=field_created_by>Created_by</label> <input class=form-control name=created_by id=field_created_by ng-model=data_type.created_by required ng-maxlength=\"200\"/> <div ng-show=editForm.created_by.$invalid> <p class=help-block ng-show=editForm.created_by.$error.required translate=entity.validation.required> This field is required. </p> <p class=help-block ng-show=editForm.created_by.$error.maxlength translate=entity.validation.maxlength translate-value-max=200> This field cannot be longer than 200 characters. </p> </div> </div> <div class=form-group> <label translate=dgdtoolApp.data_type.created_date for=field_created_date>Created_date</label> <input type=date class=form-control name=created_date id=field_created_date ng-model=data_type.created_date required/> <div ng-show=editForm.created_date.$invalid> <p class=help-block ng-show=editForm.created_date.$error.required translate=entity.validation.required> This field is required. </p> </div> </div> <div class=form-group> <label translate=dgdtoolApp.data_type.modified_by for=field_modified_by>Modified_by</label> <input class=form-control name=modified_by id=field_modified_by ng-model=data_type.modified_by required ng-maxlength=\"200\"/> <div ng-show=editForm.modified_by.$invalid> <p class=help-block ng-show=editForm.modified_by.$error.required translate=entity.validation.required> This field is required. </p> <p class=help-block ng-show=editForm.modified_by.$error.maxlength translate=entity.validation.maxlength translate-value-max=200> This field cannot be longer than 200 characters. </p> </div> </div> <div class=form-group> <label translate=dgdtoolApp.data_type.modified_date for=field_modified_date>Modified_date</label> <input type=date class=form-control name=modified_date id=field_modified_date ng-model=data_type.modified_date required/> <div ng-show=editForm.modified_date.$invalid> <p class=help-block ng-show=editForm.modified_date.$error.required translate=entity.validation.required> This field is required. </p> </div> </div> </div> <div class=modal-footer> <button type=button class=\"btn btn-default\" data-dismiss=modal ng-click=clear()> <span class=\"glyphicon glyphicon-ban-circle\"></span>&nbsp;<span translate=entity.action.cancel>Cancel</span> </button> <button type=submit ng-disabled=\"editForm.$invalid || editForm.$submitted\" class=\"btn btn-primary\"> <span class=\"glyphicon glyphicon-save\"></span>&nbsp;<span translate=entity.action.save>Save</span> </button> </div> </form>"
  );


  $templateCache.put('scripts/app/entities/data_type/data_types.html',
    "<div> <h2 translate=dgdtoolApp.data_type.home.title>Data_types</h2> <jh-alert></jh-alert> <div class=container> <div class=row> <div class=col-md-4> <button class=\"btn btn-primary\" ui-sref=data_type.new> <span class=\"glyphicon glyphicon-flash\"></span> <span translate=dgdtoolApp.data_type.home.createLabel>Create a new Data_type</span> </button> </div> <div class=col-md-8> <form name=searchForm class=form-inline> <div class=form-group> <input class=form-control ng-model=searchQuery id=searchQuery placeholder=query> </div> <button class=\"btn btn-info\" ng-click=search()><span class=\"glyphicon glyphicon-search\"></span> <span>Search a Data_type</span> </button> </form> </div> </div> </div> <div class=\"modal fade\" id=deleteData_typeConfirmation> <div class=modal-dialog> <div class=modal-content> <form name=deleteForm ng-submit=confirmDelete(data_type.id)> <div class=modal-header> <button type=button class=close data-dismiss=modal aria-hidden=true ng-click=clear()>&times;</button> <h4 class=modal-title translate=entity.delete.title>Confirm delete operation</h4> </div> <div class=modal-body> <p translate=dgdtoolApp.data_type.delete.question translate-values=\"{id: '{{data_type.id}}'}\">Are you sure you want to delete this Data_type?</p> </div> <div class=modal-footer> <button type=button class=\"btn btn-default\" data-dismiss=modal ng-click=clear()> <span class=\"glyphicon glyphicon-ban-circle\"></span>&nbsp;<span translate=entity.action.cancel>Cancel</span> </button> <button type=submit ng-disabled=deleteForm.$invalid class=\"btn btn-danger\"> <span class=\"glyphicon glyphicon-remove-circle\"></span>&nbsp;<span translate=entity.action.delete>Delete</span> </button> </div> </form> </div> </div> </div> <div class=table-responsive> <table class=\"table table-striped\"> <thead> <tr> <th translate=global.field.id>ID</th> <th translate=dgdtoolApp.data_type.data_type_name>Data_type_name</th> <th translate=dgdtoolApp.data_type.description>Description</th> <th translate=dgdtoolApp.data_type.status_id>Status_id</th> <th translate=dgdtoolApp.data_type.created_by>Created_by</th> <th translate=dgdtoolApp.data_type.created_date>Created_date</th> <th translate=dgdtoolApp.data_type.modified_by>Modified_by</th> <th translate=dgdtoolApp.data_type.modified_date>Modified_date</th> <th></th> </tr> </thead> <tbody> <tr ng-repeat=\"data_type in data_types track by data_type.id\"> <td><a ui-sref=data_type.detail({id:data_type.id})>{{data_type.id}}</a></td> <td>{{data_type.data_type_name}}</td> <td>{{data_type.description}}</td> <td>{{data_type.status_id}}</td> <td>{{data_type.created_by}}</td> <td>{{data_type.created_date | date:'mediumDate'}}</td> <td>{{data_type.modified_by}}</td> <td>{{data_type.modified_date | date:'mediumDate'}}</td> <td> <button type=submit ui-sref=data_type.detail({id:data_type.id}) class=\"btn btn-info btn-sm\"> <span class=\"glyphicon glyphicon-eye-open\"></span>&nbsp;<span translate=entity.action.view> View</span> </button> <button type=submit ui-sref=data_type.edit({id:data_type.id}) class=\"btn btn-primary btn-sm\"> <span class=\"glyphicon glyphicon-pencil\"></span>&nbsp;<span translate=entity.action.edit> Edit</span> </button> <button type=submit ng-click=delete(data_type.id) class=\"btn btn-danger btn-sm\"> <span class=\"glyphicon glyphicon-remove-circle\"></span>&nbsp;<span translate=entity.action.delete> Delete</span> </button> </td> </tr> </tbody> </table> <nav> <ul class=pager> <li ng-show=\"links['first'] >= 0\" ng-click=\"loadPage(links['first'])\"><a href=#>&lt;&lt;</a></li> <li ng-show=\"page > 0\" ng-click=\"loadPage(links['prev'] || 0)\"><a href=#>&lt;</a></li> <li ng-show=\"links['next']\" ng-click=\"loadPage(links['next'])\"><a href=#>&gt;</a></li> <li ng-show=\"links['last'] > 0\" ng-click=\"loadPage(links['last'])\"><a href=#>&gt;&gt;</a></li> </ul> </nav> </div> </div>"
  );


  $templateCache.put('scripts/app/entities/datasource_type/datasource_type-detail.html',
    "<div> <h2><span translate=dgdtoolApp.datasource_type.detail.title>Datasource_type</span> {{datasource_type.id}}</h2> <div class=table-responsive> <table class=\"table table-striped\"> <thead> <tr> <th translate=entity.detail.field>Field</th> <th translate=entity.detail.value>Value</th> </tr> </thead> <tbody> <tr> <td> <span translate=dgdtoolApp.datasource_type.datasource_type_name>Datasource_type_name</span> </td> <td> <span class=form-control-static>{{datasource_type.datasource_type_name}}</span> </td> </tr> <tr> <td> <span translate=dgdtoolApp.datasource_type.description>Description</span> </td> <td> <span class=form-control-static>{{datasource_type.description}}</span> </td> </tr> <tr> <td> <span translate=dgdtoolApp.datasource_type.status_id>Status_id</span> </td> <td> <span class=form-control-static>{{datasource_type.status_id}}</span> </td> </tr> <tr> <td> <span translate=dgdtoolApp.datasource_type.created_by>Created_by</span> </td> <td> <span class=form-control-static>{{datasource_type.created_by}}</span> </td> </tr> <tr> <td> <span translate=dgdtoolApp.datasource_type.created_date>Created_date</span> </td> <td> <span class=form-control-static>{{datasource_type.created_date | date:'mediumDate'}}</span> </td> </tr> <tr> <td> <span translate=dgdtoolApp.datasource_type.modified_by>Modified_by</span> </td> <td> <span class=form-control-static>{{datasource_type.modified_by}}</span> </td> </tr> <tr> <td> <span translate=dgdtoolApp.datasource_type.modified_date>Modified_date</span> </td> <td> <span class=form-control-static>{{datasource_type.modified_date | date:'mediumDate'}}</span> </td> </tr> </tbody> </table> </div> <button type=submit onclick=window.history.back() class=\"btn btn-info\"> <span class=\"glyphicon glyphicon-arrow-left\"></span>&nbsp;<span translate=entity.action.back> Back</span> </button> </div>"
  );


  $templateCache.put('scripts/app/entities/datasource_type/datasource_type-dialog.html',
    "<form name=editForm role=form novalidate ng-submit=save() show-validation> <div class=modal-header> <button type=button class=close data-dismiss=modal aria-hidden=true ng-click=clear()>&times;</button> <h4 class=modal-title id=myDatasource_typeLabel translate=dgdtoolApp.datasource_type.home.createOrEditLabel>Create or edit a Datasource_type</h4> </div> <div class=modal-body> <jh-alert-error></jh-alert-error> <div class=form-group> <label for=id translate=global.field.id>ID</label> <input class=form-control id=id name=id ng-model=datasource_type.id readonly/> </div> <div class=form-group> <label translate=dgdtoolApp.datasource_type.datasource_type_name for=field_datasource_type_name>Datasource_type_name</label> <input class=form-control name=datasource_type_name id=field_datasource_type_name ng-model=datasource_type.datasource_type_name required ng-maxlength=\"200\"/> <div ng-show=editForm.datasource_type_name.$invalid> <p class=help-block ng-show=editForm.datasource_type_name.$error.required translate=entity.validation.required> This field is required. </p> <p class=help-block ng-show=editForm.datasource_type_name.$error.maxlength translate=entity.validation.maxlength translate-value-max=200> This field cannot be longer than 200 characters. </p> </div> </div> <div class=form-group> <label translate=dgdtoolApp.datasource_type.description for=field_description>Description</label> <input class=form-control name=description id=field_description ng-model=datasource_type.description required ng-maxlength=\"2000\"/> <div ng-show=editForm.description.$invalid> <p class=help-block ng-show=editForm.description.$error.required translate=entity.validation.required> This field is required. </p> <p class=help-block ng-show=editForm.description.$error.maxlength translate=entity.validation.maxlength translate-value-max=2000> This field cannot be longer than 2000 characters. </p> </div> </div> <div class=form-group> <label translate=dgdtoolApp.datasource_type.status_id for=field_status_id>Status_id</label> <input type=number class=form-control name=status_id id=field_status_id ng-model=datasource_type.status_id required/> <div ng-show=editForm.status_id.$invalid> <p class=help-block ng-show=editForm.status_id.$error.required translate=entity.validation.required> This field is required. </p> <p class=help-block ng-show=editForm.status_id.$error.number translate=entity.validation.number> This field should be a number. </p> </div> </div> <div class=form-group> <label translate=dgdtoolApp.datasource_type.created_by for=field_created_by>Created_by</label> <input class=form-control name=created_by id=field_created_by ng-model=datasource_type.created_by required ng-maxlength=\"200\"/> <div ng-show=editForm.created_by.$invalid> <p class=help-block ng-show=editForm.created_by.$error.required translate=entity.validation.required> This field is required. </p> <p class=help-block ng-show=editForm.created_by.$error.maxlength translate=entity.validation.maxlength translate-value-max=200> This field cannot be longer than 200 characters. </p> </div> </div> <div class=form-group> <label translate=dgdtoolApp.datasource_type.created_date for=field_created_date>Created_date</label> <input type=date class=form-control name=created_date id=field_created_date ng-model=datasource_type.created_date required/> <div ng-show=editForm.created_date.$invalid> <p class=help-block ng-show=editForm.created_date.$error.required translate=entity.validation.required> This field is required. </p> </div> </div> <div class=form-group> <label translate=dgdtoolApp.datasource_type.modified_by for=field_modified_by>Modified_by</label> <input class=form-control name=modified_by id=field_modified_by ng-model=datasource_type.modified_by required ng-maxlength=\"200\"/> <div ng-show=editForm.modified_by.$invalid> <p class=help-block ng-show=editForm.modified_by.$error.required translate=entity.validation.required> This field is required. </p> <p class=help-block ng-show=editForm.modified_by.$error.maxlength translate=entity.validation.maxlength translate-value-max=200> This field cannot be longer than 200 characters. </p> </div> </div> <div class=form-group> <label translate=dgdtoolApp.datasource_type.modified_date for=field_modified_date>Modified_date</label> <input type=date class=form-control name=modified_date id=field_modified_date ng-model=datasource_type.modified_date required/> <div ng-show=editForm.modified_date.$invalid> <p class=help-block ng-show=editForm.modified_date.$error.required translate=entity.validation.required> This field is required. </p> </div> </div> </div> <div class=modal-footer> <button type=button class=\"btn btn-default\" data-dismiss=modal ng-click=clear()> <span class=\"glyphicon glyphicon-ban-circle\"></span>&nbsp;<span translate=entity.action.cancel>Cancel</span> </button> <button type=submit ng-disabled=\"editForm.$invalid || editForm.$submitted\" class=\"btn btn-primary\"> <span class=\"glyphicon glyphicon-save\"></span>&nbsp;<span translate=entity.action.save>Save</span> </button> </div> </form>"
  );


  $templateCache.put('scripts/app/entities/datasource_type/datasource_types.html',
    "<div> <h2 translate=dgdtoolApp.datasource_type.home.title>Datasource_types</h2> <jh-alert></jh-alert> <div class=container> <div class=row> <div class=col-md-4> <button class=\"btn btn-primary\" ui-sref=datasource_type.new> <span class=\"glyphicon glyphicon-flash\"></span> <span translate=dgdtoolApp.datasource_type.home.createLabel>Create a new Datasource_type</span> </button> </div> <div class=col-md-8> <form name=searchForm class=form-inline> <div class=form-group> <input class=form-control ng-model=searchQuery id=searchQuery placeholder=query> </div> <button class=\"btn btn-info\" ng-click=search()><span class=\"glyphicon glyphicon-search\"></span> <span>Search a Datasource_type</span> </button> </form> </div> </div> </div> <div class=\"modal fade\" id=deleteDatasource_typeConfirmation> <div class=modal-dialog> <div class=modal-content> <form name=deleteForm ng-submit=confirmDelete(datasource_type.id)> <div class=modal-header> <button type=button class=close data-dismiss=modal aria-hidden=true ng-click=clear()>&times;</button> <h4 class=modal-title translate=entity.delete.title>Confirm delete operation</h4> </div> <div class=modal-body> <p translate=dgdtoolApp.datasource_type.delete.question translate-values=\"{id: '{{datasource_type.id}}'}\">Are you sure you want to delete this Datasource_type?</p> </div> <div class=modal-footer> <button type=button class=\"btn btn-default\" data-dismiss=modal ng-click=clear()> <span class=\"glyphicon glyphicon-ban-circle\"></span>&nbsp;<span translate=entity.action.cancel>Cancel</span> </button> <button type=submit ng-disabled=deleteForm.$invalid class=\"btn btn-danger\"> <span class=\"glyphicon glyphicon-remove-circle\"></span>&nbsp;<span translate=entity.action.delete>Delete</span> </button> </div> </form> </div> </div> </div> <div class=table-responsive> <table class=\"table table-striped\"> <thead> <tr> <th translate=global.field.id>ID</th> <th translate=dgdtoolApp.datasource_type.datasource_type_name>Datasource_type_name</th> <th translate=dgdtoolApp.datasource_type.description>Description</th> <th translate=dgdtoolApp.datasource_type.status_id>Status_id</th> <th translate=dgdtoolApp.datasource_type.created_by>Created_by</th> <th translate=dgdtoolApp.datasource_type.created_date>Created_date</th> <th translate=dgdtoolApp.datasource_type.modified_by>Modified_by</th> <th translate=dgdtoolApp.datasource_type.modified_date>Modified_date</th> <th></th> </tr> </thead> <tbody> <tr ng-repeat=\"datasource_type in datasource_types track by datasource_type.id\"> <td><a ui-sref=datasource_type.detail({id:datasource_type.id})>{{datasource_type.id}}</a></td> <td>{{datasource_type.datasource_type_name}}</td> <td>{{datasource_type.description}}</td> <td>{{datasource_type.status_id}}</td> <td>{{datasource_type.created_by}}</td> <td>{{datasource_type.created_date | date:'mediumDate'}}</td> <td>{{datasource_type.modified_by}}</td> <td>{{datasource_type.modified_date | date:'mediumDate'}}</td> <td> <button type=submit ui-sref=datasource_type.detail({id:datasource_type.id}) class=\"btn btn-info btn-sm\"> <span class=\"glyphicon glyphicon-eye-open\"></span>&nbsp;<span translate=entity.action.view> View</span> </button> <button type=submit ui-sref=datasource_type.edit({id:datasource_type.id}) class=\"btn btn-primary btn-sm\"> <span class=\"glyphicon glyphicon-pencil\"></span>&nbsp;<span translate=entity.action.edit> Edit</span> </button> <button type=submit ng-click=delete(datasource_type.id) class=\"btn btn-danger btn-sm\"> <span class=\"glyphicon glyphicon-remove-circle\"></span>&nbsp;<span translate=entity.action.delete> Delete</span> </button> </td> </tr> </tbody> </table> <nav> <ul class=pager> <li ng-show=\"links['first'] >= 0\" ng-click=\"loadPage(links['first'])\"><a href=#>&lt;&lt;</a></li> <li ng-show=\"page > 0\" ng-click=\"loadPage(links['prev'] || 0)\"><a href=#>&lt;</a></li> <li ng-show=\"links['next']\" ng-click=\"loadPage(links['next'])\"><a href=#>&gt;</a></li> <li ng-show=\"links['last'] > 0\" ng-click=\"loadPage(links['last'])\"><a href=#>&gt;&gt;</a></li> </ul> </nav> </div> </div>"
  );


  $templateCache.put('scripts/app/entities/decision/decision-detail.html',
    "<div> <h2><span translate=dgdtoolApp.decision.detail.title>Decision</span> {{decision.id}}</h2> <div class=table-responsive> <table class=\"table table-striped\"> <thead> <tr> <th translate=entity.detail.field>Field</th> <th translate=entity.detail.value>Value</th> </tr> </thead> <tbody> <tr> <td> <span translate=dgdtoolApp.decision.decision_name>Decision_name</span> </td> <td> <span class=form-control-static>{{decision.decision_name}}</span> </td> </tr> <tr> <td> <span translate=dgdtoolApp.decision.description>Description</span> </td> <td> <span class=form-control-static>{{decision.description}}</span> </td> </tr> <tr> <td> <span translate=dgdtoolApp.decision.status_id>Status_id</span> </td> <td> <span class=form-control-static>{{decision.status_id}}</span> </td> </tr> <tr> <td> <span translate=dgdtoolApp.decision.created_by>Created_by</span> </td> <td> <span class=form-control-static>{{decision.created_by}}</span> </td> </tr> <tr> <td> <span translate=dgdtoolApp.decision.created_date>Created_date</span> </td> <td> <span class=form-control-static>{{decision.created_date | date:'mediumDate'}}</span> </td> </tr> <tr> <td> <span translate=dgdtoolApp.decision.modified_by>Modified_by</span> </td> <td> <span class=form-control-static>{{decision.modified_by}}</span> </td> </tr> <tr> <td> <span translate=dgdtoolApp.decision.modified_date>Modified_date</span> </td> <td> <span class=form-control-static>{{decision.modified_date | date:'mediumDate'}}</span> </td> </tr> </tbody> </table> </div> <button type=submit onclick=window.history.back() class=\"btn btn-info\"> <span class=\"glyphicon glyphicon-arrow-left\"></span>&nbsp;<span translate=entity.action.back> Back</span> </button> </div>"
  );


  $templateCache.put('scripts/app/entities/decision/decision-dialog.html',
    "<form name=editForm role=form novalidate ng-submit=save() show-validation> <div class=modal-header> <button type=button class=close data-dismiss=modal aria-hidden=true ng-click=clear()>&times;</button> <h4 class=modal-title id=myDecisionLabel translate=dgdtoolApp.decision.home.createOrEditLabel>Create or edit a Decision</h4> </div> <div class=modal-body> <jh-alert-error></jh-alert-error> <div class=form-group> <label for=id translate=global.field.id>ID</label> <input class=form-control id=id name=id ng-model=decision.id readonly/> </div> <div class=form-group> <label translate=dgdtoolApp.decision.decision_name for=field_decision_name>Decision_name</label> <input class=form-control name=decision_name id=field_decision_name ng-model=decision.decision_name required ng-maxlength=\"200\"/> <div ng-show=editForm.decision_name.$invalid> <p class=help-block ng-show=editForm.decision_name.$error.required translate=entity.validation.required> This field is required. </p> <p class=help-block ng-show=editForm.decision_name.$error.maxlength translate=entity.validation.maxlength translate-value-max=200> This field cannot be longer than 200 characters. </p> </div> </div> <div class=form-group> <label translate=dgdtoolApp.decision.description for=field_description>Description</label> <input class=form-control name=description id=field_description ng-model=decision.description required ng-maxlength=\"2000\"/> <div ng-show=editForm.description.$invalid> <p class=help-block ng-show=editForm.description.$error.required translate=entity.validation.required> This field is required. </p> <p class=help-block ng-show=editForm.description.$error.maxlength translate=entity.validation.maxlength translate-value-max=2000> This field cannot be longer than 2000 characters. </p> </div> </div> <div class=form-group> <label translate=dgdtoolApp.decision.status_id for=field_status_id>Status_id</label> <input type=number class=form-control name=status_id id=field_status_id ng-model=decision.status_id required/> <div ng-show=editForm.status_id.$invalid> <p class=help-block ng-show=editForm.status_id.$error.required translate=entity.validation.required> This field is required. </p> <p class=help-block ng-show=editForm.status_id.$error.number translate=entity.validation.number> This field should be a number. </p> </div> </div> <div class=form-group> <label translate=dgdtoolApp.decision.created_by for=field_created_by>Created_by</label> <input class=form-control name=created_by id=field_created_by ng-model=decision.created_by required ng-maxlength=\"200\"/> <div ng-show=editForm.created_by.$invalid> <p class=help-block ng-show=editForm.created_by.$error.required translate=entity.validation.required> This field is required. </p> <p class=help-block ng-show=editForm.created_by.$error.maxlength translate=entity.validation.maxlength translate-value-max=200> This field cannot be longer than 200 characters. </p> </div> </div> <div class=form-group> <label translate=dgdtoolApp.decision.created_date for=field_created_date>Created_date</label> <input type=date class=form-control name=created_date id=field_created_date ng-model=decision.created_date required/> <div ng-show=editForm.created_date.$invalid> <p class=help-block ng-show=editForm.created_date.$error.required translate=entity.validation.required> This field is required. </p> </div> </div> <div class=form-group> <label translate=dgdtoolApp.decision.modified_by for=field_modified_by>Modified_by</label> <input class=form-control name=modified_by id=field_modified_by ng-model=decision.modified_by required ng-maxlength=\"200\"/> <div ng-show=editForm.modified_by.$invalid> <p class=help-block ng-show=editForm.modified_by.$error.required translate=entity.validation.required> This field is required. </p> <p class=help-block ng-show=editForm.modified_by.$error.maxlength translate=entity.validation.maxlength translate-value-max=200> This field cannot be longer than 200 characters. </p> </div> </div> <div class=form-group> <label translate=dgdtoolApp.decision.modified_date for=field_modified_date>Modified_date</label> <input type=date class=form-control name=modified_date id=field_modified_date ng-model=decision.modified_date required/> <div ng-show=editForm.modified_date.$invalid> <p class=help-block ng-show=editForm.modified_date.$error.required translate=entity.validation.required> This field is required. </p> </div> </div> </div> <div class=modal-footer> <button type=button class=\"btn btn-default\" data-dismiss=modal ng-click=clear()> <span class=\"glyphicon glyphicon-ban-circle\"></span>&nbsp;<span translate=entity.action.cancel>Cancel</span> </button> <button type=submit ng-disabled=\"editForm.$invalid || editForm.$submitted\" class=\"btn btn-primary\"> <span class=\"glyphicon glyphicon-save\"></span>&nbsp;<span translate=entity.action.save>Save</span> </button> </div> </form>"
  );


  $templateCache.put('scripts/app/entities/decision/decisions.html',
    "<div> <h2 translate=dgdtoolApp.decision.home.title>Decisions</h2> <jh-alert></jh-alert> <div class=container> <div class=row> <div class=col-md-4> <button class=\"btn btn-primary\" ui-sref=decision.new> <span class=\"glyphicon glyphicon-flash\"></span> <span translate=dgdtoolApp.decision.home.createLabel>Create a new Decision</span> </button> </div> <div class=col-md-8> <form name=searchForm class=form-inline> <div class=form-group> <input class=form-control ng-model=searchQuery id=searchQuery placeholder=query> </div> <button class=\"btn btn-info\" ng-click=search()><span class=\"glyphicon glyphicon-search\"></span> <span>Search a Decision</span> </button> </form> </div> </div> </div> <div class=\"modal fade\" id=deleteDecisionConfirmation> <div class=modal-dialog> <div class=modal-content> <form name=deleteForm ng-submit=confirmDelete(decision.id)> <div class=modal-header> <button type=button class=close data-dismiss=modal aria-hidden=true ng-click=clear()>&times;</button> <h4 class=modal-title translate=entity.delete.title>Confirm delete operation</h4> </div> <div class=modal-body> <p translate=dgdtoolApp.decision.delete.question translate-values=\"{id: '{{decision.id}}'}\">Are you sure you want to delete this Decision?</p> </div> <div class=modal-footer> <button type=button class=\"btn btn-default\" data-dismiss=modal ng-click=clear()> <span class=\"glyphicon glyphicon-ban-circle\"></span>&nbsp;<span translate=entity.action.cancel>Cancel</span> </button> <button type=submit ng-disabled=deleteForm.$invalid class=\"btn btn-danger\"> <span class=\"glyphicon glyphicon-remove-circle\"></span>&nbsp;<span translate=entity.action.delete>Delete</span> </button> </div> </form> </div> </div> </div> <div class=table-responsive> <table class=\"table table-striped\"> <thead> <tr> <th translate=global.field.id>ID</th> <th translate=dgdtoolApp.decision.decision_name>Decision_name</th> <th translate=dgdtoolApp.decision.description>Description</th> <th translate=dgdtoolApp.decision.status_id>Status_id</th> <th translate=dgdtoolApp.decision.created_by>Created_by</th> <th translate=dgdtoolApp.decision.created_date>Created_date</th> <th translate=dgdtoolApp.decision.modified_by>Modified_by</th> <th translate=dgdtoolApp.decision.modified_date>Modified_date</th> <th></th> </tr> </thead> <tbody> <tr ng-repeat=\"decision in decisions track by decision.id\"> <td><a ui-sref=decision.detail({id:decision.id})>{{decision.id}}</a></td> <td>{{decision.decision_name}}</td> <td>{{decision.description}}</td> <td>{{decision.status_id}}</td> <td>{{decision.created_by}}</td> <td>{{decision.created_date | date:'mediumDate'}}</td> <td>{{decision.modified_by}}</td> <td>{{decision.modified_date | date:'mediumDate'}}</td> <td> <button type=submit ui-sref=decision.detail({id:decision.id}) class=\"btn btn-info btn-sm\"> <span class=\"glyphicon glyphicon-eye-open\"></span>&nbsp;<span translate=entity.action.view> View</span> </button> <button type=submit ui-sref=decision.edit({id:decision.id}) class=\"btn btn-primary btn-sm\"> <span class=\"glyphicon glyphicon-pencil\"></span>&nbsp;<span translate=entity.action.edit> Edit</span> </button> <button type=submit ng-click=delete(decision.id) class=\"btn btn-danger btn-sm\"> <span class=\"glyphicon glyphicon-remove-circle\"></span>&nbsp;<span translate=entity.action.delete> Delete</span> </button> </td> </tr> </tbody> </table> <nav> <ul class=pager> <li ng-show=\"links['first'] >= 0\" ng-click=\"loadPage(links['first'])\"><a href=#>&lt;&lt;</a></li> <li ng-show=\"page > 0\" ng-click=\"loadPage(links['prev'] || 0)\"><a href=#>&lt;</a></li> <li ng-show=\"links['next']\" ng-click=\"loadPage(links['next'])\"><a href=#>&gt;</a></li> <li ng-show=\"links['last'] > 0\" ng-click=\"loadPage(links['last'])\"><a href=#>&gt;&gt;</a></li> </ul> </nav> </div> </div>"
  );


  $templateCache.put('scripts/app/entities/end_state_designation/end_state_designation-detail.html',
    "<div> <h2><span translate=dgdtoolApp.end_state_designation.detail.title>End_state_designation</span> {{end_state_designation.id}}</h2> <div class=table-responsive> <table class=\"table table-striped\"> <thead> <tr> <th translate=entity.detail.field>Field</th> <th translate=entity.detail.value>Value</th> </tr> </thead> <tbody> <tr> <td> <span translate=dgdtoolApp.end_state_designation.end_state_designation_name>End_state_designation_name</span> </td> <td> <span class=form-control-static>{{end_state_designation.end_state_designation_name}}</span> </td> </tr> <tr> <td> <span translate=dgdtoolApp.end_state_designation.description>Description</span> </td> <td> <span class=form-control-static>{{end_state_designation.description}}</span> </td> </tr> <tr> <td> <span translate=dgdtoolApp.end_state_designation.status_id>Status_id</span> </td> <td> <span class=form-control-static>{{end_state_designation.status_id}}</span> </td> </tr> <tr> <td> <span translate=dgdtoolApp.end_state_designation.created_by>Created_by</span> </td> <td> <span class=form-control-static>{{end_state_designation.created_by}}</span> </td> </tr> <tr> <td> <span translate=dgdtoolApp.end_state_designation.created_date>Created_date</span> </td> <td> <span class=form-control-static>{{end_state_designation.created_date | date:'mediumDate'}}</span> </td> </tr> <tr> <td> <span translate=dgdtoolApp.end_state_designation.modified_by>Modified_by</span> </td> <td> <span class=form-control-static>{{end_state_designation.modified_by}}</span> </td> </tr> <tr> <td> <span translate=dgdtoolApp.end_state_designation.modified_date>Modified_date</span> </td> <td> <span class=form-control-static>{{end_state_designation.modified_date | date:'mediumDate'}}</span> </td> </tr> </tbody> </table> </div> <button type=submit onclick=window.history.back() class=\"btn btn-info\"> <span class=\"glyphicon glyphicon-arrow-left\"></span>&nbsp;<span translate=entity.action.back> Back</span> </button> </div>"
  );


  $templateCache.put('scripts/app/entities/end_state_designation/end_state_designation-dialog.html',
    "<form name=editForm role=form novalidate ng-submit=save() show-validation> <div class=modal-header> <button type=button class=close data-dismiss=modal aria-hidden=true ng-click=clear()>&times;</button> <h4 class=modal-title id=myEnd_state_designationLabel translate=dgdtoolApp.end_state_designation.home.createOrEditLabel>Create or edit a End_state_designation</h4> </div> <div class=modal-body> <jh-alert-error></jh-alert-error> <div class=form-group> <label for=id translate=global.field.id>ID</label> <input class=form-control id=id name=id ng-model=end_state_designation.id readonly/> </div> <div class=form-group> <label translate=dgdtoolApp.end_state_designation.end_state_designation_name for=field_end_state_designation_name>End_state_designation_name</label> <input class=form-control name=end_state_designation_name id=field_end_state_designation_name ng-model=end_state_designation.end_state_designation_name required ng-maxlength=\"200\"/> <div ng-show=editForm.end_state_designation_name.$invalid> <p class=help-block ng-show=editForm.end_state_designation_name.$error.required translate=entity.validation.required> This field is required. </p> <p class=help-block ng-show=editForm.end_state_designation_name.$error.maxlength translate=entity.validation.maxlength translate-value-max=200> This field cannot be longer than 200 characters. </p> </div> </div> <div class=form-group> <label translate=dgdtoolApp.end_state_designation.description for=field_description>Description</label> <input class=form-control name=description id=field_description ng-model=end_state_designation.description required ng-maxlength=\"2000\"/> <div ng-show=editForm.description.$invalid> <p class=help-block ng-show=editForm.description.$error.required translate=entity.validation.required> This field is required. </p> <p class=help-block ng-show=editForm.description.$error.maxlength translate=entity.validation.maxlength translate-value-max=2000> This field cannot be longer than 2000 characters. </p> </div> </div> <div class=form-group> <label translate=dgdtoolApp.end_state_designation.status_id for=field_status_id>Status_id</label> <input type=number class=form-control name=status_id id=field_status_id ng-model=end_state_designation.status_id required/> <div ng-show=editForm.status_id.$invalid> <p class=help-block ng-show=editForm.status_id.$error.required translate=entity.validation.required> This field is required. </p> <p class=help-block ng-show=editForm.status_id.$error.number translate=entity.validation.number> This field should be a number. </p> </div> </div> <div class=form-group> <label translate=dgdtoolApp.end_state_designation.created_by for=field_created_by>Created_by</label> <input class=form-control name=created_by id=field_created_by ng-model=end_state_designation.created_by required ng-maxlength=\"200\"/> <div ng-show=editForm.created_by.$invalid> <p class=help-block ng-show=editForm.created_by.$error.required translate=entity.validation.required> This field is required. </p> <p class=help-block ng-show=editForm.created_by.$error.maxlength translate=entity.validation.maxlength translate-value-max=200> This field cannot be longer than 200 characters. </p> </div> </div> <div class=form-group> <label translate=dgdtoolApp.end_state_designation.created_date for=field_created_date>Created_date</label> <input type=date class=form-control name=created_date id=field_created_date ng-model=end_state_designation.created_date required/> <div ng-show=editForm.created_date.$invalid> <p class=help-block ng-show=editForm.created_date.$error.required translate=entity.validation.required> This field is required. </p> </div> </div> <div class=form-group> <label translate=dgdtoolApp.end_state_designation.modified_by for=field_modified_by>Modified_by</label> <input class=form-control name=modified_by id=field_modified_by ng-model=end_state_designation.modified_by required ng-maxlength=\"200\"/> <div ng-show=editForm.modified_by.$invalid> <p class=help-block ng-show=editForm.modified_by.$error.required translate=entity.validation.required> This field is required. </p> <p class=help-block ng-show=editForm.modified_by.$error.maxlength translate=entity.validation.maxlength translate-value-max=200> This field cannot be longer than 200 characters. </p> </div> </div> <div class=form-group> <label translate=dgdtoolApp.end_state_designation.modified_date for=field_modified_date>Modified_date</label> <input type=date class=form-control name=modified_date id=field_modified_date ng-model=end_state_designation.modified_date required/> <div ng-show=editForm.modified_date.$invalid> <p class=help-block ng-show=editForm.modified_date.$error.required translate=entity.validation.required> This field is required. </p> </div> </div> </div> <div class=modal-footer> <button type=button class=\"btn btn-default\" data-dismiss=modal ng-click=clear()> <span class=\"glyphicon glyphicon-ban-circle\"></span>&nbsp;<span translate=entity.action.cancel>Cancel</span> </button> <button type=submit ng-disabled=\"editForm.$invalid || editForm.$submitted\" class=\"btn btn-primary\"> <span class=\"glyphicon glyphicon-save\"></span>&nbsp;<span translate=entity.action.save>Save</span> </button> </div> </form>"
  );


  $templateCache.put('scripts/app/entities/end_state_designation/end_state_designations.html',
    "<div> <h2 translate=dgdtoolApp.end_state_designation.home.title>End_state_designations</h2> <jh-alert></jh-alert> <div class=container> <div class=row> <div class=col-md-4> <button class=\"btn btn-primary\" ui-sref=end_state_designation.new> <span class=\"glyphicon glyphicon-flash\"></span> <span translate=dgdtoolApp.end_state_designation.home.createLabel>Create a new End_state_designation</span> </button> </div> <div class=col-md-8> <form name=searchForm class=form-inline> <div class=form-group> <input class=form-control ng-model=searchQuery id=searchQuery placeholder=query> </div> <button class=\"btn btn-info\" ng-click=search()><span class=\"glyphicon glyphicon-search\"></span> <span>Search a End_state_designation</span> </button> </form> </div> </div> </div> <div class=\"modal fade\" id=deleteEnd_state_designationConfirmation> <div class=modal-dialog> <div class=modal-content> <form name=deleteForm ng-submit=confirmDelete(end_state_designation.id)> <div class=modal-header> <button type=button class=close data-dismiss=modal aria-hidden=true ng-click=clear()>&times;</button> <h4 class=modal-title translate=entity.delete.title>Confirm delete operation</h4> </div> <div class=modal-body> <p translate=dgdtoolApp.end_state_designation.delete.question translate-values=\"{id: '{{end_state_designation.id}}'}\">Are you sure you want to delete this End_state_designation?</p> </div> <div class=modal-footer> <button type=button class=\"btn btn-default\" data-dismiss=modal ng-click=clear()> <span class=\"glyphicon glyphicon-ban-circle\"></span>&nbsp;<span translate=entity.action.cancel>Cancel</span> </button> <button type=submit ng-disabled=deleteForm.$invalid class=\"btn btn-danger\"> <span class=\"glyphicon glyphicon-remove-circle\"></span>&nbsp;<span translate=entity.action.delete>Delete</span> </button> </div> </form> </div> </div> </div> <div class=table-responsive> <table class=\"table table-striped\"> <thead> <tr> <th translate=global.field.id>ID</th> <th translate=dgdtoolApp.end_state_designation.end_state_designation_name>End_state_designation_name</th> <th translate=dgdtoolApp.end_state_designation.description>Description</th> <th translate=dgdtoolApp.end_state_designation.status_id>Status_id</th> <th translate=dgdtoolApp.end_state_designation.created_by>Created_by</th> <th translate=dgdtoolApp.end_state_designation.created_date>Created_date</th> <th translate=dgdtoolApp.end_state_designation.modified_by>Modified_by</th> <th translate=dgdtoolApp.end_state_designation.modified_date>Modified_date</th> <th></th> </tr> </thead> <tbody> <tr ng-repeat=\"end_state_designation in end_state_designations track by end_state_designation.id\"> <td><a ui-sref=end_state_designation.detail({id:end_state_designation.id})>{{end_state_designation.id}}</a></td> <td>{{end_state_designation.end_state_designation_name}}</td> <td>{{end_state_designation.description}}</td> <td>{{end_state_designation.status_id}}</td> <td>{{end_state_designation.created_by}}</td> <td>{{end_state_designation.created_date | date:'mediumDate'}}</td> <td>{{end_state_designation.modified_by}}</td> <td>{{end_state_designation.modified_date | date:'mediumDate'}}</td> <td> <button type=submit ui-sref=end_state_designation.detail({id:end_state_designation.id}) class=\"btn btn-info btn-sm\"> <span class=\"glyphicon glyphicon-eye-open\"></span>&nbsp;<span translate=entity.action.view> View</span> </button> <button type=submit ui-sref=end_state_designation.edit({id:end_state_designation.id}) class=\"btn btn-primary btn-sm\"> <span class=\"glyphicon glyphicon-pencil\"></span>&nbsp;<span translate=entity.action.edit> Edit</span> </button> <button type=submit ng-click=delete(end_state_designation.id) class=\"btn btn-danger btn-sm\"> <span class=\"glyphicon glyphicon-remove-circle\"></span>&nbsp;<span translate=entity.action.delete> Delete</span> </button> </td> </tr> </tbody> </table> <nav> <ul class=pager> <li ng-show=\"links['first'] >= 0\" ng-click=\"loadPage(links['first'])\"><a href=#>&lt;&lt;</a></li> <li ng-show=\"page > 0\" ng-click=\"loadPage(links['prev'] || 0)\"><a href=#>&lt;</a></li> <li ng-show=\"links['next']\" ng-click=\"loadPage(links['next'])\"><a href=#>&gt;</a></li> <li ng-show=\"links['last'] > 0\" ng-click=\"loadPage(links['last'])\"><a href=#>&gt;&gt;</a></li> </ul> </nav> </div> </div>"
  );


  $templateCache.put('scripts/app/entities/environment/environment-detail.html',
    "<div> <h2><span translate=dgdtoolApp.environment.detail.title>Environment</span> {{environment.id}}</h2> <div class=table-responsive> <table class=\"table table-striped\"> <thead> <tr> <th translate=entity.detail.field>Field</th> <th translate=entity.detail.value>Value</th> </tr> </thead> <tbody> <tr> <td> <span translate=dgdtoolApp.environment.environment_name>Environment_name</span> </td> <td> <span class=form-control-static>{{environment.environment_name}}</span> </td> </tr> <tr> <td> <span translate=dgdtoolApp.environment.description>Description</span> </td> <td> <span class=form-control-static>{{environment.description}}</span> </td> </tr> <tr> <td> <span translate=dgdtoolApp.environment.status_id>Status_id</span> </td> <td> <span class=form-control-static>{{environment.status_id}}</span> </td> </tr> <tr> <td> <span translate=dgdtoolApp.environment.created_by>Created_by</span> </td> <td> <span class=form-control-static>{{environment.created_by}}</span> </td> </tr> <tr> <td> <span translate=dgdtoolApp.environment.created_date>Created_date</span> </td> <td> <span class=form-control-static>{{environment.created_date | date:'mediumDate'}}</span> </td> </tr> <tr> <td> <span translate=dgdtoolApp.environment.modified_by>Modified_by</span> </td> <td> <span class=form-control-static>{{environment.modified_by}}</span> </td> </tr> <tr> <td> <span translate=dgdtoolApp.environment.modified_date>Modified_date</span> </td> <td> <span class=form-control-static>{{environment.modified_date | date:'mediumDate'}}</span> </td> </tr> </tbody> </table> </div> <button type=submit onclick=window.history.back() class=\"btn btn-info\"> <span class=\"glyphicon glyphicon-arrow-left\"></span>&nbsp;<span translate=entity.action.back> Back</span> </button> </div>"
  );


  $templateCache.put('scripts/app/entities/environment/environment-dialog.html',
    "<form name=editForm role=form novalidate ng-submit=save() show-validation> <div class=modal-header> <button type=button class=close data-dismiss=modal aria-hidden=true ng-click=clear()>&times;</button> <h4 class=modal-title id=myEnvironmentLabel translate=dgdtoolApp.environment.home.createOrEditLabel>Create or edit a Environment</h4> </div> <div class=modal-body> <jh-alert-error></jh-alert-error> <div class=form-group> <label for=id translate=global.field.id>ID</label> <input class=form-control id=id name=id ng-model=environment.id readonly/> </div> <div class=form-group> <label translate=dgdtoolApp.environment.environment_name for=field_environment_name>Environment_name</label> <input class=form-control name=environment_name id=field_environment_name ng-model=environment.environment_name required ng-maxlength=\"200\"/> <div ng-show=editForm.environment_name.$invalid> <p class=help-block ng-show=editForm.environment_name.$error.required translate=entity.validation.required> This field is required. </p> <p class=help-block ng-show=editForm.environment_name.$error.maxlength translate=entity.validation.maxlength translate-value-max=200> This field cannot be longer than 200 characters. </p> </div> </div> <div class=form-group> <label translate=dgdtoolApp.environment.description for=field_description>Description</label> <input class=form-control name=description id=field_description ng-model=environment.description required ng-maxlength=\"2000\"/> <div ng-show=editForm.description.$invalid> <p class=help-block ng-show=editForm.description.$error.required translate=entity.validation.required> This field is required. </p> <p class=help-block ng-show=editForm.description.$error.maxlength translate=entity.validation.maxlength translate-value-max=2000> This field cannot be longer than 2000 characters. </p> </div> </div> <div class=form-group> <label translate=dgdtoolApp.environment.status_id for=field_status_id>Status_id</label> <input type=number class=form-control name=status_id id=field_status_id ng-model=environment.status_id required/> <div ng-show=editForm.status_id.$invalid> <p class=help-block ng-show=editForm.status_id.$error.required translate=entity.validation.required> This field is required. </p> <p class=help-block ng-show=editForm.status_id.$error.number translate=entity.validation.number> This field should be a number. </p> </div> </div> <div class=form-group> <label translate=dgdtoolApp.environment.created_by for=field_created_by>Created_by</label> <input class=form-control name=created_by id=field_created_by ng-model=environment.created_by required ng-maxlength=\"200\"/> <div ng-show=editForm.created_by.$invalid> <p class=help-block ng-show=editForm.created_by.$error.required translate=entity.validation.required> This field is required. </p> <p class=help-block ng-show=editForm.created_by.$error.maxlength translate=entity.validation.maxlength translate-value-max=200> This field cannot be longer than 200 characters. </p> </div> </div> <div class=form-group> <label translate=dgdtoolApp.environment.created_date for=field_created_date>Created_date</label> <input type=date class=form-control name=created_date id=field_created_date ng-model=environment.created_date required/> <div ng-show=editForm.created_date.$invalid> <p class=help-block ng-show=editForm.created_date.$error.required translate=entity.validation.required> This field is required. </p> </div> </div> <div class=form-group> <label translate=dgdtoolApp.environment.modified_by for=field_modified_by>Modified_by</label> <input class=form-control name=modified_by id=field_modified_by ng-model=environment.modified_by required ng-maxlength=\"200\"/> <div ng-show=editForm.modified_by.$invalid> <p class=help-block ng-show=editForm.modified_by.$error.required translate=entity.validation.required> This field is required. </p> <p class=help-block ng-show=editForm.modified_by.$error.maxlength translate=entity.validation.maxlength translate-value-max=200> This field cannot be longer than 200 characters. </p> </div> </div> <div class=form-group> <label translate=dgdtoolApp.environment.modified_date for=field_modified_date>Modified_date</label> <input type=date class=form-control name=modified_date id=field_modified_date ng-model=environment.modified_date required/> <div ng-show=editForm.modified_date.$invalid> <p class=help-block ng-show=editForm.modified_date.$error.required translate=entity.validation.required> This field is required. </p> </div> </div> </div> <div class=modal-footer> <button type=button class=\"btn btn-default\" data-dismiss=modal ng-click=clear()> <span class=\"glyphicon glyphicon-ban-circle\"></span>&nbsp;<span translate=entity.action.cancel>Cancel</span> </button> <button type=submit ng-disabled=\"editForm.$invalid || editForm.$submitted\" class=\"btn btn-primary\"> <span class=\"glyphicon glyphicon-save\"></span>&nbsp;<span translate=entity.action.save>Save</span> </button> </div> </form>"
  );


  $templateCache.put('scripts/app/entities/environment/environments.html',
    "<div> <h2 translate=dgdtoolApp.environment.home.title>Environments</h2> <jh-alert></jh-alert> <div class=container> <div class=row> <div class=col-md-4> <button class=\"btn btn-primary\" ui-sref=environment.new> <span class=\"glyphicon glyphicon-flash\"></span> <span translate=dgdtoolApp.environment.home.createLabel>Create a new Environment</span> </button> </div> <div class=col-md-8> <form name=searchForm class=form-inline> <div class=form-group> <input class=form-control ng-model=searchQuery id=searchQuery placeholder=query> </div> <button class=\"btn btn-info\" ng-click=search()><span class=\"glyphicon glyphicon-search\"></span> <span>Search a Environment</span> </button> </form> </div> </div> </div> <div class=\"modal fade\" id=deleteEnvironmentConfirmation> <div class=modal-dialog> <div class=modal-content> <form name=deleteForm ng-submit=confirmDelete(environment.id)> <div class=modal-header> <button type=button class=close data-dismiss=modal aria-hidden=true ng-click=clear()>&times;</button> <h4 class=modal-title translate=entity.delete.title>Confirm delete operation</h4> </div> <div class=modal-body> <p translate=dgdtoolApp.environment.delete.question translate-values=\"{id: '{{environment.id}}'}\">Are you sure you want to delete this Environment?</p> </div> <div class=modal-footer> <button type=button class=\"btn btn-default\" data-dismiss=modal ng-click=clear()> <span class=\"glyphicon glyphicon-ban-circle\"></span>&nbsp;<span translate=entity.action.cancel>Cancel</span> </button> <button type=submit ng-disabled=deleteForm.$invalid class=\"btn btn-danger\"> <span class=\"glyphicon glyphicon-remove-circle\"></span>&nbsp;<span translate=entity.action.delete>Delete</span> </button> </div> </form> </div> </div> </div> <div class=table-responsive> <table class=\"table table-striped\"> <thead> <tr> <th translate=global.field.id>ID</th> <th translate=dgdtoolApp.environment.environment_name>Environment_name</th> <th translate=dgdtoolApp.environment.description>Description</th> <th translate=dgdtoolApp.environment.status_id>Status_id</th> <th translate=dgdtoolApp.environment.created_by>Created_by</th> <th translate=dgdtoolApp.environment.created_date>Created_date</th> <th translate=dgdtoolApp.environment.modified_by>Modified_by</th> <th translate=dgdtoolApp.environment.modified_date>Modified_date</th> <th></th> </tr> </thead> <tbody> <tr ng-repeat=\"environment in environments track by environment.id\"> <td><a ui-sref=environment.detail({id:environment.id})>{{environment.id}}</a></td> <td>{{environment.environment_name}}</td> <td>{{environment.description}}</td> <td>{{environment.status_id}}</td> <td>{{environment.created_by}}</td> <td>{{environment.created_date | date:'mediumDate'}}</td> <td>{{environment.modified_by}}</td> <td>{{environment.modified_date | date:'mediumDate'}}</td> <td> <button type=submit ui-sref=environment.detail({id:environment.id}) class=\"btn btn-info btn-sm\"> <span class=\"glyphicon glyphicon-eye-open\"></span>&nbsp;<span translate=entity.action.view> View</span> </button> <button type=submit ui-sref=environment.edit({id:environment.id}) class=\"btn btn-primary btn-sm\"> <span class=\"glyphicon glyphicon-pencil\"></span>&nbsp;<span translate=entity.action.edit> Edit</span> </button> <button type=submit ng-click=delete(environment.id) class=\"btn btn-danger btn-sm\"> <span class=\"glyphicon glyphicon-remove-circle\"></span>&nbsp;<span translate=entity.action.delete> Delete</span> </button> </td> </tr> </tbody> </table> <nav> <ul class=pager> <li ng-show=\"links['first'] >= 0\" ng-click=\"loadPage(links['first'])\"><a href=#>&lt;&lt;</a></li> <li ng-show=\"page > 0\" ng-click=\"loadPage(links['prev'] || 0)\"><a href=#>&lt;</a></li> <li ng-show=\"links['next']\" ng-click=\"loadPage(links['next'])\"><a href=#>&gt;</a></li> <li ng-show=\"links['last'] > 0\" ng-click=\"loadPage(links['last'])\"><a href=#>&gt;&gt;</a></li> </ul> </nav> </div> </div>"
  );


  $templateCache.put('scripts/app/entities/feedback/feedback-detail.html',
    "<div> <h2><span translate=dgdtoolApp.feedback.detail.title>Feedback</span> {{feedback.id}}</h2> <div class=table-responsive> <table class=\"table table-striped\"> <thead> <tr> <th translate=entity.detail.field>Field</th> <th translate=entity.detail.value>Value</th> </tr> </thead> <tbody> <tr> <td> <span translate=dgdtoolApp.feedback.feedback_type_id>Feedback_type_id</span> </td> <td> <span class=form-control-static>{{feedback.feedback_type_id}}</span> </td> </tr> <tr> <td> <span translate=dgdtoolApp.feedback.feedback_name>Feedback_name</span> </td> <td> <span class=form-control-static>{{feedback.feedback_name}}</span> </td> </tr> <tr> <td> <span translate=dgdtoolApp.feedback.description>Description</span> </td> <td> <span class=form-control-static>{{feedback.description}}</span> </td> </tr> <tr> <td> <span translate=dgdtoolApp.feedback.status_id>Status_id</span> </td> <td> <span class=form-control-static>{{feedback.status_id}}</span> </td> </tr> <tr> <td> <span translate=dgdtoolApp.feedback.created_by>Created_by</span> </td> <td> <span class=form-control-static>{{feedback.created_by}}</span> </td> </tr> <tr> <td> <span translate=dgdtoolApp.feedback.created_date>Created_date</span> </td> <td> <span class=form-control-static>{{feedback.created_date | date:'mediumDate'}}</span> </td> </tr> <tr> <td> <span translate=dgdtoolApp.feedback.modified_by>Modified_by</span> </td> <td> <span class=form-control-static>{{feedback.modified_by}}</span> </td> </tr> <tr> <td> <span translate=dgdtoolApp.feedback.modified_date>Modified_date</span> </td> <td> <span class=form-control-static>{{feedback.modified_date | date:'mediumDate'}}</span> </td> </tr> </tbody> </table> </div> <button type=submit onclick=window.history.back() class=\"btn btn-info\"> <span class=\"glyphicon glyphicon-arrow-left\"></span>&nbsp;<span translate=entity.action.back> Back</span> </button> </div>"
  );


  $templateCache.put('scripts/app/entities/feedback/feedback-dialog.html',
    "<form name=editForm role=form novalidate ng-submit=save() show-validation> <div class=modal-header> <button type=button class=close data-dismiss=modal aria-hidden=true ng-click=clear()>&times;</button> <h4 class=modal-title id=myFeedbackLabel translate=dgdtoolApp.feedback.home.createOrEditLabel>Create or edit a Feedback</h4> </div> <div class=modal-body> <jh-alert-error></jh-alert-error> <div class=form-group> <label for=id translate=global.field.id>ID</label> <input class=form-control id=id name=id ng-model=feedback.id readonly/> </div> <div class=form-group> <label translate=dgdtoolApp.feedback.feedback_type_id for=field_feedback_type_id>Feedback_type_id</label> <input type=number class=form-control name=feedback_type_id id=field_feedback_type_id ng-model=feedback.feedback_type_id required/> <div ng-show=editForm.feedback_type_id.$invalid> <p class=help-block ng-show=editForm.feedback_type_id.$error.required translate=entity.validation.required> This field is required. </p> <p class=help-block ng-show=editForm.feedback_type_id.$error.number translate=entity.validation.number> This field should be a number. </p> </div> </div> <div class=form-group> <label translate=dgdtoolApp.feedback.feedback_name for=field_feedback_name>Feedback_name</label> <input class=form-control name=feedback_name id=field_feedback_name ng-model=feedback.feedback_name required ng-maxlength=\"200\"/> <div ng-show=editForm.feedback_name.$invalid> <p class=help-block ng-show=editForm.feedback_name.$error.required translate=entity.validation.required> This field is required. </p> <p class=help-block ng-show=editForm.feedback_name.$error.maxlength translate=entity.validation.maxlength translate-value-max=200> This field cannot be longer than 200 characters. </p> </div> </div> <div class=form-group> <label translate=dgdtoolApp.feedback.description for=field_description>Description</label> <input class=form-control name=description id=field_description ng-model=feedback.description required ng-maxlength=\"2000\"/> <div ng-show=editForm.description.$invalid> <p class=help-block ng-show=editForm.description.$error.required translate=entity.validation.required> This field is required. </p> <p class=help-block ng-show=editForm.description.$error.maxlength translate=entity.validation.maxlength translate-value-max=2000> This field cannot be longer than 2000 characters. </p> </div> </div> <div class=form-group> <label translate=dgdtoolApp.feedback.status_id for=field_status_id>Status_id</label> <input type=number class=form-control name=status_id id=field_status_id ng-model=feedback.status_id required/> <div ng-show=editForm.status_id.$invalid> <p class=help-block ng-show=editForm.status_id.$error.required translate=entity.validation.required> This field is required. </p> <p class=help-block ng-show=editForm.status_id.$error.number translate=entity.validation.number> This field should be a number. </p> </div> </div> <div class=form-group> <label translate=dgdtoolApp.feedback.created_by for=field_created_by>Created_by</label> <input class=form-control name=created_by id=field_created_by ng-model=feedback.created_by required ng-maxlength=\"200\"/> <div ng-show=editForm.created_by.$invalid> <p class=help-block ng-show=editForm.created_by.$error.required translate=entity.validation.required> This field is required. </p> <p class=help-block ng-show=editForm.created_by.$error.maxlength translate=entity.validation.maxlength translate-value-max=200> This field cannot be longer than 200 characters. </p> </div> </div> <div class=form-group> <label translate=dgdtoolApp.feedback.created_date for=field_created_date>Created_date</label> <input type=date class=form-control name=created_date id=field_created_date ng-model=feedback.created_date required/> <div ng-show=editForm.created_date.$invalid> <p class=help-block ng-show=editForm.created_date.$error.required translate=entity.validation.required> This field is required. </p> </div> </div> <div class=form-group> <label translate=dgdtoolApp.feedback.modified_by for=field_modified_by>Modified_by</label> <input class=form-control name=modified_by id=field_modified_by ng-model=feedback.modified_by required ng-maxlength=\"200\"/> <div ng-show=editForm.modified_by.$invalid> <p class=help-block ng-show=editForm.modified_by.$error.required translate=entity.validation.required> This field is required. </p> <p class=help-block ng-show=editForm.modified_by.$error.maxlength translate=entity.validation.maxlength translate-value-max=200> This field cannot be longer than 200 characters. </p> </div> </div> <div class=form-group> <label translate=dgdtoolApp.feedback.modified_date for=field_modified_date>Modified_date</label> <input type=date class=form-control name=modified_date id=field_modified_date ng-model=feedback.modified_date required/> <div ng-show=editForm.modified_date.$invalid> <p class=help-block ng-show=editForm.modified_date.$error.required translate=entity.validation.required> This field is required. </p> </div> </div> </div> <div class=modal-footer> <button type=button class=\"btn btn-default\" data-dismiss=modal ng-click=clear()> <span class=\"glyphicon glyphicon-ban-circle\"></span>&nbsp;<span translate=entity.action.cancel>Cancel</span> </button> <button type=submit ng-disabled=\"editForm.$invalid || editForm.$submitted\" class=\"btn btn-primary\"> <span class=\"glyphicon glyphicon-save\"></span>&nbsp;<span translate=entity.action.save>Save</span> </button> </div> </form>"
  );


  $templateCache.put('scripts/app/entities/feedback/feedbacks.html',
    "<div> <h2 translate=dgdtoolApp.feedback.home.title>Feedbacks</h2> <jh-alert></jh-alert> <div class=container> <div class=row> <div class=col-md-4> <button class=\"btn btn-primary\" ui-sref=feedback.new> <span class=\"glyphicon glyphicon-flash\"></span> <span translate=dgdtoolApp.feedback.home.createLabel>Create a new Feedback</span> </button> </div> <div class=col-md-8> <form name=searchForm class=form-inline> <div class=form-group> <input class=form-control ng-model=searchQuery id=searchQuery placeholder=query> </div> <button class=\"btn btn-info\" ng-click=search()><span class=\"glyphicon glyphicon-search\"></span> <span>Search a Feedback</span> </button> </form> </div> </div> </div> <div class=\"modal fade\" id=deleteFeedbackConfirmation> <div class=modal-dialog> <div class=modal-content> <form name=deleteForm ng-submit=confirmDelete(feedback.id)> <div class=modal-header> <button type=button class=close data-dismiss=modal aria-hidden=true ng-click=clear()>&times;</button> <h4 class=modal-title translate=entity.delete.title>Confirm delete operation</h4> </div> <div class=modal-body> <p translate=dgdtoolApp.feedback.delete.question translate-values=\"{id: '{{feedback.id}}'}\">Are you sure you want to delete this Feedback?</p> </div> <div class=modal-footer> <button type=button class=\"btn btn-default\" data-dismiss=modal ng-click=clear()> <span class=\"glyphicon glyphicon-ban-circle\"></span>&nbsp;<span translate=entity.action.cancel>Cancel</span> </button> <button type=submit ng-disabled=deleteForm.$invalid class=\"btn btn-danger\"> <span class=\"glyphicon glyphicon-remove-circle\"></span>&nbsp;<span translate=entity.action.delete>Delete</span> </button> </div> </form> </div> </div> </div> <div class=table-responsive> <table class=\"table table-striped\"> <thead> <tr> <th translate=global.field.id>ID</th> <th translate=dgdtoolApp.feedback.feedback_type_id>Feedback_type_id</th> <th translate=dgdtoolApp.feedback.feedback_name>Feedback_name</th> <th translate=dgdtoolApp.feedback.description>Description</th> <th translate=dgdtoolApp.feedback.status_id>Status_id</th> <th translate=dgdtoolApp.feedback.created_by>Created_by</th> <th translate=dgdtoolApp.feedback.created_date>Created_date</th> <th translate=dgdtoolApp.feedback.modified_by>Modified_by</th> <th translate=dgdtoolApp.feedback.modified_date>Modified_date</th> <th></th> </tr> </thead> <tbody> <tr ng-repeat=\"feedback in feedbacks track by feedback.id\"> <td><a ui-sref=feedback.detail({id:feedback.id})>{{feedback.id}}</a></td> <td>{{feedback.feedback_type_id}}</td> <td>{{feedback.feedback_name}}</td> <td>{{feedback.description}}</td> <td>{{feedback.status_id}}</td> <td>{{feedback.created_by}}</td> <td>{{feedback.created_date | date:'mediumDate'}}</td> <td>{{feedback.modified_by}}</td> <td>{{feedback.modified_date | date:'mediumDate'}}</td> <td> <button type=submit ui-sref=feedback.detail({id:feedback.id}) class=\"btn btn-info btn-sm\"> <span class=\"glyphicon glyphicon-eye-open\"></span>&nbsp;<span translate=entity.action.view> View</span> </button> <button type=submit ui-sref=feedback.edit({id:feedback.id}) class=\"btn btn-primary btn-sm\"> <span class=\"glyphicon glyphicon-pencil\"></span>&nbsp;<span translate=entity.action.edit> Edit</span> </button> <button type=submit ng-click=delete(feedback.id) class=\"btn btn-danger btn-sm\"> <span class=\"glyphicon glyphicon-remove-circle\"></span>&nbsp;<span translate=entity.action.delete> Delete</span> </button> </td> </tr> </tbody> </table> <nav> <ul class=pager> <li ng-show=\"links['first'] >= 0\" ng-click=\"loadPage(links['first'])\"><a href=#>&lt;&lt;</a></li> <li ng-show=\"page > 0\" ng-click=\"loadPage(links['prev'] || 0)\"><a href=#>&lt;</a></li> <li ng-show=\"links['next']\" ng-click=\"loadPage(links['next'])\"><a href=#>&gt;</a></li> <li ng-show=\"links['last'] > 0\" ng-click=\"loadPage(links['last'])\"><a href=#>&gt;&gt;</a></li> </ul> </nav> </div> </div>"
  );


  $templateCache.put('scripts/app/entities/feedback_type/feedback_type-detail.html',
    "<div> <h2><span translate=dgdtoolApp.feedback_type.detail.title>Feedback_type</span> {{feedback_type.id}}</h2> <div class=table-responsive> <table class=\"table table-striped\"> <thead> <tr> <th translate=entity.detail.field>Field</th> <th translate=entity.detail.value>Value</th> </tr> </thead> <tbody> <tr> <td> <span translate=dgdtoolApp.feedback_type.feedback_type_name>Feedback_type_name</span> </td> <td> <span class=form-control-static>{{feedback_type.feedback_type_name}}</span> </td> </tr> <tr> <td> <span translate=dgdtoolApp.feedback_type.description>Description</span> </td> <td> <span class=form-control-static>{{feedback_type.description}}</span> </td> </tr> <tr> <td> <span translate=dgdtoolApp.feedback_type.status_id>Status_id</span> </td> <td> <span class=form-control-static>{{feedback_type.status_id}}</span> </td> </tr> <tr> <td> <span translate=dgdtoolApp.feedback_type.created_by>Created_by</span> </td> <td> <span class=form-control-static>{{feedback_type.created_by}}</span> </td> </tr> <tr> <td> <span translate=dgdtoolApp.feedback_type.created_date>Created_date</span> </td> <td> <span class=form-control-static>{{feedback_type.created_date | date:'mediumDate'}}</span> </td> </tr> <tr> <td> <span translate=dgdtoolApp.feedback_type.modified_by>Modified_by</span> </td> <td> <span class=form-control-static>{{feedback_type.modified_by}}</span> </td> </tr> <tr> <td> <span translate=dgdtoolApp.feedback_type.modified_date>Modified_date</span> </td> <td> <span class=form-control-static>{{feedback_type.modified_date | date:'mediumDate'}}</span> </td> </tr> </tbody> </table> </div> <button type=submit onclick=window.history.back() class=\"btn btn-info\"> <span class=\"glyphicon glyphicon-arrow-left\"></span>&nbsp;<span translate=entity.action.back> Back</span> </button> </div>"
  );


  $templateCache.put('scripts/app/entities/feedback_type/feedback_type-dialog.html',
    "<form name=editForm role=form novalidate ng-submit=save() show-validation> <div class=modal-header> <button type=button class=close data-dismiss=modal aria-hidden=true ng-click=clear()>&times;</button> <h4 class=modal-title id=myFeedback_typeLabel translate=dgdtoolApp.feedback_type.home.createOrEditLabel>Create or edit a Feedback_type</h4> </div> <div class=modal-body> <jh-alert-error></jh-alert-error> <div class=form-group> <label for=id translate=global.field.id>ID</label> <input class=form-control id=id name=id ng-model=feedback_type.id readonly/> </div> <div class=form-group> <label translate=dgdtoolApp.feedback_type.feedback_type_name for=field_feedback_type_name>Feedback_type_name</label> <input class=form-control name=feedback_type_name id=field_feedback_type_name ng-model=feedback_type.feedback_type_name required ng-maxlength=\"200\"/> <div ng-show=editForm.feedback_type_name.$invalid> <p class=help-block ng-show=editForm.feedback_type_name.$error.required translate=entity.validation.required> This field is required. </p> <p class=help-block ng-show=editForm.feedback_type_name.$error.maxlength translate=entity.validation.maxlength translate-value-max=200> This field cannot be longer than 200 characters. </p> </div> </div> <div class=form-group> <label translate=dgdtoolApp.feedback_type.description for=field_description>Description</label> <input class=form-control name=description id=field_description ng-model=feedback_type.description required ng-maxlength=\"2000\"/> <div ng-show=editForm.description.$invalid> <p class=help-block ng-show=editForm.description.$error.required translate=entity.validation.required> This field is required. </p> <p class=help-block ng-show=editForm.description.$error.maxlength translate=entity.validation.maxlength translate-value-max=2000> This field cannot be longer than 2000 characters. </p> </div> </div> <div class=form-group> <label translate=dgdtoolApp.feedback_type.status_id for=field_status_id>Status_id</label> <input type=number class=form-control name=status_id id=field_status_id ng-model=feedback_type.status_id required/> <div ng-show=editForm.status_id.$invalid> <p class=help-block ng-show=editForm.status_id.$error.required translate=entity.validation.required> This field is required. </p> <p class=help-block ng-show=editForm.status_id.$error.number translate=entity.validation.number> This field should be a number. </p> </div> </div> <div class=form-group> <label translate=dgdtoolApp.feedback_type.created_by for=field_created_by>Created_by</label> <input class=form-control name=created_by id=field_created_by ng-model=feedback_type.created_by required ng-maxlength=\"200\"/> <div ng-show=editForm.created_by.$invalid> <p class=help-block ng-show=editForm.created_by.$error.required translate=entity.validation.required> This field is required. </p> <p class=help-block ng-show=editForm.created_by.$error.maxlength translate=entity.validation.maxlength translate-value-max=200> This field cannot be longer than 200 characters. </p> </div> </div> <div class=form-group> <label translate=dgdtoolApp.feedback_type.created_date for=field_created_date>Created_date</label> <input type=date class=form-control name=created_date id=field_created_date ng-model=feedback_type.created_date required/> <div ng-show=editForm.created_date.$invalid> <p class=help-block ng-show=editForm.created_date.$error.required translate=entity.validation.required> This field is required. </p> </div> </div> <div class=form-group> <label translate=dgdtoolApp.feedback_type.modified_by for=field_modified_by>Modified_by</label> <input class=form-control name=modified_by id=field_modified_by ng-model=feedback_type.modified_by required ng-maxlength=\"200\"/> <div ng-show=editForm.modified_by.$invalid> <p class=help-block ng-show=editForm.modified_by.$error.required translate=entity.validation.required> This field is required. </p> <p class=help-block ng-show=editForm.modified_by.$error.maxlength translate=entity.validation.maxlength translate-value-max=200> This field cannot be longer than 200 characters. </p> </div> </div> <div class=form-group> <label translate=dgdtoolApp.feedback_type.modified_date for=field_modified_date>Modified_date</label> <input type=date class=form-control name=modified_date id=field_modified_date ng-model=feedback_type.modified_date required/> <div ng-show=editForm.modified_date.$invalid> <p class=help-block ng-show=editForm.modified_date.$error.required translate=entity.validation.required> This field is required. </p> </div> </div> </div> <div class=modal-footer> <button type=button class=\"btn btn-default\" data-dismiss=modal ng-click=clear()> <span class=\"glyphicon glyphicon-ban-circle\"></span>&nbsp;<span translate=entity.action.cancel>Cancel</span> </button> <button type=submit ng-disabled=\"editForm.$invalid || editForm.$submitted\" class=\"btn btn-primary\"> <span class=\"glyphicon glyphicon-save\"></span>&nbsp;<span translate=entity.action.save>Save</span> </button> </div> </form>"
  );


  $templateCache.put('scripts/app/entities/feedback_type/feedback_types.html',
    "<div> <h2 translate=dgdtoolApp.feedback_type.home.title>Feedback_types</h2> <jh-alert></jh-alert> <div class=container> <div class=row> <div class=col-md-4> <button class=\"btn btn-primary\" ui-sref=feedback_type.new> <span class=\"glyphicon glyphicon-flash\"></span> <span translate=dgdtoolApp.feedback_type.home.createLabel>Create a new Feedback_type</span> </button> </div> <div class=col-md-8> <form name=searchForm class=form-inline> <div class=form-group> <input class=form-control ng-model=searchQuery id=searchQuery placeholder=query> </div> <button class=\"btn btn-info\" ng-click=search()><span class=\"glyphicon glyphicon-search\"></span> <span>Search a Feedback_type</span> </button> </form> </div> </div> </div> <div class=\"modal fade\" id=deleteFeedback_typeConfirmation> <div class=modal-dialog> <div class=modal-content> <form name=deleteForm ng-submit=confirmDelete(feedback_type.id)> <div class=modal-header> <button type=button class=close data-dismiss=modal aria-hidden=true ng-click=clear()>&times;</button> <h4 class=modal-title translate=entity.delete.title>Confirm delete operation</h4> </div> <div class=modal-body> <p translate=dgdtoolApp.feedback_type.delete.question translate-values=\"{id: '{{feedback_type.id}}'}\">Are you sure you want to delete this Feedback_type?</p> </div> <div class=modal-footer> <button type=button class=\"btn btn-default\" data-dismiss=modal ng-click=clear()> <span class=\"glyphicon glyphicon-ban-circle\"></span>&nbsp;<span translate=entity.action.cancel>Cancel</span> </button> <button type=submit ng-disabled=deleteForm.$invalid class=\"btn btn-danger\"> <span class=\"glyphicon glyphicon-remove-circle\"></span>&nbsp;<span translate=entity.action.delete>Delete</span> </button> </div> </form> </div> </div> </div> <div class=table-responsive> <table class=\"table table-striped\"> <thead> <tr> <th translate=global.field.id>ID</th> <th translate=dgdtoolApp.feedback_type.feedback_type_name>Feedback_type_name</th> <th translate=dgdtoolApp.feedback_type.description>Description</th> <th translate=dgdtoolApp.feedback_type.status_id>Status_id</th> <th translate=dgdtoolApp.feedback_type.created_by>Created_by</th> <th translate=dgdtoolApp.feedback_type.created_date>Created_date</th> <th translate=dgdtoolApp.feedback_type.modified_by>Modified_by</th> <th translate=dgdtoolApp.feedback_type.modified_date>Modified_date</th> <th></th> </tr> </thead> <tbody> <tr ng-repeat=\"feedback_type in feedback_types track by feedback_type.id\"> <td><a ui-sref=feedback_type.detail({id:feedback_type.id})>{{feedback_type.id}}</a></td> <td>{{feedback_type.feedback_type_name}}</td> <td>{{feedback_type.description}}</td> <td>{{feedback_type.status_id}}</td> <td>{{feedback_type.created_by}}</td> <td>{{feedback_type.created_date | date:'mediumDate'}}</td> <td>{{feedback_type.modified_by}}</td> <td>{{feedback_type.modified_date | date:'mediumDate'}}</td> <td> <button type=submit ui-sref=feedback_type.detail({id:feedback_type.id}) class=\"btn btn-info btn-sm\"> <span class=\"glyphicon glyphicon-eye-open\"></span>&nbsp;<span translate=entity.action.view> View</span> </button> <button type=submit ui-sref=feedback_type.edit({id:feedback_type.id}) class=\"btn btn-primary btn-sm\"> <span class=\"glyphicon glyphicon-pencil\"></span>&nbsp;<span translate=entity.action.edit> Edit</span> </button> <button type=submit ng-click=delete(feedback_type.id) class=\"btn btn-danger btn-sm\"> <span class=\"glyphicon glyphicon-remove-circle\"></span>&nbsp;<span translate=entity.action.delete> Delete</span> </button> </td> </tr> </tbody> </table> <nav> <ul class=pager> <li ng-show=\"links['first'] >= 0\" ng-click=\"loadPage(links['first'])\"><a href=#>&lt;&lt;</a></li> <li ng-show=\"page > 0\" ng-click=\"loadPage(links['prev'] || 0)\"><a href=#>&lt;</a></li> <li ng-show=\"links['next']\" ng-click=\"loadPage(links['next'])\"><a href=#>&gt;</a></li> <li ng-show=\"links['last'] > 0\" ng-click=\"loadPage(links['last'])\"><a href=#>&gt;&gt;</a></li> </ul> </nav> </div> </div>"
  );


  $templateCache.put('scripts/app/entities/field_type/field_type-detail.html',
    "<div> <h2><span translate=dgdtoolApp.field_type.detail.title>Field_type</span> {{field_type.id}}</h2> <div class=table-responsive> <table class=\"table table-striped\"> <thead> <tr> <th translate=entity.detail.field>Field</th> <th translate=entity.detail.value>Value</th> </tr> </thead> <tbody> <tr> <td> <span translate=dgdtoolApp.field_type.field_type_name>Field_type_name</span> </td> <td> <span class=form-control-static>{{field_type.field_type_name}}</span> </td> </tr> <tr> <td> <span translate=dgdtoolApp.field_type.description>Description</span> </td> <td> <span class=form-control-static>{{field_type.description}}</span> </td> </tr> <tr> <td> <span translate=dgdtoolApp.field_type.status_id>Status_id</span> </td> <td> <span class=form-control-static>{{field_type.status_id}}</span> </td> </tr> <tr> <td> <span translate=dgdtoolApp.field_type.created_by>Created_by</span> </td> <td> <span class=form-control-static>{{field_type.created_by}}</span> </td> </tr> <tr> <td> <span translate=dgdtoolApp.field_type.created_date>Created_date</span> </td> <td> <span class=form-control-static>{{field_type.created_date | date:'mediumDate'}}</span> </td> </tr> <tr> <td> <span translate=dgdtoolApp.field_type.modified_by>Modified_by</span> </td> <td> <span class=form-control-static>{{field_type.modified_by}}</span> </td> </tr> <tr> <td> <span translate=dgdtoolApp.field_type.modified_date>Modified_date</span> </td> <td> <span class=form-control-static>{{field_type.modified_date | date:'mediumDate'}}</span> </td> </tr> </tbody> </table> </div> <button type=submit onclick=window.history.back() class=\"btn btn-info\"> <span class=\"glyphicon glyphicon-arrow-left\"></span>&nbsp;<span translate=entity.action.back> Back</span> </button> </div>"
  );


  $templateCache.put('scripts/app/entities/field_type/field_type-dialog.html',
    "<form name=editForm role=form novalidate ng-submit=save() show-validation> <div class=modal-header> <button type=button class=close data-dismiss=modal aria-hidden=true ng-click=clear()>&times;</button> <h4 class=modal-title id=myField_typeLabel translate=dgdtoolApp.field_type.home.createOrEditLabel>Create or edit a Field_type</h4> </div> <div class=modal-body> <jh-alert-error></jh-alert-error> <div class=form-group> <label for=id translate=global.field.id>ID</label> <input class=form-control id=id name=id ng-model=field_type.id readonly/> </div> <div class=form-group> <label translate=dgdtoolApp.field_type.field_type_name for=field_field_type_name>Field_type_name</label> <input class=form-control name=field_type_name id=field_field_type_name ng-model=field_type.field_type_name required ng-maxlength=\"200\"/> <div ng-show=editForm.field_type_name.$invalid> <p class=help-block ng-show=editForm.field_type_name.$error.required translate=entity.validation.required> This field is required. </p> <p class=help-block ng-show=editForm.field_type_name.$error.maxlength translate=entity.validation.maxlength translate-value-max=200> This field cannot be longer than 200 characters. </p> </div> </div> <div class=form-group> <label translate=dgdtoolApp.field_type.description for=field_description>Description</label> <input class=form-control name=description id=field_description ng-model=field_type.description required ng-maxlength=\"2000\"/> <div ng-show=editForm.description.$invalid> <p class=help-block ng-show=editForm.description.$error.required translate=entity.validation.required> This field is required. </p> <p class=help-block ng-show=editForm.description.$error.maxlength translate=entity.validation.maxlength translate-value-max=2000> This field cannot be longer than 2000 characters. </p> </div> </div> <div class=form-group> <label translate=dgdtoolApp.field_type.status_id for=field_status_id>Status_id</label> <input type=number class=form-control name=status_id id=field_status_id ng-model=field_type.status_id required/> <div ng-show=editForm.status_id.$invalid> <p class=help-block ng-show=editForm.status_id.$error.required translate=entity.validation.required> This field is required. </p> <p class=help-block ng-show=editForm.status_id.$error.number translate=entity.validation.number> This field should be a number. </p> </div> </div> <div class=form-group> <label translate=dgdtoolApp.field_type.created_by for=field_created_by>Created_by</label> <input class=form-control name=created_by id=field_created_by ng-model=field_type.created_by required ng-maxlength=\"200\"/> <div ng-show=editForm.created_by.$invalid> <p class=help-block ng-show=editForm.created_by.$error.required translate=entity.validation.required> This field is required. </p> <p class=help-block ng-show=editForm.created_by.$error.maxlength translate=entity.validation.maxlength translate-value-max=200> This field cannot be longer than 200 characters. </p> </div> </div> <div class=form-group> <label translate=dgdtoolApp.field_type.created_date for=field_created_date>Created_date</label> <input type=date class=form-control name=created_date id=field_created_date ng-model=field_type.created_date required/> <div ng-show=editForm.created_date.$invalid> <p class=help-block ng-show=editForm.created_date.$error.required translate=entity.validation.required> This field is required. </p> </div> </div> <div class=form-group> <label translate=dgdtoolApp.field_type.modified_by for=field_modified_by>Modified_by</label> <input class=form-control name=modified_by id=field_modified_by ng-model=field_type.modified_by required ng-maxlength=\"200\"/> <div ng-show=editForm.modified_by.$invalid> <p class=help-block ng-show=editForm.modified_by.$error.required translate=entity.validation.required> This field is required. </p> <p class=help-block ng-show=editForm.modified_by.$error.maxlength translate=entity.validation.maxlength translate-value-max=200> This field cannot be longer than 200 characters. </p> </div> </div> <div class=form-group> <label translate=dgdtoolApp.field_type.modified_date for=field_modified_date>Modified_date</label> <input type=date class=form-control name=modified_date id=field_modified_date ng-model=field_type.modified_date required/> <div ng-show=editForm.modified_date.$invalid> <p class=help-block ng-show=editForm.modified_date.$error.required translate=entity.validation.required> This field is required. </p> </div> </div> </div> <div class=modal-footer> <button type=button class=\"btn btn-default\" data-dismiss=modal ng-click=clear()> <span class=\"glyphicon glyphicon-ban-circle\"></span>&nbsp;<span translate=entity.action.cancel>Cancel</span> </button> <button type=submit ng-disabled=\"editForm.$invalid || editForm.$submitted\" class=\"btn btn-primary\"> <span class=\"glyphicon glyphicon-save\"></span>&nbsp;<span translate=entity.action.save>Save</span> </button> </div> </form>"
  );


  $templateCache.put('scripts/app/entities/field_type/field_types.html',
    "<div> <h2 translate=dgdtoolApp.field_type.home.title>Field_types</h2> <jh-alert></jh-alert> <div class=container> <div class=row> <div class=col-md-4> <button class=\"btn btn-primary\" ui-sref=field_type.new> <span class=\"glyphicon glyphicon-flash\"></span> <span translate=dgdtoolApp.field_type.home.createLabel>Create a new Field_type</span> </button> </div> <div class=col-md-8> <form name=searchForm class=form-inline> <div class=form-group> <input class=form-control ng-model=searchQuery id=searchQuery placeholder=query> </div> <button class=\"btn btn-info\" ng-click=search()><span class=\"glyphicon glyphicon-search\"></span> <span>Search a Field_type</span> </button> </form> </div> </div> </div> <div class=\"modal fade\" id=deleteField_typeConfirmation> <div class=modal-dialog> <div class=modal-content> <form name=deleteForm ng-submit=confirmDelete(field_type.id)> <div class=modal-header> <button type=button class=close data-dismiss=modal aria-hidden=true ng-click=clear()>&times;</button> <h4 class=modal-title translate=entity.delete.title>Confirm delete operation</h4> </div> <div class=modal-body> <p translate=dgdtoolApp.field_type.delete.question translate-values=\"{id: '{{field_type.id}}'}\">Are you sure you want to delete this Field_type?</p> </div> <div class=modal-footer> <button type=button class=\"btn btn-default\" data-dismiss=modal ng-click=clear()> <span class=\"glyphicon glyphicon-ban-circle\"></span>&nbsp;<span translate=entity.action.cancel>Cancel</span> </button> <button type=submit ng-disabled=deleteForm.$invalid class=\"btn btn-danger\"> <span class=\"glyphicon glyphicon-remove-circle\"></span>&nbsp;<span translate=entity.action.delete>Delete</span> </button> </div> </form> </div> </div> </div> <div class=table-responsive> <table class=\"table table-striped\"> <thead> <tr> <th translate=global.field.id>ID</th> <th translate=dgdtoolApp.field_type.field_type_name>Field_type_name</th> <th translate=dgdtoolApp.field_type.description>Description</th> <th translate=dgdtoolApp.field_type.status_id>Status_id</th> <th translate=dgdtoolApp.field_type.created_by>Created_by</th> <th translate=dgdtoolApp.field_type.created_date>Created_date</th> <th translate=dgdtoolApp.field_type.modified_by>Modified_by</th> <th translate=dgdtoolApp.field_type.modified_date>Modified_date</th> <th></th> </tr> </thead> <tbody> <tr ng-repeat=\"field_type in field_types track by field_type.id\"> <td><a ui-sref=field_type.detail({id:field_type.id})>{{field_type.id}}</a></td> <td>{{field_type.field_type_name}}</td> <td>{{field_type.description}}</td> <td>{{field_type.status_id}}</td> <td>{{field_type.created_by}}</td> <td>{{field_type.created_date | date:'mediumDate'}}</td> <td>{{field_type.modified_by}}</td> <td>{{field_type.modified_date | date:'mediumDate'}}</td> <td> <button type=submit ui-sref=field_type.detail({id:field_type.id}) class=\"btn btn-info btn-sm\"> <span class=\"glyphicon glyphicon-eye-open\"></span>&nbsp;<span translate=entity.action.view> View</span> </button> <button type=submit ui-sref=field_type.edit({id:field_type.id}) class=\"btn btn-primary btn-sm\"> <span class=\"glyphicon glyphicon-pencil\"></span>&nbsp;<span translate=entity.action.edit> Edit</span> </button> <button type=submit ng-click=delete(field_type.id) class=\"btn btn-danger btn-sm\"> <span class=\"glyphicon glyphicon-remove-circle\"></span>&nbsp;<span translate=entity.action.delete> Delete</span> </button> </td> </tr> </tbody> </table> <nav> <ul class=pager> <li ng-show=\"links['first'] >= 0\" ng-click=\"loadPage(links['first'])\"><a href=#>&lt;&lt;</a></li> <li ng-show=\"page > 0\" ng-click=\"loadPage(links['prev'] || 0)\"><a href=#>&lt;</a></li> <li ng-show=\"links['next']\" ng-click=\"loadPage(links['next'])\"><a href=#>&gt;</a></li> <li ng-show=\"links['last'] > 0\" ng-click=\"loadPage(links['last'])\"><a href=#>&gt;&gt;</a></li> </ul> </nav> </div> </div>"
  );


  $templateCache.put('scripts/app/entities/frequency/frequency-detail.html',
    "<div> <h2><span translate=dgdtoolApp.frequency.detail.title>Frequency</span> {{frequency.id}}</h2> <div class=table-responsive> <table class=\"table table-striped\"> <thead> <tr> <th translate=entity.detail.field>Field</th> <th translate=entity.detail.value>Value</th> </tr> </thead> <tbody> <tr> <td> <span translate=dgdtoolApp.frequency.frequency_name>Frequency_name</span> </td> <td> <span class=form-control-static>{{frequency.frequency_name}}</span> </td> </tr> <tr> <td> <span translate=dgdtoolApp.frequency.description>Description</span> </td> <td> <span class=form-control-static>{{frequency.description}}</span> </td> </tr> <tr> <td> <span translate=dgdtoolApp.frequency.status_id>Status_id</span> </td> <td> <span class=form-control-static>{{frequency.status_id}}</span> </td> </tr> <tr> <td> <span translate=dgdtoolApp.frequency.created_by>Created_by</span> </td> <td> <span class=form-control-static>{{frequency.created_by}}</span> </td> </tr> <tr> <td> <span translate=dgdtoolApp.frequency.created_date>Created_date</span> </td> <td> <span class=form-control-static>{{frequency.created_date | date:'mediumDate'}}</span> </td> </tr> <tr> <td> <span translate=dgdtoolApp.frequency.modified_by>Modified_by</span> </td> <td> <span class=form-control-static>{{frequency.modified_by}}</span> </td> </tr> <tr> <td> <span translate=dgdtoolApp.frequency.modified_date>Modified_date</span> </td> <td> <span class=form-control-static>{{frequency.modified_date | date:'mediumDate'}}</span> </td> </tr> </tbody> </table> </div> <button type=submit onclick=window.history.back() class=\"btn btn-info\"> <span class=\"glyphicon glyphicon-arrow-left\"></span>&nbsp;<span translate=entity.action.back> Back</span> </button> </div>"
  );


  $templateCache.put('scripts/app/entities/frequency/frequency-dialog.html',
    "<form name=editForm role=form novalidate ng-submit=save() show-validation> <div class=modal-header> <button type=button class=close data-dismiss=modal aria-hidden=true ng-click=clear()>&times;</button> <h4 class=modal-title id=myFrequencyLabel translate=dgdtoolApp.frequency.home.createOrEditLabel>Create or edit a Frequency</h4> </div> <div class=modal-body> <jh-alert-error></jh-alert-error> <div class=form-group> <label for=id translate=global.field.id>ID</label> <input class=form-control id=id name=id ng-model=frequency.id readonly/> </div> <div class=form-group> <label translate=dgdtoolApp.frequency.frequency_name for=field_frequency_name>Frequency_name</label> <input class=form-control name=frequency_name id=field_frequency_name ng-model=frequency.frequency_name required ng-maxlength=\"200\"/> <div ng-show=editForm.frequency_name.$invalid> <p class=help-block ng-show=editForm.frequency_name.$error.required translate=entity.validation.required> This field is required. </p> <p class=help-block ng-show=editForm.frequency_name.$error.maxlength translate=entity.validation.maxlength translate-value-max=200> This field cannot be longer than 200 characters. </p> </div> </div> <div class=form-group> <label translate=dgdtoolApp.frequency.description for=field_description>Description</label> <input class=form-control name=description id=field_description ng-model=frequency.description required ng-maxlength=\"2000\"/> <div ng-show=editForm.description.$invalid> <p class=help-block ng-show=editForm.description.$error.required translate=entity.validation.required> This field is required. </p> <p class=help-block ng-show=editForm.description.$error.maxlength translate=entity.validation.maxlength translate-value-max=2000> This field cannot be longer than 2000 characters. </p> </div> </div> <div class=form-group> <label translate=dgdtoolApp.frequency.status_id for=field_status_id>Status_id</label> <input type=number class=form-control name=status_id id=field_status_id ng-model=frequency.status_id required/> <div ng-show=editForm.status_id.$invalid> <p class=help-block ng-show=editForm.status_id.$error.required translate=entity.validation.required> This field is required. </p> <p class=help-block ng-show=editForm.status_id.$error.number translate=entity.validation.number> This field should be a number. </p> </div> </div> <div class=form-group> <label translate=dgdtoolApp.frequency.created_by for=field_created_by>Created_by</label> <input class=form-control name=created_by id=field_created_by ng-model=frequency.created_by required ng-maxlength=\"200\"/> <div ng-show=editForm.created_by.$invalid> <p class=help-block ng-show=editForm.created_by.$error.required translate=entity.validation.required> This field is required. </p> <p class=help-block ng-show=editForm.created_by.$error.maxlength translate=entity.validation.maxlength translate-value-max=200> This field cannot be longer than 200 characters. </p> </div> </div> <div class=form-group> <label translate=dgdtoolApp.frequency.created_date for=field_created_date>Created_date</label> <input type=date class=form-control name=created_date id=field_created_date ng-model=frequency.created_date required/> <div ng-show=editForm.created_date.$invalid> <p class=help-block ng-show=editForm.created_date.$error.required translate=entity.validation.required> This field is required. </p> </div> </div> <div class=form-group> <label translate=dgdtoolApp.frequency.modified_by for=field_modified_by>Modified_by</label> <input class=form-control name=modified_by id=field_modified_by ng-model=frequency.modified_by required ng-maxlength=\"200\"/> <div ng-show=editForm.modified_by.$invalid> <p class=help-block ng-show=editForm.modified_by.$error.required translate=entity.validation.required> This field is required. </p> <p class=help-block ng-show=editForm.modified_by.$error.maxlength translate=entity.validation.maxlength translate-value-max=200> This field cannot be longer than 200 characters. </p> </div> </div> <div class=form-group> <label translate=dgdtoolApp.frequency.modified_date for=field_modified_date>Modified_date</label> <input type=date class=form-control name=modified_date id=field_modified_date ng-model=frequency.modified_date required/> <div ng-show=editForm.modified_date.$invalid> <p class=help-block ng-show=editForm.modified_date.$error.required translate=entity.validation.required> This field is required. </p> </div> </div> </div> <div class=modal-footer> <button type=button class=\"btn btn-default\" data-dismiss=modal ng-click=clear()> <span class=\"glyphicon glyphicon-ban-circle\"></span>&nbsp;<span translate=entity.action.cancel>Cancel</span> </button> <button type=submit ng-disabled=\"editForm.$invalid || editForm.$submitted\" class=\"btn btn-primary\"> <span class=\"glyphicon glyphicon-save\"></span>&nbsp;<span translate=entity.action.save>Save</span> </button> </div> </form>"
  );


  $templateCache.put('scripts/app/entities/frequency/frequencys.html',
    "<div> <h2 translate=dgdtoolApp.frequency.home.title>Frequencys</h2> <jh-alert></jh-alert> <div class=container> <div class=row> <div class=col-md-4> <button class=\"btn btn-primary\" ui-sref=frequency.new> <span class=\"glyphicon glyphicon-flash\"></span> <span translate=dgdtoolApp.frequency.home.createLabel>Create a new Frequency</span> </button> </div> <div class=col-md-8> <form name=searchForm class=form-inline> <div class=form-group> <input class=form-control ng-model=searchQuery id=searchQuery placeholder=query> </div> <button class=\"btn btn-info\" ng-click=search()><span class=\"glyphicon glyphicon-search\"></span> <span>Search a Frequency</span> </button> </form> </div> </div> </div> <div class=\"modal fade\" id=deleteFrequencyConfirmation> <div class=modal-dialog> <div class=modal-content> <form name=deleteForm ng-submit=confirmDelete(frequency.id)> <div class=modal-header> <button type=button class=close data-dismiss=modal aria-hidden=true ng-click=clear()>&times;</button> <h4 class=modal-title translate=entity.delete.title>Confirm delete operation</h4> </div> <div class=modal-body> <p translate=dgdtoolApp.frequency.delete.question translate-values=\"{id: '{{frequency.id}}'}\">Are you sure you want to delete this Frequency?</p> </div> <div class=modal-footer> <button type=button class=\"btn btn-default\" data-dismiss=modal ng-click=clear()> <span class=\"glyphicon glyphicon-ban-circle\"></span>&nbsp;<span translate=entity.action.cancel>Cancel</span> </button> <button type=submit ng-disabled=deleteForm.$invalid class=\"btn btn-danger\"> <span class=\"glyphicon glyphicon-remove-circle\"></span>&nbsp;<span translate=entity.action.delete>Delete</span> </button> </div> </form> </div> </div> </div> <div class=table-responsive> <table class=\"table table-striped\"> <thead> <tr> <th translate=global.field.id>ID</th> <th translate=dgdtoolApp.frequency.frequency_name>Frequency_name</th> <th translate=dgdtoolApp.frequency.description>Description</th> <th translate=dgdtoolApp.frequency.status_id>Status_id</th> <th translate=dgdtoolApp.frequency.created_by>Created_by</th> <th translate=dgdtoolApp.frequency.created_date>Created_date</th> <th translate=dgdtoolApp.frequency.modified_by>Modified_by</th> <th translate=dgdtoolApp.frequency.modified_date>Modified_date</th> <th></th> </tr> </thead> <tbody> <tr ng-repeat=\"frequency in frequencys track by frequency.id\"> <td><a ui-sref=frequency.detail({id:frequency.id})>{{frequency.id}}</a></td> <td>{{frequency.frequency_name}}</td> <td>{{frequency.description}}</td> <td>{{frequency.status_id}}</td> <td>{{frequency.created_by}}</td> <td>{{frequency.created_date | date:'mediumDate'}}</td> <td>{{frequency.modified_by}}</td> <td>{{frequency.modified_date | date:'mediumDate'}}</td> <td> <button type=submit ui-sref=frequency.detail({id:frequency.id}) class=\"btn btn-info btn-sm\"> <span class=\"glyphicon glyphicon-eye-open\"></span>&nbsp;<span translate=entity.action.view> View</span> </button> <button type=submit ui-sref=frequency.edit({id:frequency.id}) class=\"btn btn-primary btn-sm\"> <span class=\"glyphicon glyphicon-pencil\"></span>&nbsp;<span translate=entity.action.edit> Edit</span> </button> <button type=submit ng-click=delete(frequency.id) class=\"btn btn-danger btn-sm\"> <span class=\"glyphicon glyphicon-remove-circle\"></span>&nbsp;<span translate=entity.action.delete> Delete</span> </button> </td> </tr> </tbody> </table> <nav> <ul class=pager> <li ng-show=\"links['first'] >= 0\" ng-click=\"loadPage(links['first'])\"><a href=#>&lt;&lt;</a></li> <li ng-show=\"page > 0\" ng-click=\"loadPage(links['prev'] || 0)\"><a href=#>&lt;</a></li> <li ng-show=\"links['next']\" ng-click=\"loadPage(links['next'])\"><a href=#>&gt;</a></li> <li ng-show=\"links['last'] > 0\" ng-click=\"loadPage(links['last'])\"><a href=#>&gt;&gt;</a></li> </ul> </nav> </div> </div>"
  );


  $templateCache.put('scripts/app/entities/initiative/initiative-detail.html',
    "<div> <h2><span translate=dgdtoolApp.initiative.detail.title>Initiative</span> {{initiative.id}}</h2> <div class=table-responsive> <table class=\"table table-striped\"> <thead> <tr> <th translate=entity.detail.field>Field</th> <th translate=entity.detail.value>Value</th> </tr> </thead> <tbody> <tr> <td> <span translate=dgdtoolApp.initiative.initiative_name>Initiative_name</span> </td> <td> <span class=form-control-static>{{initiative.initiative_name}}</span> </td> </tr> <tr> <td> <span translate=dgdtoolApp.initiative.initiative_type_id>Initiative_type_id</span> </td> <td> <span class=form-control-static>{{initiative.initiative_type_id}}</span> </td> </tr> <tr> <td> <span translate=dgdtoolApp.initiative.description>Description</span> </td> <td> <span class=form-control-static>{{initiative.description}}</span> </td> </tr> <tr> <td> <span translate=dgdtoolApp.initiative.status_id>Status_id</span> </td> <td> <span class=form-control-static>{{initiative.status_id}}</span> </td> </tr> <tr> <td> <span translate=dgdtoolApp.initiative.created_by>Created_by</span> </td> <td> <span class=form-control-static>{{initiative.created_by}}</span> </td> </tr> <tr> <td> <span translate=dgdtoolApp.initiative.created_date>Created_date</span> </td> <td> <span class=form-control-static>{{initiative.created_date | date:'mediumDate'}}</span> </td> </tr> <tr> <td> <span translate=dgdtoolApp.initiative.modified_by>Modified_by</span> </td> <td> <span class=form-control-static>{{initiative.modified_by}}</span> </td> </tr> <tr> <td> <span translate=dgdtoolApp.initiative.modified_date>Modified_date</span> </td> <td> <span class=form-control-static>{{initiative.modified_date | date:'mediumDate'}}</span> </td> </tr> </tbody> </table> </div> <button type=submit onclick=window.history.back() class=\"btn btn-info\"> <span class=\"glyphicon glyphicon-arrow-left\"></span>&nbsp;<span translate=entity.action.back> Back</span> </button> </div>"
  );


  $templateCache.put('scripts/app/entities/initiative/initiative-dialog.html',
    "<form name=editForm role=form novalidate ng-submit=save() show-validation> <div class=modal-header> <button type=button class=close data-dismiss=modal aria-hidden=true ng-click=clear()>&times;</button> <h4 class=modal-title id=myInitiativeLabel translate=dgdtoolApp.initiative.home.createOrEditLabel>Create or edit a Initiative</h4> </div> <div class=modal-body> <jh-alert-error></jh-alert-error> <div class=form-group> <label for=id translate=global.field.id>ID</label> <input class=form-control id=id name=id ng-model=initiative.id readonly/> </div> <div class=form-group> <label translate=dgdtoolApp.initiative.initiative_name for=field_initiative_name>Initiative_name</label> <input class=form-control name=initiative_name id=field_initiative_name ng-model=initiative.initiative_name required ng-maxlength=\"200\"/> <div ng-show=editForm.initiative_name.$invalid> <p class=help-block ng-show=editForm.initiative_name.$error.required translate=entity.validation.required> This field is required. </p> <p class=help-block ng-show=editForm.initiative_name.$error.maxlength translate=entity.validation.maxlength translate-value-max=200> This field cannot be longer than 200 characters. </p> </div> </div> <div class=form-group> <label translate=dgdtoolApp.initiative.initiative_type_id for=field_initiative_type_id>Initiative_type_id</label> <input type=number class=form-control name=initiative_type_id id=field_initiative_type_id ng-model=initiative.initiative_type_id required/> <div ng-show=editForm.initiative_type_id.$invalid> <p class=help-block ng-show=editForm.initiative_type_id.$error.required translate=entity.validation.required> This field is required. </p> <p class=help-block ng-show=editForm.initiative_type_id.$error.number translate=entity.validation.number> This field should be a number. </p> </div> </div> <div class=form-group> <label translate=dgdtoolApp.initiative.description for=field_description>Description</label> <input class=form-control name=description id=field_description ng-model=initiative.description required ng-maxlength=\"2000\"/> <div ng-show=editForm.description.$invalid> <p class=help-block ng-show=editForm.description.$error.required translate=entity.validation.required> This field is required. </p> <p class=help-block ng-show=editForm.description.$error.maxlength translate=entity.validation.maxlength translate-value-max=2000> This field cannot be longer than 2000 characters. </p> </div> </div> <div class=form-group> <label translate=dgdtoolApp.initiative.status_id for=field_status_id>Status_id</label> <input type=number class=form-control name=status_id id=field_status_id ng-model=initiative.status_id required/> <div ng-show=editForm.status_id.$invalid> <p class=help-block ng-show=editForm.status_id.$error.required translate=entity.validation.required> This field is required. </p> <p class=help-block ng-show=editForm.status_id.$error.number translate=entity.validation.number> This field should be a number. </p> </div> </div> <div class=form-group> <label translate=dgdtoolApp.initiative.created_by for=field_created_by>Created_by</label> <input class=form-control name=created_by id=field_created_by ng-model=initiative.created_by required ng-maxlength=\"200\"/> <div ng-show=editForm.created_by.$invalid> <p class=help-block ng-show=editForm.created_by.$error.required translate=entity.validation.required> This field is required. </p> <p class=help-block ng-show=editForm.created_by.$error.maxlength translate=entity.validation.maxlength translate-value-max=200> This field cannot be longer than 200 characters. </p> </div> </div> <div class=form-group> <label translate=dgdtoolApp.initiative.created_date for=field_created_date>Created_date</label> <input type=date class=form-control name=created_date id=field_created_date ng-model=initiative.created_date required/> <div ng-show=editForm.created_date.$invalid> <p class=help-block ng-show=editForm.created_date.$error.required translate=entity.validation.required> This field is required. </p> </div> </div> <div class=form-group> <label translate=dgdtoolApp.initiative.modified_by for=field_modified_by>Modified_by</label> <input class=form-control name=modified_by id=field_modified_by ng-model=initiative.modified_by required ng-maxlength=\"200\"/> <div ng-show=editForm.modified_by.$invalid> <p class=help-block ng-show=editForm.modified_by.$error.required translate=entity.validation.required> This field is required. </p> <p class=help-block ng-show=editForm.modified_by.$error.maxlength translate=entity.validation.maxlength translate-value-max=200> This field cannot be longer than 200 characters. </p> </div> </div> <div class=form-group> <label translate=dgdtoolApp.initiative.modified_date for=field_modified_date>Modified_date</label> <input type=date class=form-control name=modified_date id=field_modified_date ng-model=initiative.modified_date required/> <div ng-show=editForm.modified_date.$invalid> <p class=help-block ng-show=editForm.modified_date.$error.required translate=entity.validation.required> This field is required. </p> </div> </div> </div> <div class=modal-footer> <button type=button class=\"btn btn-default\" data-dismiss=modal ng-click=clear()> <span class=\"glyphicon glyphicon-ban-circle\"></span>&nbsp;<span translate=entity.action.cancel>Cancel</span> </button> <button type=submit ng-disabled=\"editForm.$invalid || editForm.$submitted\" class=\"btn btn-primary\"> <span class=\"glyphicon glyphicon-save\"></span>&nbsp;<span translate=entity.action.save>Save</span> </button> </div> </form>"
  );


  $templateCache.put('scripts/app/entities/initiative/initiatives.html',
    "<div> <h2 translate=dgdtoolApp.initiative.home.title>Initiatives</h2> <jh-alert></jh-alert> <div class=container> <div class=row> <div class=col-md-4> <button class=\"btn btn-primary\" ui-sref=initiative.new> <span class=\"glyphicon glyphicon-flash\"></span> <span translate=dgdtoolApp.initiative.home.createLabel>Create a new Initiative</span> </button> </div> <div class=col-md-8> <form name=searchForm class=form-inline> <div class=form-group> <input class=form-control ng-model=searchQuery id=searchQuery placeholder=query> </div> <button class=\"btn btn-info\" ng-click=search()><span class=\"glyphicon glyphicon-search\"></span> <span>Search a Initiative</span> </button> </form> </div> </div> </div> <div class=\"modal fade\" id=deleteInitiativeConfirmation> <div class=modal-dialog> <div class=modal-content> <form name=deleteForm ng-submit=confirmDelete(initiative.id)> <div class=modal-header> <button type=button class=close data-dismiss=modal aria-hidden=true ng-click=clear()>&times;</button> <h4 class=modal-title translate=entity.delete.title>Confirm delete operation</h4> </div> <div class=modal-body> <p translate=dgdtoolApp.initiative.delete.question translate-values=\"{id: '{{initiative.id}}'}\">Are you sure you want to delete this Initiative?</p> </div> <div class=modal-footer> <button type=button class=\"btn btn-default\" data-dismiss=modal ng-click=clear()> <span class=\"glyphicon glyphicon-ban-circle\"></span>&nbsp;<span translate=entity.action.cancel>Cancel</span> </button> <button type=submit ng-disabled=deleteForm.$invalid class=\"btn btn-danger\"> <span class=\"glyphicon glyphicon-remove-circle\"></span>&nbsp;<span translate=entity.action.delete>Delete</span> </button> </div> </form> </div> </div> </div> <div class=table-responsive> <table class=\"table table-striped\"> <thead> <tr> <th translate=global.field.id>ID</th> <th translate=dgdtoolApp.initiative.initiative_name>Initiative_name</th> <th translate=dgdtoolApp.initiative.initiative_type_id>Initiative_type_id</th> <th translate=dgdtoolApp.initiative.description>Description</th> <th translate=dgdtoolApp.initiative.status_id>Status_id</th> <th translate=dgdtoolApp.initiative.created_by>Created_by</th> <th translate=dgdtoolApp.initiative.created_date>Created_date</th> <th translate=dgdtoolApp.initiative.modified_by>Modified_by</th> <th translate=dgdtoolApp.initiative.modified_date>Modified_date</th> <th></th> </tr> </thead> <tbody> <tr ng-repeat=\"initiative in initiatives track by initiative.id\"> <td><a ui-sref=initiative.detail({id:initiative.id})>{{initiative.id}}</a></td> <td>{{initiative.initiative_name}}</td> <td>{{initiative.initiative_type_id}}</td> <td>{{initiative.description}}</td> <td>{{initiative.status_id}}</td> <td>{{initiative.created_by}}</td> <td>{{initiative.created_date | date:'mediumDate'}}</td> <td>{{initiative.modified_by}}</td> <td>{{initiative.modified_date | date:'mediumDate'}}</td> <td> <button type=submit ui-sref=initiative.detail({id:initiative.id}) class=\"btn btn-info btn-sm\"> <span class=\"glyphicon glyphicon-eye-open\"></span>&nbsp;<span translate=entity.action.view> View</span> </button> <button type=submit ui-sref=initiative.edit({id:initiative.id}) class=\"btn btn-primary btn-sm\"> <span class=\"glyphicon glyphicon-pencil\"></span>&nbsp;<span translate=entity.action.edit> Edit</span> </button> <button type=submit ng-click=delete(initiative.id) class=\"btn btn-danger btn-sm\"> <span class=\"glyphicon glyphicon-remove-circle\"></span>&nbsp;<span translate=entity.action.delete> Delete</span> </button> </td> </tr> </tbody> </table> <nav> <ul class=pager> <li ng-show=\"links['first'] >= 0\" ng-click=\"loadPage(links['first'])\"><a href=#>&lt;&lt;</a></li> <li ng-show=\"page > 0\" ng-click=\"loadPage(links['prev'] || 0)\"><a href=#>&lt;</a></li> <li ng-show=\"links['next']\" ng-click=\"loadPage(links['next'])\"><a href=#>&gt;</a></li> <li ng-show=\"links['last'] > 0\" ng-click=\"loadPage(links['last'])\"><a href=#>&gt;&gt;</a></li> </ul> </nav> </div> </div>"
  );


  $templateCache.put('scripts/app/entities/initiative_type/initiative_type-detail.html',
    "<div> <h2><span translate=dgdtoolApp.initiative_type.detail.title>Initiative_type</span> {{initiative_type.id}}</h2> <div class=table-responsive> <table class=\"table table-striped\"> <thead> <tr> <th translate=entity.detail.field>Field</th> <th translate=entity.detail.value>Value</th> </tr> </thead> <tbody> <tr> <td> <span translate=dgdtoolApp.initiative_type.initiative_type_name>Initiative_type_name</span> </td> <td> <span class=form-control-static>{{initiative_type.initiative_type_name}}</span> </td> </tr> <tr> <td> <span translate=dgdtoolApp.initiative_type.description>Description</span> </td> <td> <span class=form-control-static>{{initiative_type.description}}</span> </td> </tr> <tr> <td> <span translate=dgdtoolApp.initiative_type.status_id>Status_id</span> </td> <td> <span class=form-control-static>{{initiative_type.status_id}}</span> </td> </tr> <tr> <td> <span translate=dgdtoolApp.initiative_type.created_by>Created_by</span> </td> <td> <span class=form-control-static>{{initiative_type.created_by}}</span> </td> </tr> <tr> <td> <span translate=dgdtoolApp.initiative_type.created_date>Created_date</span> </td> <td> <span class=form-control-static>{{initiative_type.created_date | date:'mediumDate'}}</span> </td> </tr> <tr> <td> <span translate=dgdtoolApp.initiative_type.modified_by>Modified_by</span> </td> <td> <span class=form-control-static>{{initiative_type.modified_by}}</span> </td> </tr> <tr> <td> <span translate=dgdtoolApp.initiative_type.modified_date>Modified_date</span> </td> <td> <span class=form-control-static>{{initiative_type.modified_date | date:'mediumDate'}}</span> </td> </tr> </tbody> </table> </div> <button type=submit onclick=window.history.back() class=\"btn btn-info\"> <span class=\"glyphicon glyphicon-arrow-left\"></span>&nbsp;<span translate=entity.action.back> Back</span> </button> </div>"
  );


  $templateCache.put('scripts/app/entities/initiative_type/initiative_type-dialog.html',
    "<form name=editForm role=form novalidate ng-submit=save() show-validation> <div class=modal-header> <button type=button class=close data-dismiss=modal aria-hidden=true ng-click=clear()>&times;</button> <h4 class=modal-title id=myInitiative_typeLabel translate=dgdtoolApp.initiative_type.home.createOrEditLabel>Create or edit a Initiative_type</h4> </div> <div class=modal-body> <jh-alert-error></jh-alert-error> <div class=form-group> <label for=id translate=global.field.id>ID</label> <input class=form-control id=id name=id ng-model=initiative_type.id readonly/> </div> <div class=form-group> <label translate=dgdtoolApp.initiative_type.initiative_type_name for=field_initiative_type_name>Initiative_type_name</label> <input class=form-control name=initiative_type_name id=field_initiative_type_name ng-model=initiative_type.initiative_type_name required ng-maxlength=\"200\"/> <div ng-show=editForm.initiative_type_name.$invalid> <p class=help-block ng-show=editForm.initiative_type_name.$error.required translate=entity.validation.required> This field is required. </p> <p class=help-block ng-show=editForm.initiative_type_name.$error.maxlength translate=entity.validation.maxlength translate-value-max=200> This field cannot be longer than 200 characters. </p> </div> </div> <div class=form-group> <label translate=dgdtoolApp.initiative_type.description for=field_description>Description</label> <input class=form-control name=description id=field_description ng-model=initiative_type.description required ng-maxlength=\"2000\"/> <div ng-show=editForm.description.$invalid> <p class=help-block ng-show=editForm.description.$error.required translate=entity.validation.required> This field is required. </p> <p class=help-block ng-show=editForm.description.$error.maxlength translate=entity.validation.maxlength translate-value-max=2000> This field cannot be longer than 2000 characters. </p> </div> </div> <div class=form-group> <label translate=dgdtoolApp.initiative_type.status_id for=field_status_id>Status_id</label> <input type=number class=form-control name=status_id id=field_status_id ng-model=initiative_type.status_id required/> <div ng-show=editForm.status_id.$invalid> <p class=help-block ng-show=editForm.status_id.$error.required translate=entity.validation.required> This field is required. </p> <p class=help-block ng-show=editForm.status_id.$error.number translate=entity.validation.number> This field should be a number. </p> </div> </div> <div class=form-group> <label translate=dgdtoolApp.initiative_type.created_by for=field_created_by>Created_by</label> <input class=form-control name=created_by id=field_created_by ng-model=initiative_type.created_by required ng-maxlength=\"200\"/> <div ng-show=editForm.created_by.$invalid> <p class=help-block ng-show=editForm.created_by.$error.required translate=entity.validation.required> This field is required. </p> <p class=help-block ng-show=editForm.created_by.$error.maxlength translate=entity.validation.maxlength translate-value-max=200> This field cannot be longer than 200 characters. </p> </div> </div> <div class=form-group> <label translate=dgdtoolApp.initiative_type.created_date for=field_created_date>Created_date</label> <input type=date class=form-control name=created_date id=field_created_date ng-model=initiative_type.created_date required/> <div ng-show=editForm.created_date.$invalid> <p class=help-block ng-show=editForm.created_date.$error.required translate=entity.validation.required> This field is required. </p> </div> </div> <div class=form-group> <label translate=dgdtoolApp.initiative_type.modified_by for=field_modified_by>Modified_by</label> <input class=form-control name=modified_by id=field_modified_by ng-model=initiative_type.modified_by required ng-maxlength=\"200\"/> <div ng-show=editForm.modified_by.$invalid> <p class=help-block ng-show=editForm.modified_by.$error.required translate=entity.validation.required> This field is required. </p> <p class=help-block ng-show=editForm.modified_by.$error.maxlength translate=entity.validation.maxlength translate-value-max=200> This field cannot be longer than 200 characters. </p> </div> </div> <div class=form-group> <label translate=dgdtoolApp.initiative_type.modified_date for=field_modified_date>Modified_date</label> <input type=date class=form-control name=modified_date id=field_modified_date ng-model=initiative_type.modified_date required/> <div ng-show=editForm.modified_date.$invalid> <p class=help-block ng-show=editForm.modified_date.$error.required translate=entity.validation.required> This field is required. </p> </div> </div> </div> <div class=modal-footer> <button type=button class=\"btn btn-default\" data-dismiss=modal ng-click=clear()> <span class=\"glyphicon glyphicon-ban-circle\"></span>&nbsp;<span translate=entity.action.cancel>Cancel</span> </button> <button type=submit ng-disabled=\"editForm.$invalid || editForm.$submitted\" class=\"btn btn-primary\"> <span class=\"glyphicon glyphicon-save\"></span>&nbsp;<span translate=entity.action.save>Save</span> </button> </div> </form>"
  );


  $templateCache.put('scripts/app/entities/initiative_type/initiative_types.html',
    "<div> <h2 translate=dgdtoolApp.initiative_type.home.title>Initiative_types</h2> <jh-alert></jh-alert> <div class=container> <div class=row> <div class=col-md-4> <button class=\"btn btn-primary\" ui-sref=initiative_type.new> <span class=\"glyphicon glyphicon-flash\"></span> <span translate=dgdtoolApp.initiative_type.home.createLabel>Create a new Initiative_type</span> </button> </div> <div class=col-md-8> <form name=searchForm class=form-inline> <div class=form-group> <input class=form-control ng-model=searchQuery id=searchQuery placeholder=query> </div> <button class=\"btn btn-info\" ng-click=search()><span class=\"glyphicon glyphicon-search\"></span> <span>Search a Initiative_type</span> </button> </form> </div> </div> </div> <div class=\"modal fade\" id=deleteInitiative_typeConfirmation> <div class=modal-dialog> <div class=modal-content> <form name=deleteForm ng-submit=confirmDelete(initiative_type.id)> <div class=modal-header> <button type=button class=close data-dismiss=modal aria-hidden=true ng-click=clear()>&times;</button> <h4 class=modal-title translate=entity.delete.title>Confirm delete operation</h4> </div> <div class=modal-body> <p translate=dgdtoolApp.initiative_type.delete.question translate-values=\"{id: '{{initiative_type.id}}'}\">Are you sure you want to delete this Initiative_type?</p> </div> <div class=modal-footer> <button type=button class=\"btn btn-default\" data-dismiss=modal ng-click=clear()> <span class=\"glyphicon glyphicon-ban-circle\"></span>&nbsp;<span translate=entity.action.cancel>Cancel</span> </button> <button type=submit ng-disabled=deleteForm.$invalid class=\"btn btn-danger\"> <span class=\"glyphicon glyphicon-remove-circle\"></span>&nbsp;<span translate=entity.action.delete>Delete</span> </button> </div> </form> </div> </div> </div> <div class=table-responsive> <table class=\"table table-striped\"> <thead> <tr> <th translate=global.field.id>ID</th> <th translate=dgdtoolApp.initiative_type.initiative_type_name>Initiative_type_name</th> <th translate=dgdtoolApp.initiative_type.description>Description</th> <th translate=dgdtoolApp.initiative_type.status_id>Status_id</th> <th translate=dgdtoolApp.initiative_type.created_by>Created_by</th> <th translate=dgdtoolApp.initiative_type.created_date>Created_date</th> <th translate=dgdtoolApp.initiative_type.modified_by>Modified_by</th> <th translate=dgdtoolApp.initiative_type.modified_date>Modified_date</th> <th></th> </tr> </thead> <tbody> <tr ng-repeat=\"initiative_type in initiative_types track by initiative_type.id\"> <td><a ui-sref=initiative_type.detail({id:initiative_type.id})>{{initiative_type.id}}</a></td> <td>{{initiative_type.initiative_type_name}}</td> <td>{{initiative_type.description}}</td> <td>{{initiative_type.status_id}}</td> <td>{{initiative_type.created_by}}</td> <td>{{initiative_type.created_date | date:'mediumDate'}}</td> <td>{{initiative_type.modified_by}}</td> <td>{{initiative_type.modified_date | date:'mediumDate'}}</td> <td> <button type=submit ui-sref=initiative_type.detail({id:initiative_type.id}) class=\"btn btn-info btn-sm\"> <span class=\"glyphicon glyphicon-eye-open\"></span>&nbsp;<span translate=entity.action.view> View</span> </button> <button type=submit ui-sref=initiative_type.edit({id:initiative_type.id}) class=\"btn btn-primary btn-sm\"> <span class=\"glyphicon glyphicon-pencil\"></span>&nbsp;<span translate=entity.action.edit> Edit</span> </button> <button type=submit ng-click=delete(initiative_type.id) class=\"btn btn-danger btn-sm\"> <span class=\"glyphicon glyphicon-remove-circle\"></span>&nbsp;<span translate=entity.action.delete> Delete</span> </button> </td> </tr> </tbody> </table> <nav> <ul class=pager> <li ng-show=\"links['first'] >= 0\" ng-click=\"loadPage(links['first'])\"><a href=#>&lt;&lt;</a></li> <li ng-show=\"page > 0\" ng-click=\"loadPage(links['prev'] || 0)\"><a href=#>&lt;</a></li> <li ng-show=\"links['next']\" ng-click=\"loadPage(links['next'])\"><a href=#>&gt;</a></li> <li ng-show=\"links['last'] > 0\" ng-click=\"loadPage(links['last'])\"><a href=#>&gt;&gt;</a></li> </ul> </nav> </div> </div>"
  );


  $templateCache.put('scripts/app/entities/license_type/license_type-detail.html',
    "<div> <h2><span translate=dgdtoolApp.license_type.detail.title>License_type</span> {{license_type.id}}</h2> <div class=table-responsive> <table class=\"table table-striped\"> <thead> <tr> <th translate=entity.detail.field>Field</th> <th translate=entity.detail.value>Value</th> </tr> </thead> <tbody> <tr> <td> <span translate=dgdtoolApp.license_type.license_type_name>License_type_name</span> </td> <td> <span class=form-control-static>{{license_type.license_type_name}}</span> </td> </tr> <tr> <td> <span translate=dgdtoolApp.license_type.description>Description</span> </td> <td> <span class=form-control-static>{{license_type.description}}</span> </td> </tr> <tr> <td> <span translate=dgdtoolApp.license_type.status_id>Status_id</span> </td> <td> <span class=form-control-static>{{license_type.status_id}}</span> </td> </tr> <tr> <td> <span translate=dgdtoolApp.license_type.created_by>Created_by</span> </td> <td> <span class=form-control-static>{{license_type.created_by}}</span> </td> </tr> <tr> <td> <span translate=dgdtoolApp.license_type.created_date>Created_date</span> </td> <td> <span class=form-control-static>{{license_type.created_date | date:'mediumDate'}}</span> </td> </tr> <tr> <td> <span translate=dgdtoolApp.license_type.modified_by>Modified_by</span> </td> <td> <span class=form-control-static>{{license_type.modified_by}}</span> </td> </tr> <tr> <td> <span translate=dgdtoolApp.license_type.modified_date>Modified_date</span> </td> <td> <span class=form-control-static>{{license_type.modified_date | date:'mediumDate'}}</span> </td> </tr> </tbody> </table> </div> <button type=submit onclick=window.history.back() class=\"btn btn-info\"> <span class=\"glyphicon glyphicon-arrow-left\"></span>&nbsp;<span translate=entity.action.back> Back</span> </button> </div>"
  );


  $templateCache.put('scripts/app/entities/license_type/license_type-dialog.html',
    "<form name=editForm role=form novalidate ng-submit=save() show-validation> <div class=modal-header> <button type=button class=close data-dismiss=modal aria-hidden=true ng-click=clear()>&times;</button> <h4 class=modal-title id=myLicense_typeLabel translate=dgdtoolApp.license_type.home.createOrEditLabel>Create or edit a License_type</h4> </div> <div class=modal-body> <jh-alert-error></jh-alert-error> <div class=form-group> <label for=id translate=global.field.id>ID</label> <input class=form-control id=id name=id ng-model=license_type.id readonly/> </div> <div class=form-group> <label translate=dgdtoolApp.license_type.license_type_name for=field_license_type_name>License_type_name</label> <input class=form-control name=license_type_name id=field_license_type_name ng-model=license_type.license_type_name required ng-maxlength=\"200\"/> <div ng-show=editForm.license_type_name.$invalid> <p class=help-block ng-show=editForm.license_type_name.$error.required translate=entity.validation.required> This field is required. </p> <p class=help-block ng-show=editForm.license_type_name.$error.maxlength translate=entity.validation.maxlength translate-value-max=200> This field cannot be longer than 200 characters. </p> </div> </div> <div class=form-group> <label translate=dgdtoolApp.license_type.description for=field_description>Description</label> <input class=form-control name=description id=field_description ng-model=license_type.description required ng-maxlength=\"2000\"/> <div ng-show=editForm.description.$invalid> <p class=help-block ng-show=editForm.description.$error.required translate=entity.validation.required> This field is required. </p> <p class=help-block ng-show=editForm.description.$error.maxlength translate=entity.validation.maxlength translate-value-max=2000> This field cannot be longer than 2000 characters. </p> </div> </div> <div class=form-group> <label translate=dgdtoolApp.license_type.status_id for=field_status_id>Status_id</label> <input type=number class=form-control name=status_id id=field_status_id ng-model=license_type.status_id required/> <div ng-show=editForm.status_id.$invalid> <p class=help-block ng-show=editForm.status_id.$error.required translate=entity.validation.required> This field is required. </p> <p class=help-block ng-show=editForm.status_id.$error.number translate=entity.validation.number> This field should be a number. </p> </div> </div> <div class=form-group> <label translate=dgdtoolApp.license_type.created_by for=field_created_by>Created_by</label> <input class=form-control name=created_by id=field_created_by ng-model=license_type.created_by required ng-maxlength=\"200\"/> <div ng-show=editForm.created_by.$invalid> <p class=help-block ng-show=editForm.created_by.$error.required translate=entity.validation.required> This field is required. </p> <p class=help-block ng-show=editForm.created_by.$error.maxlength translate=entity.validation.maxlength translate-value-max=200> This field cannot be longer than 200 characters. </p> </div> </div> <div class=form-group> <label translate=dgdtoolApp.license_type.created_date for=field_created_date>Created_date</label> <input type=date class=form-control name=created_date id=field_created_date ng-model=license_type.created_date required/> <div ng-show=editForm.created_date.$invalid> <p class=help-block ng-show=editForm.created_date.$error.required translate=entity.validation.required> This field is required. </p> </div> </div> <div class=form-group> <label translate=dgdtoolApp.license_type.modified_by for=field_modified_by>Modified_by</label> <input class=form-control name=modified_by id=field_modified_by ng-model=license_type.modified_by required ng-maxlength=\"200\"/> <div ng-show=editForm.modified_by.$invalid> <p class=help-block ng-show=editForm.modified_by.$error.required translate=entity.validation.required> This field is required. </p> <p class=help-block ng-show=editForm.modified_by.$error.maxlength translate=entity.validation.maxlength translate-value-max=200> This field cannot be longer than 200 characters. </p> </div> </div> <div class=form-group> <label translate=dgdtoolApp.license_type.modified_date for=field_modified_date>Modified_date</label> <input type=date class=form-control name=modified_date id=field_modified_date ng-model=license_type.modified_date required/> <div ng-show=editForm.modified_date.$invalid> <p class=help-block ng-show=editForm.modified_date.$error.required translate=entity.validation.required> This field is required. </p> </div> </div> </div> <div class=modal-footer> <button type=button class=\"btn btn-default\" data-dismiss=modal ng-click=clear()> <span class=\"glyphicon glyphicon-ban-circle\"></span>&nbsp;<span translate=entity.action.cancel>Cancel</span> </button> <button type=submit ng-disabled=\"editForm.$invalid || editForm.$submitted\" class=\"btn btn-primary\"> <span class=\"glyphicon glyphicon-save\"></span>&nbsp;<span translate=entity.action.save>Save</span> </button> </div> </form>"
  );


  $templateCache.put('scripts/app/entities/license_type/license_types.html',
    "<div> <h2 translate=dgdtoolApp.license_type.home.title>License_types</h2> <jh-alert></jh-alert> <div class=container> <div class=row> <div class=col-md-4> <button class=\"btn btn-primary\" ui-sref=license_type.new> <span class=\"glyphicon glyphicon-flash\"></span> <span translate=dgdtoolApp.license_type.home.createLabel>Create a new License_type</span> </button> </div> <div class=col-md-8> <form name=searchForm class=form-inline> <div class=form-group> <input class=form-control ng-model=searchQuery id=searchQuery placeholder=query> </div> <button class=\"btn btn-info\" ng-click=search()><span class=\"glyphicon glyphicon-search\"></span> <span>Search a License_type</span> </button> </form> </div> </div> </div> <div class=\"modal fade\" id=deleteLicense_typeConfirmation> <div class=modal-dialog> <div class=modal-content> <form name=deleteForm ng-submit=confirmDelete(license_type.id)> <div class=modal-header> <button type=button class=close data-dismiss=modal aria-hidden=true ng-click=clear()>&times;</button> <h4 class=modal-title translate=entity.delete.title>Confirm delete operation</h4> </div> <div class=modal-body> <p translate=dgdtoolApp.license_type.delete.question translate-values=\"{id: '{{license_type.id}}'}\">Are you sure you want to delete this License_type?</p> </div> <div class=modal-footer> <button type=button class=\"btn btn-default\" data-dismiss=modal ng-click=clear()> <span class=\"glyphicon glyphicon-ban-circle\"></span>&nbsp;<span translate=entity.action.cancel>Cancel</span> </button> <button type=submit ng-disabled=deleteForm.$invalid class=\"btn btn-danger\"> <span class=\"glyphicon glyphicon-remove-circle\"></span>&nbsp;<span translate=entity.action.delete>Delete</span> </button> </div> </form> </div> </div> </div> <div class=table-responsive> <table class=\"table table-striped\"> <thead> <tr> <th translate=global.field.id>ID</th> <th translate=dgdtoolApp.license_type.license_type_name>License_type_name</th> <th translate=dgdtoolApp.license_type.description>Description</th> <th translate=dgdtoolApp.license_type.status_id>Status_id</th> <th translate=dgdtoolApp.license_type.created_by>Created_by</th> <th translate=dgdtoolApp.license_type.created_date>Created_date</th> <th translate=dgdtoolApp.license_type.modified_by>Modified_by</th> <th translate=dgdtoolApp.license_type.modified_date>Modified_date</th> <th></th> </tr> </thead> <tbody> <tr ng-repeat=\"license_type in license_types track by license_type.id\"> <td><a ui-sref=license_type.detail({id:license_type.id})>{{license_type.id}}</a></td> <td>{{license_type.license_type_name}}</td> <td>{{license_type.description}}</td> <td>{{license_type.status_id}}</td> <td>{{license_type.created_by}}</td> <td>{{license_type.created_date | date:'mediumDate'}}</td> <td>{{license_type.modified_by}}</td> <td>{{license_type.modified_date | date:'mediumDate'}}</td> <td> <button type=submit ui-sref=license_type.detail({id:license_type.id}) class=\"btn btn-info btn-sm\"> <span class=\"glyphicon glyphicon-eye-open\"></span>&nbsp;<span translate=entity.action.view> View</span> </button> <button type=submit ui-sref=license_type.edit({id:license_type.id}) class=\"btn btn-primary btn-sm\"> <span class=\"glyphicon glyphicon-pencil\"></span>&nbsp;<span translate=entity.action.edit> Edit</span> </button> <button type=submit ng-click=delete(license_type.id) class=\"btn btn-danger btn-sm\"> <span class=\"glyphicon glyphicon-remove-circle\"></span>&nbsp;<span translate=entity.action.delete> Delete</span> </button> </td> </tr> </tbody> </table> <nav> <ul class=pager> <li ng-show=\"links['first'] >= 0\" ng-click=\"loadPage(links['first'])\"><a href=#>&lt;&lt;</a></li> <li ng-show=\"page > 0\" ng-click=\"loadPage(links['prev'] || 0)\"><a href=#>&lt;</a></li> <li ng-show=\"links['next']\" ng-click=\"loadPage(links['next'])\"><a href=#>&gt;</a></li> <li ng-show=\"links['last'] > 0\" ng-click=\"loadPage(links['last'])\"><a href=#>&gt;&gt;</a></li> </ul> </nav> </div> </div>"
  );


  $templateCache.put('scripts/app/entities/menu/menu-detail.html',
    "<div> <h2><span translate=dgdtoolApp.menu.detail.title>Menu</span> {{menu.id}}</h2> <div class=table-responsive> <table class=\"table table-striped\"> <thead> <tr> <th translate=entity.detail.field>Field</th> <th translate=entity.detail.value>Value</th> </tr> </thead> <tbody> <tr> <td> <span translate=dgdtoolApp.menu.parent_menu_id>Parent_menu_id</span> </td> <td> <span class=form-control-static>{{menu.parent_menu_id}}</span> </td> </tr> <tr> <td> <span translate=dgdtoolApp.menu.menu_item_name>Menu_item_name</span> </td> <td> <span class=form-control-static>{{menu.menu_item_name}}</span> </td> </tr> <tr> <td> <span translate=dgdtoolApp.menu.controller_url>Controller_url</span> </td> <td> <span class=form-control-static>{{menu.controller_url}}</span> </td> </tr> <tr> <td> <span translate=dgdtoolApp.menu.display_order>Display_order</span> </td> <td> <span class=form-control-static>{{menu.display_order}}</span> </td> </tr> <tr> <td> <span translate=dgdtoolApp.menu.menu_hint>Menu_hint</span> </td> <td> <span class=form-control-static>{{menu.menu_hint}}</span> </td> </tr> <tr> <td> <span translate=dgdtoolApp.menu.description>Description</span> </td> <td> <span class=form-control-static>{{menu.description}}</span> </td> </tr> <tr> <td> <span translate=dgdtoolApp.menu.status_id>Status_id</span> </td> <td> <span class=form-control-static>{{menu.status_id}}</span> </td> </tr> <tr> <td> <span translate=dgdtoolApp.menu.created_by>Created_by</span> </td> <td> <span class=form-control-static>{{menu.created_by}}</span> </td> </tr> <tr> <td> <span translate=dgdtoolApp.menu.created_date>Created_date</span> </td> <td> <span class=form-control-static>{{menu.created_date | date:'mediumDate'}}</span> </td> </tr> <tr> <td> <span translate=dgdtoolApp.menu.modified_by>Modified_by</span> </td> <td> <span class=form-control-static>{{menu.modified_by}}</span> </td> </tr> <tr> <td> <span translate=dgdtoolApp.menu.modified_date>Modified_date</span> </td> <td> <span class=form-control-static>{{menu.modified_date | date:'mediumDate'}}</span> </td> </tr> </tbody> </table> </div> <button type=submit onclick=window.history.back() class=\"btn btn-info\"> <span class=\"glyphicon glyphicon-arrow-left\"></span>&nbsp;<span translate=entity.action.back> Back</span> </button> </div>"
  );


  $templateCache.put('scripts/app/entities/menu/menu-dialog.html',
    "<form name=editForm role=form novalidate ng-submit=save() show-validation> <div class=modal-header> <button type=button class=close data-dismiss=modal aria-hidden=true ng-click=clear()>&times;</button> <h4 class=modal-title id=myMenuLabel translate=dgdtoolApp.menu.home.createOrEditLabel>Create or edit a Menu</h4> </div> <div class=modal-body> <jh-alert-error></jh-alert-error> <div class=form-group> <label for=id translate=global.field.id>ID</label> <input class=form-control id=id name=id ng-model=menu.id readonly/> </div> <div class=form-group> <label translate=dgdtoolApp.menu.parent_menu_id for=field_parent_menu_id>Parent_menu_id</label> <input type=number class=form-control name=parent_menu_id id=field_parent_menu_id ng-model=menu.parent_menu_id required/> <div ng-show=editForm.parent_menu_id.$invalid> <p class=help-block ng-show=editForm.parent_menu_id.$error.required translate=entity.validation.required> This field is required. </p> <p class=help-block ng-show=editForm.parent_menu_id.$error.number translate=entity.validation.number> This field should be a number. </p> </div> </div> <div class=form-group> <label translate=dgdtoolApp.menu.menu_item_name for=field_menu_item_name>Menu_item_name</label> <input class=form-control name=menu_item_name id=field_menu_item_name ng-model=menu.menu_item_name required ng-maxlength=\"200\"/> <div ng-show=editForm.menu_item_name.$invalid> <p class=help-block ng-show=editForm.menu_item_name.$error.required translate=entity.validation.required> This field is required. </p> <p class=help-block ng-show=editForm.menu_item_name.$error.maxlength translate=entity.validation.maxlength translate-value-max=200> This field cannot be longer than 200 characters. </p> </div> </div> <div class=form-group> <label translate=dgdtoolApp.menu.controller_url for=field_controller_url>Controller_url</label> <input class=form-control name=controller_url id=field_controller_url ng-model=menu.controller_url required ng-maxlength=\"2000\"/> <div ng-show=editForm.controller_url.$invalid> <p class=help-block ng-show=editForm.controller_url.$error.required translate=entity.validation.required> This field is required. </p> <p class=help-block ng-show=editForm.controller_url.$error.maxlength translate=entity.validation.maxlength translate-value-max=2000> This field cannot be longer than 2000 characters. </p> </div> </div> <div class=form-group> <label translate=dgdtoolApp.menu.display_order for=field_display_order>Display_order</label> <input type=number class=form-control name=display_order id=field_display_order ng-model=menu.display_order required/> <div ng-show=editForm.display_order.$invalid> <p class=help-block ng-show=editForm.display_order.$error.required translate=entity.validation.required> This field is required. </p> <p class=help-block ng-show=editForm.display_order.$error.number translate=entity.validation.number> This field should be a number. </p> </div> </div> <div class=form-group> <label translate=dgdtoolApp.menu.menu_hint for=field_menu_hint>Menu_hint</label> <input class=form-control name=menu_hint id=field_menu_hint ng-model=menu.menu_hint required ng-maxlength=\"2000\"/> <div ng-show=editForm.menu_hint.$invalid> <p class=help-block ng-show=editForm.menu_hint.$error.required translate=entity.validation.required> This field is required. </p> <p class=help-block ng-show=editForm.menu_hint.$error.maxlength translate=entity.validation.maxlength translate-value-max=2000> This field cannot be longer than 2000 characters. </p> </div> </div> <div class=form-group> <label translate=dgdtoolApp.menu.description for=field_description>Description</label> <input class=form-control name=description id=field_description ng-model=menu.description required ng-maxlength=\"2000\"/> <div ng-show=editForm.description.$invalid> <p class=help-block ng-show=editForm.description.$error.required translate=entity.validation.required> This field is required. </p> <p class=help-block ng-show=editForm.description.$error.maxlength translate=entity.validation.maxlength translate-value-max=2000> This field cannot be longer than 2000 characters. </p> </div> </div> <div class=form-group> <label translate=dgdtoolApp.menu.status_id for=field_status_id>Status_id</label> <input type=number class=form-control name=status_id id=field_status_id ng-model=menu.status_id required/> <div ng-show=editForm.status_id.$invalid> <p class=help-block ng-show=editForm.status_id.$error.required translate=entity.validation.required> This field is required. </p> <p class=help-block ng-show=editForm.status_id.$error.number translate=entity.validation.number> This field should be a number. </p> </div> </div> <div class=form-group> <label translate=dgdtoolApp.menu.created_by for=field_created_by>Created_by</label> <input class=form-control name=created_by id=field_created_by ng-model=menu.created_by required ng-maxlength=\"200\"/> <div ng-show=editForm.created_by.$invalid> <p class=help-block ng-show=editForm.created_by.$error.required translate=entity.validation.required> This field is required. </p> <p class=help-block ng-show=editForm.created_by.$error.maxlength translate=entity.validation.maxlength translate-value-max=200> This field cannot be longer than 200 characters. </p> </div> </div> <div class=form-group> <label translate=dgdtoolApp.menu.created_date for=field_created_date>Created_date</label> <input type=date class=form-control name=created_date id=field_created_date ng-model=menu.created_date required/> <div ng-show=editForm.created_date.$invalid> <p class=help-block ng-show=editForm.created_date.$error.required translate=entity.validation.required> This field is required. </p> </div> </div> <div class=form-group> <label translate=dgdtoolApp.menu.modified_by for=field_modified_by>Modified_by</label> <input class=form-control name=modified_by id=field_modified_by ng-model=menu.modified_by required ng-maxlength=\"200\"/> <div ng-show=editForm.modified_by.$invalid> <p class=help-block ng-show=editForm.modified_by.$error.required translate=entity.validation.required> This field is required. </p> <p class=help-block ng-show=editForm.modified_by.$error.maxlength translate=entity.validation.maxlength translate-value-max=200> This field cannot be longer than 200 characters. </p> </div> </div> <div class=form-group> <label translate=dgdtoolApp.menu.modified_date for=field_modified_date>Modified_date</label> <input type=date class=form-control name=modified_date id=field_modified_date ng-model=menu.modified_date required/> <div ng-show=editForm.modified_date.$invalid> <p class=help-block ng-show=editForm.modified_date.$error.required translate=entity.validation.required> This field is required. </p> </div> </div> </div> <div class=modal-footer> <button type=button class=\"btn btn-default\" data-dismiss=modal ng-click=clear()> <span class=\"glyphicon glyphicon-ban-circle\"></span>&nbsp;<span translate=entity.action.cancel>Cancel</span> </button> <button type=submit ng-disabled=\"editForm.$invalid || editForm.$submitted\" class=\"btn btn-primary\"> <span class=\"glyphicon glyphicon-save\"></span>&nbsp;<span translate=entity.action.save>Save</span> </button> </div> </form>"
  );


  $templateCache.put('scripts/app/entities/menu/menus.html',
    "<div> <h2 translate=dgdtoolApp.menu.home.title>Menus</h2> <jh-alert></jh-alert> <div class=container> <div class=row> <div class=col-md-4> <button class=\"btn btn-primary\" ui-sref=menu.new> <span class=\"glyphicon glyphicon-flash\"></span> <span translate=dgdtoolApp.menu.home.createLabel>Create a new Menu</span> </button> </div> <div class=col-md-8> <form name=searchForm class=form-inline> <div class=form-group> <input class=form-control ng-model=searchQuery id=searchQuery placeholder=query> </div> <button class=\"btn btn-info\" ng-click=search()><span class=\"glyphicon glyphicon-search\"></span> <span>Search a Menu</span> </button> </form> </div> </div> </div> <div class=\"modal fade\" id=deleteMenuConfirmation> <div class=modal-dialog> <div class=modal-content> <form name=deleteForm ng-submit=confirmDelete(menu.id)> <div class=modal-header> <button type=button class=close data-dismiss=modal aria-hidden=true ng-click=clear()>&times;</button> <h4 class=modal-title translate=entity.delete.title>Confirm delete operation</h4> </div> <div class=modal-body> <p translate=dgdtoolApp.menu.delete.question translate-values=\"{id: '{{menu.id}}'}\">Are you sure you want to delete this Menu?</p> </div> <div class=modal-footer> <button type=button class=\"btn btn-default\" data-dismiss=modal ng-click=clear()> <span class=\"glyphicon glyphicon-ban-circle\"></span>&nbsp;<span translate=entity.action.cancel>Cancel</span> </button> <button type=submit ng-disabled=deleteForm.$invalid class=\"btn btn-danger\"> <span class=\"glyphicon glyphicon-remove-circle\"></span>&nbsp;<span translate=entity.action.delete>Delete</span> </button> </div> </form> </div> </div> </div> <div class=table-responsive> <table class=\"table table-striped\"> <thead> <tr> <th translate=global.field.id>ID</th> <th translate=dgdtoolApp.menu.parent_menu_id>Parent_menu_id</th> <th translate=dgdtoolApp.menu.menu_item_name>Menu_item_name</th> <th translate=dgdtoolApp.menu.controller_url>Controller_url</th> <th translate=dgdtoolApp.menu.display_order>Display_order</th> <th translate=dgdtoolApp.menu.menu_hint>Menu_hint</th> <th translate=dgdtoolApp.menu.description>Description</th> <th translate=dgdtoolApp.menu.status_id>Status_id</th> <th translate=dgdtoolApp.menu.created_by>Created_by</th> <th translate=dgdtoolApp.menu.created_date>Created_date</th> <th translate=dgdtoolApp.menu.modified_by>Modified_by</th> <th translate=dgdtoolApp.menu.modified_date>Modified_date</th> <th></th> </tr> </thead> <tbody> <tr ng-repeat=\"menu in menus track by menu.id\"> <td><a ui-sref=menu.detail({id:menu.id})>{{menu.id}}</a></td> <td>{{menu.parent_menu_id}}</td> <td>{{menu.menu_item_name}}</td> <td>{{menu.controller_url}}</td> <td>{{menu.display_order}}</td> <td>{{menu.menu_hint}}</td> <td>{{menu.description}}</td> <td>{{menu.status_id}}</td> <td>{{menu.created_by}}</td> <td>{{menu.created_date | date:'mediumDate'}}</td> <td>{{menu.modified_by}}</td> <td>{{menu.modified_date | date:'mediumDate'}}</td> <td> <button type=submit ui-sref=menu.detail({id:menu.id}) class=\"btn btn-info btn-sm\"> <span class=\"glyphicon glyphicon-eye-open\"></span>&nbsp;<span translate=entity.action.view> View</span> </button> <button type=submit ui-sref=menu.edit({id:menu.id}) class=\"btn btn-primary btn-sm\"> <span class=\"glyphicon glyphicon-pencil\"></span>&nbsp;<span translate=entity.action.edit> Edit</span> </button> <button type=submit ng-click=delete(menu.id) class=\"btn btn-danger btn-sm\"> <span class=\"glyphicon glyphicon-remove-circle\"></span>&nbsp;<span translate=entity.action.delete> Delete</span> </button> </td> </tr> </tbody> </table> <nav> <ul class=pager> <li ng-show=\"links['first'] >= 0\" ng-click=\"loadPage(links['first'])\"><a href=#>&lt;&lt;</a></li> <li ng-show=\"page > 0\" ng-click=\"loadPage(links['prev'] || 0)\"><a href=#>&lt;</a></li> <li ng-show=\"links['next']\" ng-click=\"loadPage(links['next'])\"><a href=#>&gt;</a></li> <li ng-show=\"links['last'] > 0\" ng-click=\"loadPage(links['last'])\"><a href=#>&gt;&gt;</a></li> </ul> </nav> </div> </div>"
  );


  $templateCache.put('scripts/app/entities/message/message-detail.html',
    "<div> <h2><span translate=dgdtoolApp.message.detail.title>Message</span> {{message.id}}</h2> <div class=table-responsive> <table class=\"table table-striped\"> <thead> <tr> <th translate=entity.detail.field>Field</th> <th translate=entity.detail.value>Value</th> </tr> </thead> <tbody> <tr> <td> <span translate=dgdtoolApp.message.sender_id>Sender_id</span> </td> <td> <span class=form-control-static>{{message.sender_id}}</span> </td> </tr> <tr> <td> <span translate=dgdtoolApp.message.recipient_id>Recipient_id</span> </td> <td> <span class=form-control-static>{{message.recipient_id}}</span> </td> </tr> <tr> <td> <span translate=dgdtoolApp.message.sender_deleted>Sender_deleted</span> </td> <td> <span class=form-control-static>{{message.sender_deleted}}</span> </td> </tr> <tr> <td> <span translate=dgdtoolApp.message.recipient_deleted>Recipient_deleted</span> </td> <td> <span class=form-control-static>{{message.recipient_deleted}}</span> </td> </tr> <tr> <td> <span translate=dgdtoolApp.message.recipient_viewed>Recipient_viewed</span> </td> <td> <span class=form-control-static>{{message.recipient_viewed}}</span> </td> </tr> <tr> <td> <span translate=dgdtoolApp.message.message>Message</span> </td> <td> <span class=form-control-static>{{message.message}}</span> </td> </tr> <tr> <td> <span translate=dgdtoolApp.message.status_id>Status_id</span> </td> <td> <span class=form-control-static>{{message.status_id}}</span> </td> </tr> <tr> <td> <span translate=dgdtoolApp.message.created_by>Created_by</span> </td> <td> <span class=form-control-static>{{message.created_by}}</span> </td> </tr> <tr> <td> <span translate=dgdtoolApp.message.created_date>Created_date</span> </td> <td> <span class=form-control-static>{{message.created_date | date:'mediumDate'}}</span> </td> </tr> <tr> <td> <span translate=dgdtoolApp.message.modified_by>Modified_by</span> </td> <td> <span class=form-control-static>{{message.modified_by}}</span> </td> </tr> <tr> <td> <span translate=dgdtoolApp.message.modified_date>Modified_date</span> </td> <td> <span class=form-control-static>{{message.modified_date | date:'mediumDate'}}</span> </td> </tr> </tbody> </table> </div> <button type=submit onclick=window.history.back() class=\"btn btn-info\"> <span class=\"glyphicon glyphicon-arrow-left\"></span>&nbsp;<span translate=entity.action.back> Back</span> </button> </div>"
  );


  $templateCache.put('scripts/app/entities/message/message-dialog.html',
    "<form name=editForm role=form novalidate ng-submit=save() show-validation> <div class=modal-header> <button type=button class=close data-dismiss=modal aria-hidden=true ng-click=clear()>&times;</button> <h4 class=modal-title id=myMessageLabel translate=dgdtoolApp.message.home.createOrEditLabel>Create or edit a Message</h4> </div> <div class=modal-body> <jh-alert-error></jh-alert-error> <div class=form-group> <label for=id translate=global.field.id>ID</label> <input class=form-control id=id name=id ng-model=message.id readonly/> </div> <div class=form-group> <label translate=dgdtoolApp.message.sender_id for=field_sender_id>Sender_id</label> <input type=number class=form-control name=sender_id id=field_sender_id ng-model=\"message.sender_id\"/> </div> <div class=form-group> <label translate=dgdtoolApp.message.recipient_id for=field_recipient_id>Recipient_id</label> <input type=number class=form-control name=recipient_id id=field_recipient_id ng-model=\"message.recipient_id\"/> </div> <div class=form-group> <label translate=dgdtoolApp.message.sender_deleted for=field_sender_deleted>Sender_deleted</label> <input type=number class=form-control name=sender_deleted id=field_sender_deleted ng-model=\"message.sender_deleted\"/> </div> <div class=form-group> <label translate=dgdtoolApp.message.recipient_deleted for=field_recipient_deleted>Recipient_deleted</label> <input type=number class=form-control name=recipient_deleted id=field_recipient_deleted ng-model=\"message.recipient_deleted\"/> </div> <div class=form-group> <label translate=dgdtoolApp.message.recipient_viewed for=field_recipient_viewed>Recipient_viewed</label> <input type=number class=form-control name=recipient_viewed id=field_recipient_viewed ng-model=\"message.recipient_viewed\"/> </div> <div class=form-group> <label translate=dgdtoolApp.message.message for=field_message>Message</label> <input class=form-control name=message id=field_message ng-model=message.message ng-maxlength=\"2000\"/> <div ng-show=editForm.message.$invalid> <p class=help-block ng-show=editForm.message.$error.maxlength translate=entity.validation.maxlength translate-value-max=2000> This field cannot be longer than 2000 characters. </p> </div> </div> <div class=form-group> <label translate=dgdtoolApp.message.status_id for=field_status_id>Status_id</label> <input type=number class=form-control name=status_id id=field_status_id ng-model=message.status_id required/> <div ng-show=editForm.status_id.$invalid> <p class=help-block ng-show=editForm.status_id.$error.required translate=entity.validation.required> This field is required. </p> <p class=help-block ng-show=editForm.status_id.$error.number translate=entity.validation.number> This field should be a number. </p> </div> </div> <div class=form-group> <label translate=dgdtoolApp.message.created_by for=field_created_by>Created_by</label> <input class=form-control name=created_by id=field_created_by ng-model=message.created_by required ng-maxlength=\"200\"/> <div ng-show=editForm.created_by.$invalid> <p class=help-block ng-show=editForm.created_by.$error.required translate=entity.validation.required> This field is required. </p> <p class=help-block ng-show=editForm.created_by.$error.maxlength translate=entity.validation.maxlength translate-value-max=200> This field cannot be longer than 200 characters. </p> </div> </div> <div class=form-group> <label translate=dgdtoolApp.message.created_date for=field_created_date>Created_date</label> <input type=date class=form-control name=created_date id=field_created_date ng-model=\"message.created_date\"/> </div> <div class=form-group> <label translate=dgdtoolApp.message.modified_by for=field_modified_by>Modified_by</label> <input class=form-control name=modified_by id=field_modified_by ng-model=message.modified_by required ng-maxlength=\"200\"/> <div ng-show=editForm.modified_by.$invalid> <p class=help-block ng-show=editForm.modified_by.$error.required translate=entity.validation.required> This field is required. </p> <p class=help-block ng-show=editForm.modified_by.$error.maxlength translate=entity.validation.maxlength translate-value-max=200> This field cannot be longer than 200 characters. </p> </div> </div> <div class=form-group> <label translate=dgdtoolApp.message.modified_date for=field_modified_date>Modified_date</label> <input type=date class=form-control name=modified_date id=field_modified_date ng-model=message.modified_date required/> <div ng-show=editForm.modified_date.$invalid> <p class=help-block ng-show=editForm.modified_date.$error.required translate=entity.validation.required> This field is required. </p> </div> </div> </div> <div class=modal-footer> <button type=button class=\"btn btn-default\" data-dismiss=modal ng-click=clear()> <span class=\"glyphicon glyphicon-ban-circle\"></span>&nbsp;<span translate=entity.action.cancel>Cancel</span> </button> <button type=submit ng-disabled=\"editForm.$invalid || editForm.$submitted\" class=\"btn btn-primary\"> <span class=\"glyphicon glyphicon-save\"></span>&nbsp;<span translate=entity.action.save>Save</span> </button> </div> </form>"
  );


  $templateCache.put('scripts/app/entities/message/messages.html',
    "<div> <h2 translate=dgdtoolApp.message.home.title>Messages</h2> <jh-alert></jh-alert> <div class=container> <div class=row> <div class=col-md-4> <button class=\"btn btn-primary\" ui-sref=message.new> <span class=\"glyphicon glyphicon-flash\"></span> <span translate=dgdtoolApp.message.home.createLabel>Create a new Message</span> </button> </div> <div class=col-md-8> <form name=searchForm class=form-inline> <div class=form-group> <input class=form-control ng-model=searchQuery id=searchQuery placeholder=query> </div> <button class=\"btn btn-info\" ng-click=search()><span class=\"glyphicon glyphicon-search\"></span> <span>Search a Message</span> </button> </form> </div> </div> </div> <div class=\"modal fade\" id=deleteMessageConfirmation> <div class=modal-dialog> <div class=modal-content> <form name=deleteForm ng-submit=confirmDelete(message.id)> <div class=modal-header> <button type=button class=close data-dismiss=modal aria-hidden=true ng-click=clear()>&times;</button> <h4 class=modal-title translate=entity.delete.title>Confirm delete operation</h4> </div> <div class=modal-body> <p translate=dgdtoolApp.message.delete.question translate-values=\"{id: '{{message.id}}'}\">Are you sure you want to delete this Message?</p> </div> <div class=modal-footer> <button type=button class=\"btn btn-default\" data-dismiss=modal ng-click=clear()> <span class=\"glyphicon glyphicon-ban-circle\"></span>&nbsp;<span translate=entity.action.cancel>Cancel</span> </button> <button type=submit ng-disabled=deleteForm.$invalid class=\"btn btn-danger\"> <span class=\"glyphicon glyphicon-remove-circle\"></span>&nbsp;<span translate=entity.action.delete>Delete</span> </button> </div> </form> </div> </div> </div> <div class=table-responsive> <table class=\"table table-striped\"> <thead> <tr> <th translate=global.field.id>ID</th> <th translate=dgdtoolApp.message.sender_id>Sender_id</th> <th translate=dgdtoolApp.message.recipient_id>Recipient_id</th> <th translate=dgdtoolApp.message.sender_deleted>Sender_deleted</th> <th translate=dgdtoolApp.message.recipient_deleted>Recipient_deleted</th> <th translate=dgdtoolApp.message.recipient_viewed>Recipient_viewed</th> <th translate=dgdtoolApp.message.message>Message</th> <th translate=dgdtoolApp.message.status_id>Status_id</th> <th translate=dgdtoolApp.message.created_by>Created_by</th> <th translate=dgdtoolApp.message.created_date>Created_date</th> <th translate=dgdtoolApp.message.modified_by>Modified_by</th> <th translate=dgdtoolApp.message.modified_date>Modified_date</th> <th></th> </tr> </thead> <tbody> <tr ng-repeat=\"message in messages track by message.id\"> <td><a ui-sref=message.detail({id:message.id})>{{message.id}}</a></td> <td>{{message.sender_id}}</td> <td>{{message.recipient_id}}</td> <td>{{message.sender_deleted}}</td> <td>{{message.recipient_deleted}}</td> <td>{{message.recipient_viewed}}</td> <td>{{message.message}}</td> <td>{{message.status_id}}</td> <td>{{message.created_by}}</td> <td>{{message.created_date | date:'mediumDate'}}</td> <td>{{message.modified_by}}</td> <td>{{message.modified_date | date:'mediumDate'}}</td> <td> <button type=submit ui-sref=message.detail({id:message.id}) class=\"btn btn-info btn-sm\"> <span class=\"glyphicon glyphicon-eye-open\"></span>&nbsp;<span translate=entity.action.view> View</span> </button> <button type=submit ui-sref=message.edit({id:message.id}) class=\"btn btn-primary btn-sm\"> <span class=\"glyphicon glyphicon-pencil\"></span>&nbsp;<span translate=entity.action.edit> Edit</span> </button> <button type=submit ng-click=delete(message.id) class=\"btn btn-danger btn-sm\"> <span class=\"glyphicon glyphicon-remove-circle\"></span>&nbsp;<span translate=entity.action.delete> Delete</span> </button> </td> </tr> </tbody> </table> <nav> <ul class=pager> <li ng-show=\"links['first'] >= 0\" ng-click=\"loadPage(links['first'])\"><a href=#>&lt;&lt;</a></li> <li ng-show=\"page > 0\" ng-click=\"loadPage(links['prev'] || 0)\"><a href=#>&lt;</a></li> <li ng-show=\"links['next']\" ng-click=\"loadPage(links['next'])\"><a href=#>&gt;</a></li> <li ng-show=\"links['last'] > 0\" ng-click=\"loadPage(links['last'])\"><a href=#>&gt;&gt;</a></li> </ul> </nav> </div> </div>"
  );


  $templateCache.put('scripts/app/entities/os_type/os_type-detail.html',
    "<div> <h2><span translate=dgdtoolApp.os_type.detail.title>Os_type</span> {{os_type.id}}</h2> <div class=table-responsive> <table class=\"table table-striped\"> <thead> <tr> <th translate=entity.detail.field>Field</th> <th translate=entity.detail.value>Value</th> </tr> </thead> <tbody> <tr> <td> <span translate=dgdtoolApp.os_type.os_type_name>Os_type_name</span> </td> <td> <span class=form-control-static>{{os_type.os_type_name}}</span> </td> </tr> <tr> <td> <span translate=dgdtoolApp.os_type.description>Description</span> </td> <td> <span class=form-control-static>{{os_type.description}}</span> </td> </tr> <tr> <td> <span translate=dgdtoolApp.os_type.status_id>Status_id</span> </td> <td> <span class=form-control-static>{{os_type.status_id}}</span> </td> </tr> <tr> <td> <span translate=dgdtoolApp.os_type.created_by>Created_by</span> </td> <td> <span class=form-control-static>{{os_type.created_by}}</span> </td> </tr> <tr> <td> <span translate=dgdtoolApp.os_type.created_date>Created_date</span> </td> <td> <span class=form-control-static>{{os_type.created_date | date:'mediumDate'}}</span> </td> </tr> <tr> <td> <span translate=dgdtoolApp.os_type.modified_by>Modified_by</span> </td> <td> <span class=form-control-static>{{os_type.modified_by}}</span> </td> </tr> <tr> <td> <span translate=dgdtoolApp.os_type.modified_date>Modified_date</span> </td> <td> <span class=form-control-static>{{os_type.modified_date | date:'mediumDate'}}</span> </td> </tr> </tbody> </table> </div> <button type=submit onclick=window.history.back() class=\"btn btn-info\"> <span class=\"glyphicon glyphicon-arrow-left\"></span>&nbsp;<span translate=entity.action.back> Back</span> </button> </div>"
  );


  $templateCache.put('scripts/app/entities/os_type/os_type-dialog.html',
    "<form name=editForm role=form novalidate ng-submit=save() show-validation> <div class=modal-header> <button type=button class=close data-dismiss=modal aria-hidden=true ng-click=clear()>&times;</button> <h4 class=modal-title id=myOs_typeLabel translate=dgdtoolApp.os_type.home.createOrEditLabel>Create or edit a Os_type</h4> </div> <div class=modal-body> <jh-alert-error></jh-alert-error> <div class=form-group> <label for=id translate=global.field.id>ID</label> <input class=form-control id=id name=id ng-model=os_type.id readonly/> </div> <div class=form-group> <label translate=dgdtoolApp.os_type.os_type_name for=field_os_type_name>Os_type_name</label> <input class=form-control name=os_type_name id=field_os_type_name ng-model=os_type.os_type_name required ng-maxlength=\"200\"/> <div ng-show=editForm.os_type_name.$invalid> <p class=help-block ng-show=editForm.os_type_name.$error.required translate=entity.validation.required> This field is required. </p> <p class=help-block ng-show=editForm.os_type_name.$error.maxlength translate=entity.validation.maxlength translate-value-max=200> This field cannot be longer than 200 characters. </p> </div> </div> <div class=form-group> <label translate=dgdtoolApp.os_type.description for=field_description>Description</label> <input class=form-control name=description id=field_description ng-model=os_type.description required ng-maxlength=\"2000\"/> <div ng-show=editForm.description.$invalid> <p class=help-block ng-show=editForm.description.$error.required translate=entity.validation.required> This field is required. </p> <p class=help-block ng-show=editForm.description.$error.maxlength translate=entity.validation.maxlength translate-value-max=2000> This field cannot be longer than 2000 characters. </p> </div> </div> <div class=form-group> <label translate=dgdtoolApp.os_type.status_id for=field_status_id>Status_id</label> <input type=number class=form-control name=status_id id=field_status_id ng-model=os_type.status_id required/> <div ng-show=editForm.status_id.$invalid> <p class=help-block ng-show=editForm.status_id.$error.required translate=entity.validation.required> This field is required. </p> <p class=help-block ng-show=editForm.status_id.$error.number translate=entity.validation.number> This field should be a number. </p> </div> </div> <div class=form-group> <label translate=dgdtoolApp.os_type.created_by for=field_created_by>Created_by</label> <input class=form-control name=created_by id=field_created_by ng-model=os_type.created_by required ng-maxlength=\"200\"/> <div ng-show=editForm.created_by.$invalid> <p class=help-block ng-show=editForm.created_by.$error.required translate=entity.validation.required> This field is required. </p> <p class=help-block ng-show=editForm.created_by.$error.maxlength translate=entity.validation.maxlength translate-value-max=200> This field cannot be longer than 200 characters. </p> </div> </div> <div class=form-group> <label translate=dgdtoolApp.os_type.created_date for=field_created_date>Created_date</label> <input type=date class=form-control name=created_date id=field_created_date ng-model=os_type.created_date required/> <div ng-show=editForm.created_date.$invalid> <p class=help-block ng-show=editForm.created_date.$error.required translate=entity.validation.required> This field is required. </p> </div> </div> <div class=form-group> <label translate=dgdtoolApp.os_type.modified_by for=field_modified_by>Modified_by</label> <input class=form-control name=modified_by id=field_modified_by ng-model=os_type.modified_by required ng-maxlength=\"200\"/> <div ng-show=editForm.modified_by.$invalid> <p class=help-block ng-show=editForm.modified_by.$error.required translate=entity.validation.required> This field is required. </p> <p class=help-block ng-show=editForm.modified_by.$error.maxlength translate=entity.validation.maxlength translate-value-max=200> This field cannot be longer than 200 characters. </p> </div> </div> <div class=form-group> <label translate=dgdtoolApp.os_type.modified_date for=field_modified_date>Modified_date</label> <input type=date class=form-control name=modified_date id=field_modified_date ng-model=os_type.modified_date required/> <div ng-show=editForm.modified_date.$invalid> <p class=help-block ng-show=editForm.modified_date.$error.required translate=entity.validation.required> This field is required. </p> </div> </div> </div> <div class=modal-footer> <button type=button class=\"btn btn-default\" data-dismiss=modal ng-click=clear()> <span class=\"glyphicon glyphicon-ban-circle\"></span>&nbsp;<span translate=entity.action.cancel>Cancel</span> </button> <button type=submit ng-disabled=\"editForm.$invalid || editForm.$submitted\" class=\"btn btn-primary\"> <span class=\"glyphicon glyphicon-save\"></span>&nbsp;<span translate=entity.action.save>Save</span> </button> </div> </form>"
  );


  $templateCache.put('scripts/app/entities/os_type/os_types.html',
    "<div> <h2 translate=dgdtoolApp.os_type.home.title>Os_types</h2> <jh-alert></jh-alert> <div class=container> <div class=row> <div class=col-md-4> <button class=\"btn btn-primary\" ui-sref=os_type.new> <span class=\"glyphicon glyphicon-flash\"></span> <span translate=dgdtoolApp.os_type.home.createLabel>Create a new Os_type</span> </button> </div> <div class=col-md-8> <form name=searchForm class=form-inline> <div class=form-group> <input class=form-control ng-model=searchQuery id=searchQuery placeholder=query> </div> <button class=\"btn btn-info\" ng-click=search()><span class=\"glyphicon glyphicon-search\"></span> <span>Search a Os_type</span> </button> </form> </div> </div> </div> <div class=\"modal fade\" id=deleteOs_typeConfirmation> <div class=modal-dialog> <div class=modal-content> <form name=deleteForm ng-submit=confirmDelete(os_type.id)> <div class=modal-header> <button type=button class=close data-dismiss=modal aria-hidden=true ng-click=clear()>&times;</button> <h4 class=modal-title translate=entity.delete.title>Confirm delete operation</h4> </div> <div class=modal-body> <p translate=dgdtoolApp.os_type.delete.question translate-values=\"{id: '{{os_type.id}}'}\">Are you sure you want to delete this Os_type?</p> </div> <div class=modal-footer> <button type=button class=\"btn btn-default\" data-dismiss=modal ng-click=clear()> <span class=\"glyphicon glyphicon-ban-circle\"></span>&nbsp;<span translate=entity.action.cancel>Cancel</span> </button> <button type=submit ng-disabled=deleteForm.$invalid class=\"btn btn-danger\"> <span class=\"glyphicon glyphicon-remove-circle\"></span>&nbsp;<span translate=entity.action.delete>Delete</span> </button> </div> </form> </div> </div> </div> <div class=table-responsive> <table class=\"table table-striped\"> <thead> <tr> <th translate=global.field.id>ID</th> <th translate=dgdtoolApp.os_type.os_type_name>Os_type_name</th> <th translate=dgdtoolApp.os_type.description>Description</th> <th translate=dgdtoolApp.os_type.status_id>Status_id</th> <th translate=dgdtoolApp.os_type.created_by>Created_by</th> <th translate=dgdtoolApp.os_type.created_date>Created_date</th> <th translate=dgdtoolApp.os_type.modified_by>Modified_by</th> <th translate=dgdtoolApp.os_type.modified_date>Modified_date</th> <th></th> </tr> </thead> <tbody> <tr ng-repeat=\"os_type in os_types track by os_type.id\"> <td><a ui-sref=os_type.detail({id:os_type.id})>{{os_type.id}}</a></td> <td>{{os_type.os_type_name}}</td> <td>{{os_type.description}}</td> <td>{{os_type.status_id}}</td> <td>{{os_type.created_by}}</td> <td>{{os_type.created_date | date:'mediumDate'}}</td> <td>{{os_type.modified_by}}</td> <td>{{os_type.modified_date | date:'mediumDate'}}</td> <td> <button type=submit ui-sref=os_type.detail({id:os_type.id}) class=\"btn btn-info btn-sm\"> <span class=\"glyphicon glyphicon-eye-open\"></span>&nbsp;<span translate=entity.action.view> View</span> </button> <button type=submit ui-sref=os_type.edit({id:os_type.id}) class=\"btn btn-primary btn-sm\"> <span class=\"glyphicon glyphicon-pencil\"></span>&nbsp;<span translate=entity.action.edit> Edit</span> </button> <button type=submit ng-click=delete(os_type.id) class=\"btn btn-danger btn-sm\"> <span class=\"glyphicon glyphicon-remove-circle\"></span>&nbsp;<span translate=entity.action.delete> Delete</span> </button> </td> </tr> </tbody> </table> <nav> <ul class=pager> <li ng-show=\"links['first'] >= 0\" ng-click=\"loadPage(links['first'])\"><a href=#>&lt;&lt;</a></li> <li ng-show=\"page > 0\" ng-click=\"loadPage(links['prev'] || 0)\"><a href=#>&lt;</a></li> <li ng-show=\"links['next']\" ng-click=\"loadPage(links['next'])\"><a href=#>&gt;</a></li> <li ng-show=\"links['last'] > 0\" ng-click=\"loadPage(links['last'])\"><a href=#>&gt;&gt;</a></li> </ul> </nav> </div> </div>"
  );


  $templateCache.put('scripts/app/entities/os_version/os_version-detail.html',
    "<div> <h2><span translate=dgdtoolApp.os_version.detail.title>Os_version</span> {{os_version.id}}</h2> <div class=table-responsive> <table class=\"table table-striped\"> <thead> <tr> <th translate=entity.detail.field>Field</th> <th translate=entity.detail.value>Value</th> </tr> </thead> <tbody> <tr> <td> <span translate=dgdtoolApp.os_version.os_version_name>Os_version_name</span> </td> <td> <span class=form-control-static>{{os_version.os_version_name}}</span> </td> </tr> <tr> <td> <span translate=dgdtoolApp.os_version.description>Description</span> </td> <td> <span class=form-control-static>{{os_version.description}}</span> </td> </tr> <tr> <td> <span translate=dgdtoolApp.os_version.status_id>Status_id</span> </td> <td> <span class=form-control-static>{{os_version.status_id}}</span> </td> </tr> <tr> <td> <span translate=dgdtoolApp.os_version.created_by>Created_by</span> </td> <td> <span class=form-control-static>{{os_version.created_by}}</span> </td> </tr> <tr> <td> <span translate=dgdtoolApp.os_version.created_date>Created_date</span> </td> <td> <span class=form-control-static>{{os_version.created_date | date:'mediumDate'}}</span> </td> </tr> <tr> <td> <span translate=dgdtoolApp.os_version.modified_by>Modified_by</span> </td> <td> <span class=form-control-static>{{os_version.modified_by}}</span> </td> </tr> <tr> <td> <span translate=dgdtoolApp.os_version.modified_date>Modified_date</span> </td> <td> <span class=form-control-static>{{os_version.modified_date | date:'mediumDate'}}</span> </td> </tr> </tbody> </table> </div> <button type=submit onclick=window.history.back() class=\"btn btn-info\"> <span class=\"glyphicon glyphicon-arrow-left\"></span>&nbsp;<span translate=entity.action.back> Back</span> </button> </div>"
  );


  $templateCache.put('scripts/app/entities/os_version/os_version-dialog.html',
    "<form name=editForm role=form novalidate ng-submit=save() show-validation> <div class=modal-header> <button type=button class=close data-dismiss=modal aria-hidden=true ng-click=clear()>&times;</button> <h4 class=modal-title id=myOs_versionLabel translate=dgdtoolApp.os_version.home.createOrEditLabel>Create or edit a Os_version</h4> </div> <div class=modal-body> <jh-alert-error></jh-alert-error> <div class=form-group> <label for=id translate=global.field.id>ID</label> <input class=form-control id=id name=id ng-model=os_version.id readonly/> </div> <div class=form-group> <label translate=dgdtoolApp.os_version.os_version_name for=field_os_version_name>Os_version_name</label> <input class=form-control name=os_version_name id=field_os_version_name ng-model=os_version.os_version_name required ng-maxlength=\"200\"/> <div ng-show=editForm.os_version_name.$invalid> <p class=help-block ng-show=editForm.os_version_name.$error.required translate=entity.validation.required> This field is required. </p> <p class=help-block ng-show=editForm.os_version_name.$error.maxlength translate=entity.validation.maxlength translate-value-max=200> This field cannot be longer than 200 characters. </p> </div> </div> <div class=form-group> <label translate=dgdtoolApp.os_version.description for=field_description>Description</label> <input class=form-control name=description id=field_description ng-model=os_version.description required ng-maxlength=\"2000\"/> <div ng-show=editForm.description.$invalid> <p class=help-block ng-show=editForm.description.$error.required translate=entity.validation.required> This field is required. </p> <p class=help-block ng-show=editForm.description.$error.maxlength translate=entity.validation.maxlength translate-value-max=2000> This field cannot be longer than 2000 characters. </p> </div> </div> <div class=form-group> <label translate=dgdtoolApp.os_version.status_id for=field_status_id>Status_id</label> <input type=number class=form-control name=status_id id=field_status_id ng-model=os_version.status_id required/> <div ng-show=editForm.status_id.$invalid> <p class=help-block ng-show=editForm.status_id.$error.required translate=entity.validation.required> This field is required. </p> <p class=help-block ng-show=editForm.status_id.$error.number translate=entity.validation.number> This field should be a number. </p> </div> </div> <div class=form-group> <label translate=dgdtoolApp.os_version.created_by for=field_created_by>Created_by</label> <input class=form-control name=created_by id=field_created_by ng-model=os_version.created_by required ng-maxlength=\"200\"/> <div ng-show=editForm.created_by.$invalid> <p class=help-block ng-show=editForm.created_by.$error.required translate=entity.validation.required> This field is required. </p> <p class=help-block ng-show=editForm.created_by.$error.maxlength translate=entity.validation.maxlength translate-value-max=200> This field cannot be longer than 200 characters. </p> </div> </div> <div class=form-group> <label translate=dgdtoolApp.os_version.created_date for=field_created_date>Created_date</label> <input type=date class=form-control name=created_date id=field_created_date ng-model=os_version.created_date required/> <div ng-show=editForm.created_date.$invalid> <p class=help-block ng-show=editForm.created_date.$error.required translate=entity.validation.required> This field is required. </p> </div> </div> <div class=form-group> <label translate=dgdtoolApp.os_version.modified_by for=field_modified_by>Modified_by</label> <input class=form-control name=modified_by id=field_modified_by ng-model=os_version.modified_by required ng-maxlength=\"200\"/> <div ng-show=editForm.modified_by.$invalid> <p class=help-block ng-show=editForm.modified_by.$error.required translate=entity.validation.required> This field is required. </p> <p class=help-block ng-show=editForm.modified_by.$error.maxlength translate=entity.validation.maxlength translate-value-max=200> This field cannot be longer than 200 characters. </p> </div> </div> <div class=form-group> <label translate=dgdtoolApp.os_version.modified_date for=field_modified_date>Modified_date</label> <input type=date class=form-control name=modified_date id=field_modified_date ng-model=os_version.modified_date required/> <div ng-show=editForm.modified_date.$invalid> <p class=help-block ng-show=editForm.modified_date.$error.required translate=entity.validation.required> This field is required. </p> </div> </div> </div> <div class=modal-footer> <button type=button class=\"btn btn-default\" data-dismiss=modal ng-click=clear()> <span class=\"glyphicon glyphicon-ban-circle\"></span>&nbsp;<span translate=entity.action.cancel>Cancel</span> </button> <button type=submit ng-disabled=\"editForm.$invalid || editForm.$submitted\" class=\"btn btn-primary\"> <span class=\"glyphicon glyphicon-save\"></span>&nbsp;<span translate=entity.action.save>Save</span> </button> </div> </form>"
  );


  $templateCache.put('scripts/app/entities/os_version/os_versions.html',
    "<div> <h2 translate=dgdtoolApp.os_version.home.title>Os_versions</h2> <jh-alert></jh-alert> <div class=container> <div class=row> <div class=col-md-4> <button class=\"btn btn-primary\" ui-sref=os_version.new> <span class=\"glyphicon glyphicon-flash\"></span> <span translate=dgdtoolApp.os_version.home.createLabel>Create a new Os_version</span> </button> </div> <div class=col-md-8> <form name=searchForm class=form-inline> <div class=form-group> <input class=form-control ng-model=searchQuery id=searchQuery placeholder=query> </div> <button class=\"btn btn-info\" ng-click=search()><span class=\"glyphicon glyphicon-search\"></span> <span>Search a Os_version</span> </button> </form> </div> </div> </div> <div class=\"modal fade\" id=deleteOs_versionConfirmation> <div class=modal-dialog> <div class=modal-content> <form name=deleteForm ng-submit=confirmDelete(os_version.id)> <div class=modal-header> <button type=button class=close data-dismiss=modal aria-hidden=true ng-click=clear()>&times;</button> <h4 class=modal-title translate=entity.delete.title>Confirm delete operation</h4> </div> <div class=modal-body> <p translate=dgdtoolApp.os_version.delete.question translate-values=\"{id: '{{os_version.id}}'}\">Are you sure you want to delete this Os_version?</p> </div> <div class=modal-footer> <button type=button class=\"btn btn-default\" data-dismiss=modal ng-click=clear()> <span class=\"glyphicon glyphicon-ban-circle\"></span>&nbsp;<span translate=entity.action.cancel>Cancel</span> </button> <button type=submit ng-disabled=deleteForm.$invalid class=\"btn btn-danger\"> <span class=\"glyphicon glyphicon-remove-circle\"></span>&nbsp;<span translate=entity.action.delete>Delete</span> </button> </div> </form> </div> </div> </div> <div class=table-responsive> <table class=\"table table-striped\"> <thead> <tr> <th translate=global.field.id>ID</th> <th translate=dgdtoolApp.os_version.os_version_name>Os_version_name</th> <th translate=dgdtoolApp.os_version.description>Description</th> <th translate=dgdtoolApp.os_version.status_id>Status_id</th> <th translate=dgdtoolApp.os_version.created_by>Created_by</th> <th translate=dgdtoolApp.os_version.created_date>Created_date</th> <th translate=dgdtoolApp.os_version.modified_by>Modified_by</th> <th translate=dgdtoolApp.os_version.modified_date>Modified_date</th> <th></th> </tr> </thead> <tbody> <tr ng-repeat=\"os_version in os_versions track by os_version.id\"> <td><a ui-sref=os_version.detail({id:os_version.id})>{{os_version.id}}</a></td> <td>{{os_version.os_version_name}}</td> <td>{{os_version.description}}</td> <td>{{os_version.status_id}}</td> <td>{{os_version.created_by}}</td> <td>{{os_version.created_date | date:'mediumDate'}}</td> <td>{{os_version.modified_by}}</td> <td>{{os_version.modified_date | date:'mediumDate'}}</td> <td> <button type=submit ui-sref=os_version.detail({id:os_version.id}) class=\"btn btn-info btn-sm\"> <span class=\"glyphicon glyphicon-eye-open\"></span>&nbsp;<span translate=entity.action.view> View</span> </button> <button type=submit ui-sref=os_version.edit({id:os_version.id}) class=\"btn btn-primary btn-sm\"> <span class=\"glyphicon glyphicon-pencil\"></span>&nbsp;<span translate=entity.action.edit> Edit</span> </button> <button type=submit ng-click=delete(os_version.id) class=\"btn btn-danger btn-sm\"> <span class=\"glyphicon glyphicon-remove-circle\"></span>&nbsp;<span translate=entity.action.delete> Delete</span> </button> </td> </tr> </tbody> </table> <nav> <ul class=pager> <li ng-show=\"links['first'] >= 0\" ng-click=\"loadPage(links['first'])\"><a href=#>&lt;&lt;</a></li> <li ng-show=\"page > 0\" ng-click=\"loadPage(links['prev'] || 0)\"><a href=#>&lt;</a></li> <li ng-show=\"links['next']\" ng-click=\"loadPage(links['next'])\"><a href=#>&gt;</a></li> <li ng-show=\"links['last'] > 0\" ng-click=\"loadPage(links['last'])\"><a href=#>&gt;&gt;</a></li> </ul> </nav> </div> </div>"
  );


  $templateCache.put('scripts/app/entities/package_type/package_type-detail.html',
    "<div> <h2><span translate=dgdtoolApp.package_type.detail.title>Package_type</span> {{package_type.id}}</h2> <div class=table-responsive> <table class=\"table table-striped\"> <thead> <tr> <th translate=entity.detail.field>Field</th> <th translate=entity.detail.value>Value</th> </tr> </thead> <tbody> <tr> <td> <span translate=dgdtoolApp.package_type.package_type_name>Package_type_name</span> </td> <td> <span class=form-control-static>{{package_type.package_type_name}}</span> </td> </tr> <tr> <td> <span translate=dgdtoolApp.package_type.description>Description</span> </td> <td> <span class=form-control-static>{{package_type.description}}</span> </td> </tr> <tr> <td> <span translate=dgdtoolApp.package_type.status_id>Status_id</span> </td> <td> <span class=form-control-static>{{package_type.status_id}}</span> </td> </tr> <tr> <td> <span translate=dgdtoolApp.package_type.created_by>Created_by</span> </td> <td> <span class=form-control-static>{{package_type.created_by}}</span> </td> </tr> <tr> <td> <span translate=dgdtoolApp.package_type.created_date>Created_date</span> </td> <td> <span class=form-control-static>{{package_type.created_date | date:'mediumDate'}}</span> </td> </tr> <tr> <td> <span translate=dgdtoolApp.package_type.modified_by>Modified_by</span> </td> <td> <span class=form-control-static>{{package_type.modified_by}}</span> </td> </tr> <tr> <td> <span translate=dgdtoolApp.package_type.modified_date>Modified_date</span> </td> <td> <span class=form-control-static>{{package_type.modified_date | date:'mediumDate'}}</span> </td> </tr> </tbody> </table> </div> <button type=submit onclick=window.history.back() class=\"btn btn-info\"> <span class=\"glyphicon glyphicon-arrow-left\"></span>&nbsp;<span translate=entity.action.back> Back</span> </button> </div>"
  );


  $templateCache.put('scripts/app/entities/package_type/package_type-dialog.html',
    "<form name=editForm role=form novalidate ng-submit=save() show-validation> <div class=modal-header> <button type=button class=close data-dismiss=modal aria-hidden=true ng-click=clear()>&times;</button> <h4 class=modal-title id=myPackage_typeLabel translate=dgdtoolApp.package_type.home.createOrEditLabel>Create or edit a Package_type</h4> </div> <div class=modal-body> <jh-alert-error></jh-alert-error> <div class=form-group> <label for=id translate=global.field.id>ID</label> <input class=form-control id=id name=id ng-model=package_type.id readonly/> </div> <div class=form-group> <label translate=dgdtoolApp.package_type.package_type_name for=field_package_type_name>Package_type_name</label> <input class=form-control name=package_type_name id=field_package_type_name ng-model=package_type.package_type_name required ng-maxlength=\"200\"/> <div ng-show=editForm.package_type_name.$invalid> <p class=help-block ng-show=editForm.package_type_name.$error.required translate=entity.validation.required> This field is required. </p> <p class=help-block ng-show=editForm.package_type_name.$error.maxlength translate=entity.validation.maxlength translate-value-max=200> This field cannot be longer than 200 characters. </p> </div> </div> <div class=form-group> <label translate=dgdtoolApp.package_type.description for=field_description>Description</label> <input class=form-control name=description id=field_description ng-model=package_type.description required ng-maxlength=\"2000\"/> <div ng-show=editForm.description.$invalid> <p class=help-block ng-show=editForm.description.$error.required translate=entity.validation.required> This field is required. </p> <p class=help-block ng-show=editForm.description.$error.maxlength translate=entity.validation.maxlength translate-value-max=2000> This field cannot be longer than 2000 characters. </p> </div> </div> <div class=form-group> <label translate=dgdtoolApp.package_type.status_id for=field_status_id>Status_id</label> <input type=number class=form-control name=status_id id=field_status_id ng-model=package_type.status_id required/> <div ng-show=editForm.status_id.$invalid> <p class=help-block ng-show=editForm.status_id.$error.required translate=entity.validation.required> This field is required. </p> <p class=help-block ng-show=editForm.status_id.$error.number translate=entity.validation.number> This field should be a number. </p> </div> </div> <div class=form-group> <label translate=dgdtoolApp.package_type.created_by for=field_created_by>Created_by</label> <input class=form-control name=created_by id=field_created_by ng-model=package_type.created_by required ng-maxlength=\"200\"/> <div ng-show=editForm.created_by.$invalid> <p class=help-block ng-show=editForm.created_by.$error.required translate=entity.validation.required> This field is required. </p> <p class=help-block ng-show=editForm.created_by.$error.maxlength translate=entity.validation.maxlength translate-value-max=200> This field cannot be longer than 200 characters. </p> </div> </div> <div class=form-group> <label translate=dgdtoolApp.package_type.created_date for=field_created_date>Created_date</label> <input type=date class=form-control name=created_date id=field_created_date ng-model=package_type.created_date required/> <div ng-show=editForm.created_date.$invalid> <p class=help-block ng-show=editForm.created_date.$error.required translate=entity.validation.required> This field is required. </p> </div> </div> <div class=form-group> <label translate=dgdtoolApp.package_type.modified_by for=field_modified_by>Modified_by</label> <input class=form-control name=modified_by id=field_modified_by ng-model=package_type.modified_by required ng-maxlength=\"200\"/> <div ng-show=editForm.modified_by.$invalid> <p class=help-block ng-show=editForm.modified_by.$error.required translate=entity.validation.required> This field is required. </p> <p class=help-block ng-show=editForm.modified_by.$error.maxlength translate=entity.validation.maxlength translate-value-max=200> This field cannot be longer than 200 characters. </p> </div> </div> <div class=form-group> <label translate=dgdtoolApp.package_type.modified_date for=field_modified_date>Modified_date</label> <input type=date class=form-control name=modified_date id=field_modified_date ng-model=package_type.modified_date required/> <div ng-show=editForm.modified_date.$invalid> <p class=help-block ng-show=editForm.modified_date.$error.required translate=entity.validation.required> This field is required. </p> </div> </div> </div> <div class=modal-footer> <button type=button class=\"btn btn-default\" data-dismiss=modal ng-click=clear()> <span class=\"glyphicon glyphicon-ban-circle\"></span>&nbsp;<span translate=entity.action.cancel>Cancel</span> </button> <button type=submit ng-disabled=\"editForm.$invalid || editForm.$submitted\" class=\"btn btn-primary\"> <span class=\"glyphicon glyphicon-save\"></span>&nbsp;<span translate=entity.action.save>Save</span> </button> </div> </form>"
  );


  $templateCache.put('scripts/app/entities/package_type/package_types.html',
    "<div> <h2 translate=dgdtoolApp.package_type.home.title>Package_types</h2> <jh-alert></jh-alert> <div class=container> <div class=row> <div class=col-md-4> <button class=\"btn btn-primary\" ui-sref=package_type.new> <span class=\"glyphicon glyphicon-flash\"></span> <span translate=dgdtoolApp.package_type.home.createLabel>Create a new Package_type</span> </button> </div> <div class=col-md-8> <form name=searchForm class=form-inline> <div class=form-group> <input class=form-control ng-model=searchQuery id=searchQuery placeholder=query> </div> <button class=\"btn btn-info\" ng-click=search()><span class=\"glyphicon glyphicon-search\"></span> <span>Search a Package_type</span> </button> </form> </div> </div> </div> <div class=\"modal fade\" id=deletePackage_typeConfirmation> <div class=modal-dialog> <div class=modal-content> <form name=deleteForm ng-submit=confirmDelete(package_type.id)> <div class=modal-header> <button type=button class=close data-dismiss=modal aria-hidden=true ng-click=clear()>&times;</button> <h4 class=modal-title translate=entity.delete.title>Confirm delete operation</h4> </div> <div class=modal-body> <p translate=dgdtoolApp.package_type.delete.question translate-values=\"{id: '{{package_type.id}}'}\">Are you sure you want to delete this Package_type?</p> </div> <div class=modal-footer> <button type=button class=\"btn btn-default\" data-dismiss=modal ng-click=clear()> <span class=\"glyphicon glyphicon-ban-circle\"></span>&nbsp;<span translate=entity.action.cancel>Cancel</span> </button> <button type=submit ng-disabled=deleteForm.$invalid class=\"btn btn-danger\"> <span class=\"glyphicon glyphicon-remove-circle\"></span>&nbsp;<span translate=entity.action.delete>Delete</span> </button> </div> </form> </div> </div> </div> <div class=table-responsive> <table class=\"table table-striped\"> <thead> <tr> <th translate=global.field.id>ID</th> <th translate=dgdtoolApp.package_type.package_type_name>Package_type_name</th> <th translate=dgdtoolApp.package_type.description>Description</th> <th translate=dgdtoolApp.package_type.status_id>Status_id</th> <th translate=dgdtoolApp.package_type.created_by>Created_by</th> <th translate=dgdtoolApp.package_type.created_date>Created_date</th> <th translate=dgdtoolApp.package_type.modified_by>Modified_by</th> <th translate=dgdtoolApp.package_type.modified_date>Modified_date</th> <th></th> </tr> </thead> <tbody> <tr ng-repeat=\"package_type in package_types track by package_type.id\"> <td><a ui-sref=package_type.detail({id:package_type.id})>{{package_type.id}}</a></td> <td>{{package_type.package_type_name}}</td> <td>{{package_type.description}}</td> <td>{{package_type.status_id}}</td> <td>{{package_type.created_by}}</td> <td>{{package_type.created_date | date:'mediumDate'}}</td> <td>{{package_type.modified_by}}</td> <td>{{package_type.modified_date | date:'mediumDate'}}</td> <td> <button type=submit ui-sref=package_type.detail({id:package_type.id}) class=\"btn btn-info btn-sm\"> <span class=\"glyphicon glyphicon-eye-open\"></span>&nbsp;<span translate=entity.action.view> View</span> </button> <button type=submit ui-sref=package_type.edit({id:package_type.id}) class=\"btn btn-primary btn-sm\"> <span class=\"glyphicon glyphicon-pencil\"></span>&nbsp;<span translate=entity.action.edit> Edit</span> </button> <button type=submit ng-click=delete(package_type.id) class=\"btn btn-danger btn-sm\"> <span class=\"glyphicon glyphicon-remove-circle\"></span>&nbsp;<span translate=entity.action.delete> Delete</span> </button> </td> </tr> </tbody> </table> <nav> <ul class=pager> <li ng-show=\"links['first'] >= 0\" ng-click=\"loadPage(links['first'])\"><a href=#>&lt;&lt;</a></li> <li ng-show=\"page > 0\" ng-click=\"loadPage(links['prev'] || 0)\"><a href=#>&lt;</a></li> <li ng-show=\"links['next']\" ng-click=\"loadPage(links['next'])\"><a href=#>&gt;</a></li> <li ng-show=\"links['last'] > 0\" ng-click=\"loadPage(links['last'])\"><a href=#>&gt;&gt;</a></li> </ul> </nav> </div> </div>"
  );


  $templateCache.put('scripts/app/entities/package_version/package_version-detail.html',
    "<div> <h2><span translate=dgdtoolApp.package_version.detail.title>Package_version</span> {{package_version.id}}</h2> <div class=table-responsive> <table class=\"table table-striped\"> <thead> <tr> <th translate=entity.detail.field>Field</th> <th translate=entity.detail.value>Value</th> </tr> </thead> <tbody> <tr> <td> <span translate=dgdtoolApp.package_version.package_version_name>Package_version_name</span> </td> <td> <span class=form-control-static>{{package_version.package_version_name}}</span> </td> </tr> <tr> <td> <span translate=dgdtoolApp.package_version.package_id>Package_id</span> </td> <td> <span class=form-control-static>{{package_version.package_id}}</span> </td> </tr> <tr> <td> <span translate=dgdtoolApp.package_version.description>Description</span> </td> <td> <span class=form-control-static>{{package_version.description}}</span> </td> </tr> <tr> <td> <span translate=dgdtoolApp.package_version.status_id>Status_id</span> </td> <td> <span class=form-control-static>{{package_version.status_id}}</span> </td> </tr> <tr> <td> <span translate=dgdtoolApp.package_version.created_by>Created_by</span> </td> <td> <span class=form-control-static>{{package_version.created_by}}</span> </td> </tr> <tr> <td> <span translate=dgdtoolApp.package_version.created_date>Created_date</span> </td> <td> <span class=form-control-static>{{package_version.created_date | date:'mediumDate'}}</span> </td> </tr> <tr> <td> <span translate=dgdtoolApp.package_version.modified_by>Modified_by</span> </td> <td> <span class=form-control-static>{{package_version.modified_by}}</span> </td> </tr> <tr> <td> <span translate=dgdtoolApp.package_version.modified_date>Modified_date</span> </td> <td> <span class=form-control-static>{{package_version.modified_date | date:'mediumDate'}}</span> </td> </tr> </tbody> </table> </div> <button type=submit onclick=window.history.back() class=\"btn btn-info\"> <span class=\"glyphicon glyphicon-arrow-left\"></span>&nbsp;<span translate=entity.action.back> Back</span> </button> </div>"
  );


  $templateCache.put('scripts/app/entities/package_version/package_version-dialog.html',
    "<form name=editForm role=form novalidate ng-submit=save() show-validation> <div class=modal-header> <button type=button class=close data-dismiss=modal aria-hidden=true ng-click=clear()>&times;</button> <h4 class=modal-title id=myPackage_versionLabel translate=dgdtoolApp.package_version.home.createOrEditLabel>Create or edit a Package_version</h4> </div> <div class=modal-body> <jh-alert-error></jh-alert-error> <div class=form-group> <label for=id translate=global.field.id>ID</label> <input class=form-control id=id name=id ng-model=package_version.id readonly/> </div> <div class=form-group> <label translate=dgdtoolApp.package_version.package_version_name for=field_package_version_name>Package_version_name</label> <input class=form-control name=package_version_name id=field_package_version_name ng-model=package_version.package_version_name required ng-maxlength=\"200\"/> <div ng-show=editForm.package_version_name.$invalid> <p class=help-block ng-show=editForm.package_version_name.$error.required translate=entity.validation.required> This field is required. </p> <p class=help-block ng-show=editForm.package_version_name.$error.maxlength translate=entity.validation.maxlength translate-value-max=200> This field cannot be longer than 200 characters. </p> </div> </div> <div class=form-group> <label translate=dgdtoolApp.package_version.package_id for=field_package_id>Package_id</label> <input type=number class=form-control name=package_id id=field_package_id ng-model=package_version.package_id required/> <div ng-show=editForm.package_id.$invalid> <p class=help-block ng-show=editForm.package_id.$error.required translate=entity.validation.required> This field is required. </p> <p class=help-block ng-show=editForm.package_id.$error.number translate=entity.validation.number> This field should be a number. </p> </div> </div> <div class=form-group> <label translate=dgdtoolApp.package_version.description for=field_description>Description</label> <input class=form-control name=description id=field_description ng-model=package_version.description required ng-maxlength=\"2000\"/> <div ng-show=editForm.description.$invalid> <p class=help-block ng-show=editForm.description.$error.required translate=entity.validation.required> This field is required. </p> <p class=help-block ng-show=editForm.description.$error.maxlength translate=entity.validation.maxlength translate-value-max=2000> This field cannot be longer than 2000 characters. </p> </div> </div> <div class=form-group> <label translate=dgdtoolApp.package_version.status_id for=field_status_id>Status_id</label> <input type=number class=form-control name=status_id id=field_status_id ng-model=package_version.status_id required/> <div ng-show=editForm.status_id.$invalid> <p class=help-block ng-show=editForm.status_id.$error.required translate=entity.validation.required> This field is required. </p> <p class=help-block ng-show=editForm.status_id.$error.number translate=entity.validation.number> This field should be a number. </p> </div> </div> <div class=form-group> <label translate=dgdtoolApp.package_version.created_by for=field_created_by>Created_by</label> <input class=form-control name=created_by id=field_created_by ng-model=package_version.created_by required ng-maxlength=\"200\"/> <div ng-show=editForm.created_by.$invalid> <p class=help-block ng-show=editForm.created_by.$error.required translate=entity.validation.required> This field is required. </p> <p class=help-block ng-show=editForm.created_by.$error.maxlength translate=entity.validation.maxlength translate-value-max=200> This field cannot be longer than 200 characters. </p> </div> </div> <div class=form-group> <label translate=dgdtoolApp.package_version.created_date for=field_created_date>Created_date</label> <input type=date class=form-control name=created_date id=field_created_date ng-model=package_version.created_date required/> <div ng-show=editForm.created_date.$invalid> <p class=help-block ng-show=editForm.created_date.$error.required translate=entity.validation.required> This field is required. </p> </div> </div> <div class=form-group> <label translate=dgdtoolApp.package_version.modified_by for=field_modified_by>Modified_by</label> <input class=form-control name=modified_by id=field_modified_by ng-model=package_version.modified_by required ng-maxlength=\"200\"/> <div ng-show=editForm.modified_by.$invalid> <p class=help-block ng-show=editForm.modified_by.$error.required translate=entity.validation.required> This field is required. </p> <p class=help-block ng-show=editForm.modified_by.$error.maxlength translate=entity.validation.maxlength translate-value-max=200> This field cannot be longer than 200 characters. </p> </div> </div> <div class=form-group> <label translate=dgdtoolApp.package_version.modified_date for=field_modified_date>Modified_date</label> <input type=date class=form-control name=modified_date id=field_modified_date ng-model=package_version.modified_date required/> <div ng-show=editForm.modified_date.$invalid> <p class=help-block ng-show=editForm.modified_date.$error.required translate=entity.validation.required> This field is required. </p> </div> </div> </div> <div class=modal-footer> <button type=button class=\"btn btn-default\" data-dismiss=modal ng-click=clear()> <span class=\"glyphicon glyphicon-ban-circle\"></span>&nbsp;<span translate=entity.action.cancel>Cancel</span> </button> <button type=submit ng-disabled=\"editForm.$invalid || editForm.$submitted\" class=\"btn btn-primary\"> <span class=\"glyphicon glyphicon-save\"></span>&nbsp;<span translate=entity.action.save>Save</span> </button> </div> </form>"
  );


  $templateCache.put('scripts/app/entities/package_version/package_versions.html',
    "<div> <h2 translate=dgdtoolApp.package_version.home.title>Package_versions</h2> <jh-alert></jh-alert> <div class=container> <div class=row> <div class=col-md-4> <button class=\"btn btn-primary\" ui-sref=package_version.new> <span class=\"glyphicon glyphicon-flash\"></span> <span translate=dgdtoolApp.package_version.home.createLabel>Create a new Package_version</span> </button> </div> <div class=col-md-8> <form name=searchForm class=form-inline> <div class=form-group> <input class=form-control ng-model=searchQuery id=searchQuery placeholder=query> </div> <button class=\"btn btn-info\" ng-click=search()><span class=\"glyphicon glyphicon-search\"></span> <span>Search a Package_version</span> </button> </form> </div> </div> </div> <div class=\"modal fade\" id=deletePackage_versionConfirmation> <div class=modal-dialog> <div class=modal-content> <form name=deleteForm ng-submit=confirmDelete(package_version.id)> <div class=modal-header> <button type=button class=close data-dismiss=modal aria-hidden=true ng-click=clear()>&times;</button> <h4 class=modal-title translate=entity.delete.title>Confirm delete operation</h4> </div> <div class=modal-body> <p translate=dgdtoolApp.package_version.delete.question translate-values=\"{id: '{{package_version.id}}'}\">Are you sure you want to delete this Package_version?</p> </div> <div class=modal-footer> <button type=button class=\"btn btn-default\" data-dismiss=modal ng-click=clear()> <span class=\"glyphicon glyphicon-ban-circle\"></span>&nbsp;<span translate=entity.action.cancel>Cancel</span> </button> <button type=submit ng-disabled=deleteForm.$invalid class=\"btn btn-danger\"> <span class=\"glyphicon glyphicon-remove-circle\"></span>&nbsp;<span translate=entity.action.delete>Delete</span> </button> </div> </form> </div> </div> </div> <div class=table-responsive> <table class=\"table table-striped\"> <thead> <tr> <th translate=global.field.id>ID</th> <th translate=dgdtoolApp.package_version.package_version_name>Package_version_name</th> <th translate=dgdtoolApp.package_version.package_id>Package_id</th> <th translate=dgdtoolApp.package_version.description>Description</th> <th translate=dgdtoolApp.package_version.status_id>Status_id</th> <th translate=dgdtoolApp.package_version.created_by>Created_by</th> <th translate=dgdtoolApp.package_version.created_date>Created_date</th> <th translate=dgdtoolApp.package_version.modified_by>Modified_by</th> <th translate=dgdtoolApp.package_version.modified_date>Modified_date</th> <th></th> </tr> </thead> <tbody> <tr ng-repeat=\"package_version in package_versions track by package_version.id\"> <td><a ui-sref=package_version.detail({id:package_version.id})>{{package_version.id}}</a></td> <td>{{package_version.package_version_name}}</td> <td>{{package_version.package_id}}</td> <td>{{package_version.description}}</td> <td>{{package_version.status_id}}</td> <td>{{package_version.created_by}}</td> <td>{{package_version.created_date | date:'mediumDate'}}</td> <td>{{package_version.modified_by}}</td> <td>{{package_version.modified_date | date:'mediumDate'}}</td> <td> <button type=submit ui-sref=package_version.detail({id:package_version.id}) class=\"btn btn-info btn-sm\"> <span class=\"glyphicon glyphicon-eye-open\"></span>&nbsp;<span translate=entity.action.view> View</span> </button> <button type=submit ui-sref=package_version.edit({id:package_version.id}) class=\"btn btn-primary btn-sm\"> <span class=\"glyphicon glyphicon-pencil\"></span>&nbsp;<span translate=entity.action.edit> Edit</span> </button> <button type=submit ng-click=delete(package_version.id) class=\"btn btn-danger btn-sm\"> <span class=\"glyphicon glyphicon-remove-circle\"></span>&nbsp;<span translate=entity.action.delete> Delete</span> </button> </td> </tr> </tbody> </table> <nav> <ul class=pager> <li ng-show=\"links['first'] >= 0\" ng-click=\"loadPage(links['first'])\"><a href=#>&lt;&lt;</a></li> <li ng-show=\"page > 0\" ng-click=\"loadPage(links['prev'] || 0)\"><a href=#>&lt;</a></li> <li ng-show=\"links['next']\" ng-click=\"loadPage(links['next'])\"><a href=#>&gt;</a></li> <li ng-show=\"links['last'] > 0\" ng-click=\"loadPage(links['last'])\"><a href=#>&gt;&gt;</a></li> </ul> </nav> </div> </div>"
  );


  $templateCache.put('scripts/app/entities/packages/packages-detail.html',
    "<div> <h2><span translate=dgdtoolApp.packages.detail.title>Packages</span> {{packages.id}}</h2> <div class=table-responsive> <table class=\"table table-striped\"> <thead> <tr> <th translate=entity.detail.field>Field</th> <th translate=entity.detail.value>Value</th> </tr> </thead> <tbody> <tr> <td> <span translate=dgdtoolApp.packages.package_name>Package_name</span> </td> <td> <span class=form-control-static>{{packages.package_name}}</span> </td> </tr> <tr> <td> <span translate=dgdtoolApp.packages.package_type_id>Package_type_id</span> </td> <td> <span class=form-control-static>{{packages.package_type_id}}</span> </td> </tr> <tr> <td> <span translate=dgdtoolApp.packages.description>Description</span> </td> <td> <span class=form-control-static>{{packages.description}}</span> </td> </tr> <tr> <td> <span translate=dgdtoolApp.packages.status_id>Status_id</span> </td> <td> <span class=form-control-static>{{packages.status_id}}</span> </td> </tr> <tr> <td> <span translate=dgdtoolApp.packages.created_by>Created_by</span> </td> <td> <span class=form-control-static>{{packages.created_by}}</span> </td> </tr> <tr> <td> <span translate=dgdtoolApp.packages.created_date>Created_date</span> </td> <td> <span class=form-control-static>{{packages.created_date | date:'mediumDate'}}</span> </td> </tr> <tr> <td> <span translate=dgdtoolApp.packages.modified_by>Modified_by</span> </td> <td> <span class=form-control-static>{{packages.modified_by}}</span> </td> </tr> <tr> <td> <span translate=dgdtoolApp.packages.modified_date>Modified_date</span> </td> <td> <span class=form-control-static>{{packages.modified_date | date:'mediumDate'}}</span> </td> </tr> </tbody> </table> </div> <button type=submit onclick=window.history.back() class=\"btn btn-info\"> <span class=\"glyphicon glyphicon-arrow-left\"></span>&nbsp;<span translate=entity.action.back> Back</span> </button> </div>"
  );


  $templateCache.put('scripts/app/entities/packages/packages-dialog.html',
    "<form name=editForm role=form novalidate ng-submit=save() show-validation> <div class=modal-header> <button type=button class=close data-dismiss=modal aria-hidden=true ng-click=clear()>&times;</button> <h4 class=modal-title id=myPackagesLabel translate=dgdtoolApp.packages.home.createOrEditLabel>Create or edit a Packages</h4> </div> <div class=modal-body> <jh-alert-error></jh-alert-error> <div class=form-group> <label for=id translate=global.field.id>ID</label> <input class=form-control id=id name=id ng-model=packages.id readonly/> </div> <div class=form-group> <label translate=dgdtoolApp.packages.package_name for=field_package_name>Package_name</label> <input class=form-control name=package_name id=field_package_name ng-model=packages.package_name required ng-maxlength=\"200\"/> <div ng-show=editForm.package_name.$invalid> <p class=help-block ng-show=editForm.package_name.$error.required translate=entity.validation.required> This field is required. </p> <p class=help-block ng-show=editForm.package_name.$error.maxlength translate=entity.validation.maxlength translate-value-max=200> This field cannot be longer than 200 characters. </p> </div> </div> <div class=form-group> <label translate=dgdtoolApp.packages.package_type_id for=field_package_type_id>Package_type_id</label> <input type=number class=form-control name=package_type_id id=field_package_type_id ng-model=packages.package_type_id required/> <div ng-show=editForm.package_type_id.$invalid> <p class=help-block ng-show=editForm.package_type_id.$error.required translate=entity.validation.required> This field is required. </p> <p class=help-block ng-show=editForm.package_type_id.$error.number translate=entity.validation.number> This field should be a number. </p> </div> </div> <div class=form-group> <label translate=dgdtoolApp.packages.description for=field_description>Description</label> <input class=form-control name=description id=field_description ng-model=packages.description required ng-maxlength=\"2000\"/> <div ng-show=editForm.description.$invalid> <p class=help-block ng-show=editForm.description.$error.required translate=entity.validation.required> This field is required. </p> <p class=help-block ng-show=editForm.description.$error.maxlength translate=entity.validation.maxlength translate-value-max=2000> This field cannot be longer than 2000 characters. </p> </div> </div> <div class=form-group> <label translate=dgdtoolApp.packages.status_id for=field_status_id>Status_id</label> <input type=number class=form-control name=status_id id=field_status_id ng-model=packages.status_id required/> <div ng-show=editForm.status_id.$invalid> <p class=help-block ng-show=editForm.status_id.$error.required translate=entity.validation.required> This field is required. </p> <p class=help-block ng-show=editForm.status_id.$error.number translate=entity.validation.number> This field should be a number. </p> </div> </div> <div class=form-group> <label translate=dgdtoolApp.packages.created_by for=field_created_by>Created_by</label> <input class=form-control name=created_by id=field_created_by ng-model=packages.created_by required ng-maxlength=\"200\"/> <div ng-show=editForm.created_by.$invalid> <p class=help-block ng-show=editForm.created_by.$error.required translate=entity.validation.required> This field is required. </p> <p class=help-block ng-show=editForm.created_by.$error.maxlength translate=entity.validation.maxlength translate-value-max=200> This field cannot be longer than 200 characters. </p> </div> </div> <div class=form-group> <label translate=dgdtoolApp.packages.created_date for=field_created_date>Created_date</label> <input type=date class=form-control name=created_date id=field_created_date ng-model=packages.created_date required/> <div ng-show=editForm.created_date.$invalid> <p class=help-block ng-show=editForm.created_date.$error.required translate=entity.validation.required> This field is required. </p> </div> </div> <div class=form-group> <label translate=dgdtoolApp.packages.modified_by for=field_modified_by>Modified_by</label> <input class=form-control name=modified_by id=field_modified_by ng-model=packages.modified_by required ng-maxlength=\"200\"/> <div ng-show=editForm.modified_by.$invalid> <p class=help-block ng-show=editForm.modified_by.$error.required translate=entity.validation.required> This field is required. </p> <p class=help-block ng-show=editForm.modified_by.$error.maxlength translate=entity.validation.maxlength translate-value-max=200> This field cannot be longer than 200 characters. </p> </div> </div> <div class=form-group> <label translate=dgdtoolApp.packages.modified_date for=field_modified_date>Modified_date</label> <input type=date class=form-control name=modified_date id=field_modified_date ng-model=packages.modified_date required/> <div ng-show=editForm.modified_date.$invalid> <p class=help-block ng-show=editForm.modified_date.$error.required translate=entity.validation.required> This field is required. </p> </div> </div> </div> <div class=modal-footer> <button type=button class=\"btn btn-default\" data-dismiss=modal ng-click=clear()> <span class=\"glyphicon glyphicon-ban-circle\"></span>&nbsp;<span translate=entity.action.cancel>Cancel</span> </button> <button type=submit ng-disabled=\"editForm.$invalid || editForm.$submitted\" class=\"btn btn-primary\"> <span class=\"glyphicon glyphicon-save\"></span>&nbsp;<span translate=entity.action.save>Save</span> </button> </div> </form>"
  );


  $templateCache.put('scripts/app/entities/packages/packagess.html',
    "<div> <h2 translate=dgdtoolApp.packages.home.title>Packagess</h2> <jh-alert></jh-alert> <div class=container> <div class=row> <div class=col-md-4> <button class=\"btn btn-primary\" ui-sref=packages.new> <span class=\"glyphicon glyphicon-flash\"></span> <span translate=dgdtoolApp.packages.home.createLabel>Create a new Packages</span> </button> </div> <div class=col-md-8> <form name=searchForm class=form-inline> <div class=form-group> <input class=form-control ng-model=searchQuery id=searchQuery placeholder=query> </div> <button class=\"btn btn-info\" ng-click=search()><span class=\"glyphicon glyphicon-search\"></span> <span>Search a Packages</span> </button> </form> </div> </div> </div> <div class=\"modal fade\" id=deletePackagesConfirmation> <div class=modal-dialog> <div class=modal-content> <form name=deleteForm ng-submit=confirmDelete(packages.id)> <div class=modal-header> <button type=button class=close data-dismiss=modal aria-hidden=true ng-click=clear()>&times;</button> <h4 class=modal-title translate=entity.delete.title>Confirm delete operation</h4> </div> <div class=modal-body> <p translate=dgdtoolApp.packages.delete.question translate-values=\"{id: '{{packages.id}}'}\">Are you sure you want to delete this Packages?</p> </div> <div class=modal-footer> <button type=button class=\"btn btn-default\" data-dismiss=modal ng-click=clear()> <span class=\"glyphicon glyphicon-ban-circle\"></span>&nbsp;<span translate=entity.action.cancel>Cancel</span> </button> <button type=submit ng-disabled=deleteForm.$invalid class=\"btn btn-danger\"> <span class=\"glyphicon glyphicon-remove-circle\"></span>&nbsp;<span translate=entity.action.delete>Delete</span> </button> </div> </form> </div> </div> </div> <div class=table-responsive> <table class=\"table table-striped\"> <thead> <tr> <th translate=global.field.id>ID</th> <th translate=dgdtoolApp.packages.package_name>Package_name</th> <th translate=dgdtoolApp.packages.package_type_id>Package_type_id</th> <th translate=dgdtoolApp.packages.description>Description</th> <th translate=dgdtoolApp.packages.status_id>Status_id</th> <th translate=dgdtoolApp.packages.created_by>Created_by</th> <th translate=dgdtoolApp.packages.created_date>Created_date</th> <th translate=dgdtoolApp.packages.modified_by>Modified_by</th> <th translate=dgdtoolApp.packages.modified_date>Modified_date</th> <th></th> </tr> </thead> <tbody> <tr ng-repeat=\"packages in packagess track by packages.id\"> <td><a ui-sref=packages.detail({id:packages.id})>{{packages.id}}</a></td> <td>{{packages.package_name}}</td> <td>{{packages.package_type_id}}</td> <td>{{packages.description}}</td> <td>{{packages.status_id}}</td> <td>{{packages.created_by}}</td> <td>{{packages.created_date | date:'mediumDate'}}</td> <td>{{packages.modified_by}}</td> <td>{{packages.modified_date | date:'mediumDate'}}</td> <td> <button type=submit ui-sref=packages.detail({id:packages.id}) class=\"btn btn-info btn-sm\"> <span class=\"glyphicon glyphicon-eye-open\"></span>&nbsp;<span translate=entity.action.view> View</span> </button> <button type=submit ui-sref=packages.edit({id:packages.id}) class=\"btn btn-primary btn-sm\"> <span class=\"glyphicon glyphicon-pencil\"></span>&nbsp;<span translate=entity.action.edit> Edit</span> </button> <button type=submit ng-click=delete(packages.id) class=\"btn btn-danger btn-sm\"> <span class=\"glyphicon glyphicon-remove-circle\"></span>&nbsp;<span translate=entity.action.delete> Delete</span> </button> </td> </tr> </tbody> </table> <nav> <ul class=pager> <li ng-show=\"links['first'] >= 0\" ng-click=\"loadPage(links['first'])\"><a href=#>&lt;&lt;</a></li> <li ng-show=\"page > 0\" ng-click=\"loadPage(links['prev'] || 0)\"><a href=#>&lt;</a></li> <li ng-show=\"links['next']\" ng-click=\"loadPage(links['next'])\"><a href=#>&gt;</a></li> <li ng-show=\"links['last'] > 0\" ng-click=\"loadPage(links['last'])\"><a href=#>&gt;&gt;</a></li> </ul> </nav> </div> </div>"
  );


  $templateCache.put('scripts/app/entities/partner/partner-detail.html',
    "<div> <h2><span translate=dgdtoolApp.partner.detail.title>Partner</span> {{partner.id}}</h2> <div class=table-responsive> <table class=\"table table-striped\"> <thead> <tr> <th translate=entity.detail.field>Field</th> <th translate=entity.detail.value>Value</th> </tr> </thead> <tbody> <tr> <td> <span translate=dgdtoolApp.partner.partner_name>Partner_name</span> </td> <td> <span class=form-control-static>{{partner.partner_name}}</span> </td> </tr> <tr> <td> <span translate=dgdtoolApp.partner.partner_key>Partner_key</span> </td> <td> <span class=form-control-static>{{partner.partner_key}}</span> </td> </tr> <tr> <td> <span translate=dgdtoolApp.partner.partner_base_url>Partner_base_url</span> </td> <td> <span class=form-control-static>{{partner.partner_base_url}}</span> </td> </tr> <tr> <td> <span translate=dgdtoolApp.partner.partner_broker_url>Partner_broker_url</span> </td> <td> <span class=form-control-static>{{partner.partner_broker_url}}</span> </td> </tr> <tr> <td> <span translate=dgdtoolApp.partner.description>Description</span> </td> <td> <span class=form-control-static>{{partner.description}}</span> </td> </tr> <tr> <td> <span translate=dgdtoolApp.partner.status_id>Status_id</span> </td> <td> <span class=form-control-static>{{partner.status_id}}</span> </td> </tr> <tr> <td> <span translate=dgdtoolApp.partner.created_by>Created_by</span> </td> <td> <span class=form-control-static>{{partner.created_by}}</span> </td> </tr> <tr> <td> <span translate=dgdtoolApp.partner.created_date>Created_date</span> </td> <td> <span class=form-control-static>{{partner.created_date | date:'mediumDate'}}</span> </td> </tr> <tr> <td> <span translate=dgdtoolApp.partner.modified_by>Modified_by</span> </td> <td> <span class=form-control-static>{{partner.modified_by}}</span> </td> </tr> <tr> <td> <span translate=dgdtoolApp.partner.modified_date>Modified_date</span> </td> <td> <span class=form-control-static>{{partner.modified_date | date:'mediumDate'}}</span> </td> </tr> </tbody> </table> </div> <button type=submit onclick=window.history.back() class=\"btn btn-info\"> <span class=\"glyphicon glyphicon-arrow-left\"></span>&nbsp;<span translate=entity.action.back> Back</span> </button> </div>"
  );


  $templateCache.put('scripts/app/entities/partner/partner-dialog.html',
    "<form name=editForm role=form novalidate ng-submit=save() show-validation> <div class=modal-header> <button type=button class=close data-dismiss=modal aria-hidden=true ng-click=clear()>&times;</button> <h4 class=modal-title id=myPartnerLabel translate=dgdtoolApp.partner.home.createOrEditLabel>Create or edit a Partner</h4> </div> <div class=modal-body> <jh-alert-error></jh-alert-error> <div class=form-group> <label for=id translate=global.field.id>ID</label> <input class=form-control id=id name=id ng-model=partner.id readonly/> </div> <div class=form-group> <label translate=dgdtoolApp.partner.partner_name for=field_partner_name>Partner_name</label> <input class=form-control name=partner_name id=field_partner_name ng-model=partner.partner_name required ng-maxlength=\"200\"/> <div ng-show=editForm.partner_name.$invalid> <p class=help-block ng-show=editForm.partner_name.$error.required translate=entity.validation.required> This field is required. </p> <p class=help-block ng-show=editForm.partner_name.$error.maxlength translate=entity.validation.maxlength translate-value-max=200> This field cannot be longer than 200 characters. </p> </div> </div> <div class=form-group> <label translate=dgdtoolApp.partner.partner_key for=field_partner_key>Partner_key</label> <input class=form-control name=partner_key id=field_partner_key ng-model=partner.partner_key required ng-maxlength=\"400\"/> <div ng-show=editForm.partner_key.$invalid> <p class=help-block ng-show=editForm.partner_key.$error.required translate=entity.validation.required> This field is required. </p> <p class=help-block ng-show=editForm.partner_key.$error.maxlength translate=entity.validation.maxlength translate-value-max=400> This field cannot be longer than 400 characters. </p> </div> </div> <div class=form-group> <label translate=dgdtoolApp.partner.partner_base_url for=field_partner_base_url>Partner_base_url</label> <input class=form-control name=partner_base_url id=field_partner_base_url ng-model=partner.partner_base_url required ng-maxlength=\"2000\"/> <div ng-show=editForm.partner_base_url.$invalid> <p class=help-block ng-show=editForm.partner_base_url.$error.required translate=entity.validation.required> This field is required. </p> <p class=help-block ng-show=editForm.partner_base_url.$error.maxlength translate=entity.validation.maxlength translate-value-max=2000> This field cannot be longer than 2000 characters. </p> </div> </div> <div class=form-group> <label translate=dgdtoolApp.partner.partner_broker_url for=field_partner_broker_url>Partner_broker_url</label> <input class=form-control name=partner_broker_url id=field_partner_broker_url ng-model=partner.partner_broker_url required ng-maxlength=\"2000\"/> <div ng-show=editForm.partner_broker_url.$invalid> <p class=help-block ng-show=editForm.partner_broker_url.$error.required translate=entity.validation.required> This field is required. </p> <p class=help-block ng-show=editForm.partner_broker_url.$error.maxlength translate=entity.validation.maxlength translate-value-max=2000> This field cannot be longer than 2000 characters. </p> </div> </div> <div class=form-group> <label translate=dgdtoolApp.partner.description for=field_description>Description</label> <input class=form-control name=description id=field_description ng-model=partner.description required ng-maxlength=\"2000\"/> <div ng-show=editForm.description.$invalid> <p class=help-block ng-show=editForm.description.$error.required translate=entity.validation.required> This field is required. </p> <p class=help-block ng-show=editForm.description.$error.maxlength translate=entity.validation.maxlength translate-value-max=2000> This field cannot be longer than 2000 characters. </p> </div> </div> <div class=form-group> <label translate=dgdtoolApp.partner.status_id for=field_status_id>Status_id</label> <input type=number class=form-control name=status_id id=field_status_id ng-model=partner.status_id required/> <div ng-show=editForm.status_id.$invalid> <p class=help-block ng-show=editForm.status_id.$error.required translate=entity.validation.required> This field is required. </p> <p class=help-block ng-show=editForm.status_id.$error.number translate=entity.validation.number> This field should be a number. </p> </div> </div> <div class=form-group> <label translate=dgdtoolApp.partner.created_by for=field_created_by>Created_by</label> <input class=form-control name=created_by id=field_created_by ng-model=partner.created_by required ng-maxlength=\"200\"/> <div ng-show=editForm.created_by.$invalid> <p class=help-block ng-show=editForm.created_by.$error.required translate=entity.validation.required> This field is required. </p> <p class=help-block ng-show=editForm.created_by.$error.maxlength translate=entity.validation.maxlength translate-value-max=200> This field cannot be longer than 200 characters. </p> </div> </div> <div class=form-group> <label translate=dgdtoolApp.partner.created_date for=field_created_date>Created_date</label> <input type=date class=form-control name=created_date id=field_created_date ng-model=partner.created_date required/> <div ng-show=editForm.created_date.$invalid> <p class=help-block ng-show=editForm.created_date.$error.required translate=entity.validation.required> This field is required. </p> </div> </div> <div class=form-group> <label translate=dgdtoolApp.partner.modified_by for=field_modified_by>Modified_by</label> <input class=form-control name=modified_by id=field_modified_by ng-model=partner.modified_by required ng-maxlength=\"200\"/> <div ng-show=editForm.modified_by.$invalid> <p class=help-block ng-show=editForm.modified_by.$error.required translate=entity.validation.required> This field is required. </p> <p class=help-block ng-show=editForm.modified_by.$error.maxlength translate=entity.validation.maxlength translate-value-max=200> This field cannot be longer than 200 characters. </p> </div> </div> <div class=form-group> <label translate=dgdtoolApp.partner.modified_date for=field_modified_date>Modified_date</label> <input type=date class=form-control name=modified_date id=field_modified_date ng-model=partner.modified_date required/> <div ng-show=editForm.modified_date.$invalid> <p class=help-block ng-show=editForm.modified_date.$error.required translate=entity.validation.required> This field is required. </p> </div> </div> </div> <div class=modal-footer> <button type=button class=\"btn btn-default\" data-dismiss=modal ng-click=clear()> <span class=\"glyphicon glyphicon-ban-circle\"></span>&nbsp;<span translate=entity.action.cancel>Cancel</span> </button> <button type=submit ng-disabled=\"editForm.$invalid || editForm.$submitted\" class=\"btn btn-primary\"> <span class=\"glyphicon glyphicon-save\"></span>&nbsp;<span translate=entity.action.save>Save</span> </button> </div> </form>"
  );


  $templateCache.put('scripts/app/entities/partner/partners.html',
    "<div> <h2 translate=dgdtoolApp.partner.home.title>Partners</h2> <jh-alert></jh-alert> <div class=container> <div class=row> <div class=col-md-4> <button class=\"btn btn-primary\" ui-sref=partner.new> <span class=\"glyphicon glyphicon-flash\"></span> <span translate=dgdtoolApp.partner.home.createLabel>Create a new Partner</span> </button> </div> <div class=col-md-8> <form name=searchForm class=form-inline> <div class=form-group> <input class=form-control ng-model=searchQuery id=searchQuery placeholder=query> </div> <button class=\"btn btn-info\" ng-click=search()><span class=\"glyphicon glyphicon-search\"></span> <span>Search a Partner</span> </button> </form> </div> </div> </div> <div class=\"modal fade\" id=deletePartnerConfirmation> <div class=modal-dialog> <div class=modal-content> <form name=deleteForm ng-submit=confirmDelete(partner.id)> <div class=modal-header> <button type=button class=close data-dismiss=modal aria-hidden=true ng-click=clear()>&times;</button> <h4 class=modal-title translate=entity.delete.title>Confirm delete operation</h4> </div> <div class=modal-body> <p translate=dgdtoolApp.partner.delete.question translate-values=\"{id: '{{partner.id}}'}\">Are you sure you want to delete this Partner?</p> </div> <div class=modal-footer> <button type=button class=\"btn btn-default\" data-dismiss=modal ng-click=clear()> <span class=\"glyphicon glyphicon-ban-circle\"></span>&nbsp;<span translate=entity.action.cancel>Cancel</span> </button> <button type=submit ng-disabled=deleteForm.$invalid class=\"btn btn-danger\"> <span class=\"glyphicon glyphicon-remove-circle\"></span>&nbsp;<span translate=entity.action.delete>Delete</span> </button> </div> </form> </div> </div> </div> <div class=table-responsive> <table class=\"table table-striped\"> <thead> <tr> <th translate=global.field.id>ID</th> <th translate=dgdtoolApp.partner.partner_name>Partner_name</th> <th translate=dgdtoolApp.partner.partner_key>Partner_key</th> <th translate=dgdtoolApp.partner.partner_base_url>Partner_base_url</th> <th translate=dgdtoolApp.partner.partner_broker_url>Partner_broker_url</th> <th translate=dgdtoolApp.partner.description>Description</th> <th translate=dgdtoolApp.partner.status_id>Status_id</th> <th translate=dgdtoolApp.partner.created_by>Created_by</th> <th translate=dgdtoolApp.partner.created_date>Created_date</th> <th translate=dgdtoolApp.partner.modified_by>Modified_by</th> <th translate=dgdtoolApp.partner.modified_date>Modified_date</th> <th></th> </tr> </thead> <tbody> <tr ng-repeat=\"partner in partners track by partner.id\"> <td><a ui-sref=partner.detail({id:partner.id})>{{partner.id}}</a></td> <td>{{partner.partner_name}}</td> <td>{{partner.partner_key}}</td> <td>{{partner.partner_base_url}}</td> <td>{{partner.partner_broker_url}}</td> <td>{{partner.description}}</td> <td>{{partner.status_id}}</td> <td>{{partner.created_by}}</td> <td>{{partner.created_date | date:'mediumDate'}}</td> <td>{{partner.modified_by}}</td> <td>{{partner.modified_date | date:'mediumDate'}}</td> <td> <button type=submit ui-sref=partner.detail({id:partner.id}) class=\"btn btn-info btn-sm\"> <span class=\"glyphicon glyphicon-eye-open\"></span>&nbsp;<span translate=entity.action.view> View</span> </button> <button type=submit ui-sref=partner.edit({id:partner.id}) class=\"btn btn-primary btn-sm\"> <span class=\"glyphicon glyphicon-pencil\"></span>&nbsp;<span translate=entity.action.edit> Edit</span> </button> <button type=submit ng-click=delete(partner.id) class=\"btn btn-danger btn-sm\"> <span class=\"glyphicon glyphicon-remove-circle\"></span>&nbsp;<span translate=entity.action.delete> Delete</span> </button> </td> </tr> </tbody> </table> <nav> <ul class=pager> <li ng-show=\"links['first'] >= 0\" ng-click=\"loadPage(links['first'])\"><a href=#>&lt;&lt;</a></li> <li ng-show=\"page > 0\" ng-click=\"loadPage(links['prev'] || 0)\"><a href=#>&lt;</a></li> <li ng-show=\"links['next']\" ng-click=\"loadPage(links['next'])\"><a href=#>&gt;</a></li> <li ng-show=\"links['last'] > 0\" ng-click=\"loadPage(links['last'])\"><a href=#>&gt;&gt;</a></li> </ul> </nav> </div> </div>"
  );


  $templateCache.put('scripts/app/entities/partner_api/partner_api-detail.html',
    "<div> <h2><span translate=dgdtoolApp.partner_api.detail.title>Partner_api</span> {{partner_api.id}}</h2> <div class=table-responsive> <table class=\"table table-striped\"> <thead> <tr> <th translate=entity.detail.field>Field</th> <th translate=entity.detail.value>Value</th> </tr> </thead> <tbody> <tr> <td> <span translate=dgdtoolApp.partner_api.partner_id>Partner_id</span> </td> <td> <span class=form-control-static>{{partner_api.partner_id}}</span> </td> </tr> <tr> <td> <span translate=dgdtoolApp.partner_api.partner_req_url>Partner_req_url</span> </td> <td> <span class=form-control-static>{{partner_api.partner_req_url}}</span> </td> </tr> <tr> <td> <span translate=dgdtoolApp.partner_api.partner_req_obj>Partner_req_obj</span> </td> <td> <span class=form-control-static>{{partner_api.partner_req_obj}}</span> </td> </tr> <tr> <td> <span translate=dgdtoolApp.partner_api.partner_res_url>Partner_res_url</span> </td> <td> <span class=form-control-static>{{partner_api.partner_res_url}}</span> </td> </tr> <tr> <td> <span translate=dgdtoolApp.partner_api.asp_method>Asp_method</span> </td> <td> <span class=form-control-static>{{partner_api.asp_method}}</span> </td> </tr> <tr> <td> <span translate=dgdtoolApp.partner_api.asp_app_id>Asp_app_id</span> </td> <td> <span class=form-control-static>{{partner_api.asp_app_id}}</span> </td> </tr> <tr> <td> <span translate=dgdtoolApp.partner_api.description>Description</span> </td> <td> <span class=form-control-static>{{partner_api.description}}</span> </td> </tr> <tr> <td> <span translate=dgdtoolApp.partner_api.status_id>Status_id</span> </td> <td> <span class=form-control-static>{{partner_api.status_id}}</span> </td> </tr> <tr> <td> <span translate=dgdtoolApp.partner_api.created_by>Created_by</span> </td> <td> <span class=form-control-static>{{partner_api.created_by}}</span> </td> </tr> <tr> <td> <span translate=dgdtoolApp.partner_api.created_date>Created_date</span> </td> <td> <span class=form-control-static>{{partner_api.created_date | date:'mediumDate'}}</span> </td> </tr> <tr> <td> <span translate=dgdtoolApp.partner_api.modified_by>Modified_by</span> </td> <td> <span class=form-control-static>{{partner_api.modified_by}}</span> </td> </tr> <tr> <td> <span translate=dgdtoolApp.partner_api.modified_date>Modified_date</span> </td> <td> <span class=form-control-static>{{partner_api.modified_date | date:'mediumDate'}}</span> </td> </tr> </tbody> </table> </div> <button type=submit onclick=window.history.back() class=\"btn btn-info\"> <span class=\"glyphicon glyphicon-arrow-left\"></span>&nbsp;<span translate=entity.action.back> Back</span> </button> </div>"
  );


  $templateCache.put('scripts/app/entities/partner_api/partner_api-dialog.html',
    "<form name=editForm role=form novalidate ng-submit=save() show-validation> <div class=modal-header> <button type=button class=close data-dismiss=modal aria-hidden=true ng-click=clear()>&times;</button> <h4 class=modal-title id=myPartner_apiLabel translate=dgdtoolApp.partner_api.home.createOrEditLabel>Create or edit a Partner_api</h4> </div> <div class=modal-body> <jh-alert-error></jh-alert-error> <div class=form-group> <label for=id translate=global.field.id>ID</label> <input class=form-control id=id name=id ng-model=partner_api.id readonly/> </div> <div class=form-group> <label translate=dgdtoolApp.partner_api.partner_id for=field_partner_id>Partner_id</label> <input type=number class=form-control name=partner_id id=field_partner_id ng-model=partner_api.partner_id required/> <div ng-show=editForm.partner_id.$invalid> <p class=help-block ng-show=editForm.partner_id.$error.required translate=entity.validation.required> This field is required. </p> <p class=help-block ng-show=editForm.partner_id.$error.number translate=entity.validation.number> This field should be a number. </p> </div> </div> <div class=form-group> <label translate=dgdtoolApp.partner_api.partner_req_url for=field_partner_req_url>Partner_req_url</label> <input class=form-control name=partner_req_url id=field_partner_req_url ng-model=partner_api.partner_req_url required ng-maxlength=\"2000\"/> <div ng-show=editForm.partner_req_url.$invalid> <p class=help-block ng-show=editForm.partner_req_url.$error.required translate=entity.validation.required> This field is required. </p> <p class=help-block ng-show=editForm.partner_req_url.$error.maxlength translate=entity.validation.maxlength translate-value-max=2000> This field cannot be longer than 2000 characters. </p> </div> </div> <div class=form-group> <label translate=dgdtoolApp.partner_api.partner_req_obj for=field_partner_req_obj>Partner_req_obj</label> <input class=form-control name=partner_req_obj id=field_partner_req_obj ng-model=partner_api.partner_req_obj required ng-maxlength=\"2000\"/> <div ng-show=editForm.partner_req_obj.$invalid> <p class=help-block ng-show=editForm.partner_req_obj.$error.required translate=entity.validation.required> This field is required. </p> <p class=help-block ng-show=editForm.partner_req_obj.$error.maxlength translate=entity.validation.maxlength translate-value-max=2000> This field cannot be longer than 2000 characters. </p> </div> </div> <div class=form-group> <label translate=dgdtoolApp.partner_api.partner_res_url for=field_partner_res_url>Partner_res_url</label> <input class=form-control name=partner_res_url id=field_partner_res_url ng-model=partner_api.partner_res_url required ng-maxlength=\"2000\"/> <div ng-show=editForm.partner_res_url.$invalid> <p class=help-block ng-show=editForm.partner_res_url.$error.required translate=entity.validation.required> This field is required. </p> <p class=help-block ng-show=editForm.partner_res_url.$error.maxlength translate=entity.validation.maxlength translate-value-max=2000> This field cannot be longer than 2000 characters. </p> </div> </div> <div class=form-group> <label translate=dgdtoolApp.partner_api.asp_method for=field_asp_method>Asp_method</label> <input class=form-control name=asp_method id=field_asp_method ng-model=partner_api.asp_method required ng-maxlength=\"200\"/> <div ng-show=editForm.asp_method.$invalid> <p class=help-block ng-show=editForm.asp_method.$error.required translate=entity.validation.required> This field is required. </p> <p class=help-block ng-show=editForm.asp_method.$error.maxlength translate=entity.validation.maxlength translate-value-max=200> This field cannot be longer than 200 characters. </p> </div> </div> <div class=form-group> <label translate=dgdtoolApp.partner_api.asp_app_id for=field_asp_app_id>Asp_app_id</label> <input type=number class=form-control name=asp_app_id id=field_asp_app_id ng-model=\"partner_api.asp_app_id\"/> </div> <div class=form-group> <label translate=dgdtoolApp.partner_api.description for=field_description>Description</label> <input class=form-control name=description id=field_description ng-model=partner_api.description required ng-maxlength=\"2000\"/> <div ng-show=editForm.description.$invalid> <p class=help-block ng-show=editForm.description.$error.required translate=entity.validation.required> This field is required. </p> <p class=help-block ng-show=editForm.description.$error.maxlength translate=entity.validation.maxlength translate-value-max=2000> This field cannot be longer than 2000 characters. </p> </div> </div> <div class=form-group> <label translate=dgdtoolApp.partner_api.status_id for=field_status_id>Status_id</label> <input type=number class=form-control name=status_id id=field_status_id ng-model=partner_api.status_id required/> <div ng-show=editForm.status_id.$invalid> <p class=help-block ng-show=editForm.status_id.$error.required translate=entity.validation.required> This field is required. </p> <p class=help-block ng-show=editForm.status_id.$error.number translate=entity.validation.number> This field should be a number. </p> </div> </div> <div class=form-group> <label translate=dgdtoolApp.partner_api.created_by for=field_created_by>Created_by</label> <input class=form-control name=created_by id=field_created_by ng-model=partner_api.created_by required ng-maxlength=\"200\"/> <div ng-show=editForm.created_by.$invalid> <p class=help-block ng-show=editForm.created_by.$error.required translate=entity.validation.required> This field is required. </p> <p class=help-block ng-show=editForm.created_by.$error.maxlength translate=entity.validation.maxlength translate-value-max=200> This field cannot be longer than 200 characters. </p> </div> </div> <div class=form-group> <label translate=dgdtoolApp.partner_api.created_date for=field_created_date>Created_date</label> <input type=date class=form-control name=created_date id=field_created_date ng-model=\"partner_api.created_date\"/> </div> <div class=form-group> <label translate=dgdtoolApp.partner_api.modified_by for=field_modified_by>Modified_by</label> <input class=form-control name=modified_by id=field_modified_by ng-model=partner_api.modified_by required ng-maxlength=\"200\"/> <div ng-show=editForm.modified_by.$invalid> <p class=help-block ng-show=editForm.modified_by.$error.required translate=entity.validation.required> This field is required. </p> <p class=help-block ng-show=editForm.modified_by.$error.maxlength translate=entity.validation.maxlength translate-value-max=200> This field cannot be longer than 200 characters. </p> </div> </div> <div class=form-group> <label translate=dgdtoolApp.partner_api.modified_date for=field_modified_date>Modified_date</label> <input type=date class=form-control name=modified_date id=field_modified_date ng-model=partner_api.modified_date required/> <div ng-show=editForm.modified_date.$invalid> <p class=help-block ng-show=editForm.modified_date.$error.required translate=entity.validation.required> This field is required. </p> </div> </div> </div> <div class=modal-footer> <button type=button class=\"btn btn-default\" data-dismiss=modal ng-click=clear()> <span class=\"glyphicon glyphicon-ban-circle\"></span>&nbsp;<span translate=entity.action.cancel>Cancel</span> </button> <button type=submit ng-disabled=\"editForm.$invalid || editForm.$submitted\" class=\"btn btn-primary\"> <span class=\"glyphicon glyphicon-save\"></span>&nbsp;<span translate=entity.action.save>Save</span> </button> </div> </form>"
  );


  $templateCache.put('scripts/app/entities/partner_api/partner_apis.html',
    "<div> <h2 translate=dgdtoolApp.partner_api.home.title>Partner_apis</h2> <jh-alert></jh-alert> <div class=container> <div class=row> <div class=col-md-4> <button class=\"btn btn-primary\" ui-sref=partner_api.new> <span class=\"glyphicon glyphicon-flash\"></span> <span translate=dgdtoolApp.partner_api.home.createLabel>Create a new Partner_api</span> </button> </div> <div class=col-md-8> <form name=searchForm class=form-inline> <div class=form-group> <input class=form-control ng-model=searchQuery id=searchQuery placeholder=query> </div> <button class=\"btn btn-info\" ng-click=search()><span class=\"glyphicon glyphicon-search\"></span> <span>Search a Partner_api</span> </button> </form> </div> </div> </div> <div class=\"modal fade\" id=deletePartner_apiConfirmation> <div class=modal-dialog> <div class=modal-content> <form name=deleteForm ng-submit=confirmDelete(partner_api.id)> <div class=modal-header> <button type=button class=close data-dismiss=modal aria-hidden=true ng-click=clear()>&times;</button> <h4 class=modal-title translate=entity.delete.title>Confirm delete operation</h4> </div> <div class=modal-body> <p translate=dgdtoolApp.partner_api.delete.question translate-values=\"{id: '{{partner_api.id}}'}\">Are you sure you want to delete this Partner_api?</p> </div> <div class=modal-footer> <button type=button class=\"btn btn-default\" data-dismiss=modal ng-click=clear()> <span class=\"glyphicon glyphicon-ban-circle\"></span>&nbsp;<span translate=entity.action.cancel>Cancel</span> </button> <button type=submit ng-disabled=deleteForm.$invalid class=\"btn btn-danger\"> <span class=\"glyphicon glyphicon-remove-circle\"></span>&nbsp;<span translate=entity.action.delete>Delete</span> </button> </div> </form> </div> </div> </div> <div class=table-responsive> <table class=\"table table-striped\"> <thead> <tr> <th translate=global.field.id>ID</th> <th translate=dgdtoolApp.partner_api.partner_id>Partner_id</th> <th translate=dgdtoolApp.partner_api.partner_req_url>Partner_req_url</th> <th translate=dgdtoolApp.partner_api.partner_req_obj>Partner_req_obj</th> <th translate=dgdtoolApp.partner_api.partner_res_url>Partner_res_url</th> <th translate=dgdtoolApp.partner_api.asp_method>Asp_method</th> <th translate=dgdtoolApp.partner_api.asp_app_id>Asp_app_id</th> <th translate=dgdtoolApp.partner_api.description>Description</th> <th translate=dgdtoolApp.partner_api.status_id>Status_id</th> <th translate=dgdtoolApp.partner_api.created_by>Created_by</th> <th translate=dgdtoolApp.partner_api.created_date>Created_date</th> <th translate=dgdtoolApp.partner_api.modified_by>Modified_by</th> <th translate=dgdtoolApp.partner_api.modified_date>Modified_date</th> <th></th> </tr> </thead> <tbody> <tr ng-repeat=\"partner_api in partner_apis track by partner_api.id\"> <td><a ui-sref=partner_api.detail({id:partner_api.id})>{{partner_api.id}}</a></td> <td>{{partner_api.partner_id}}</td> <td>{{partner_api.partner_req_url}}</td> <td>{{partner_api.partner_req_obj}}</td> <td>{{partner_api.partner_res_url}}</td> <td>{{partner_api.asp_method}}</td> <td>{{partner_api.asp_app_id}}</td> <td>{{partner_api.description}}</td> <td>{{partner_api.status_id}}</td> <td>{{partner_api.created_by}}</td> <td>{{partner_api.created_date | date:'mediumDate'}}</td> <td>{{partner_api.modified_by}}</td> <td>{{partner_api.modified_date | date:'mediumDate'}}</td> <td> <button type=submit ui-sref=partner_api.detail({id:partner_api.id}) class=\"btn btn-info btn-sm\"> <span class=\"glyphicon glyphicon-eye-open\"></span>&nbsp;<span translate=entity.action.view> View</span> </button> <button type=submit ui-sref=partner_api.edit({id:partner_api.id}) class=\"btn btn-primary btn-sm\"> <span class=\"glyphicon glyphicon-pencil\"></span>&nbsp;<span translate=entity.action.edit> Edit</span> </button> <button type=submit ng-click=delete(partner_api.id) class=\"btn btn-danger btn-sm\"> <span class=\"glyphicon glyphicon-remove-circle\"></span>&nbsp;<span translate=entity.action.delete> Delete</span> </button> </td> </tr> </tbody> </table> <nav> <ul class=pager> <li ng-show=\"links['first'] >= 0\" ng-click=\"loadPage(links['first'])\"><a href=#>&lt;&lt;</a></li> <li ng-show=\"page > 0\" ng-click=\"loadPage(links['prev'] || 0)\"><a href=#>&lt;</a></li> <li ng-show=\"links['next']\" ng-click=\"loadPage(links['next'])\"><a href=#>&gt;</a></li> <li ng-show=\"links['last'] > 0\" ng-click=\"loadPage(links['last'])\"><a href=#>&gt;&gt;</a></li> </ul> </nav> </div> </div>"
  );


  $templateCache.put('scripts/app/entities/path/path-detail.html',
    "<div> <h2><span translate=dgdtoolApp.path.detail.title>Path</span> {{path.id}}</h2> <div class=table-responsive> <table class=\"table table-striped\"> <thead> <tr> <th translate=entity.detail.field>Field</th> <th translate=entity.detail.value>Value</th> </tr> </thead> <tbody> <tr> <td> <span translate=dgdtoolApp.path.path_name>Path_name</span> </td> <td> <span class=form-control-static>{{path.path_name}}</span> </td> </tr> <tr> <td> <span translate=dgdtoolApp.path.description>Description</span> </td> <td> <span class=form-control-static>{{path.description}}</span> </td> </tr> <tr> <td> <span translate=dgdtoolApp.path.status_id>Status_id</span> </td> <td> <span class=form-control-static>{{path.status_id}}</span> </td> </tr> <tr> <td> <span translate=dgdtoolApp.path.created_by>Created_by</span> </td> <td> <span class=form-control-static>{{path.created_by}}</span> </td> </tr> <tr> <td> <span translate=dgdtoolApp.path.created_date>Created_date</span> </td> <td> <span class=form-control-static>{{path.created_date | date:'mediumDate'}}</span> </td> </tr> <tr> <td> <span translate=dgdtoolApp.path.modified_by>Modified_by</span> </td> <td> <span class=form-control-static>{{path.modified_by}}</span> </td> </tr> <tr> <td> <span translate=dgdtoolApp.path.modified_date>Modified_date</span> </td> <td> <span class=form-control-static>{{path.modified_date | date:'mediumDate'}}</span> </td> </tr> </tbody> </table> </div> <button type=submit onclick=window.history.back() class=\"btn btn-info\"> <span class=\"glyphicon glyphicon-arrow-left\"></span>&nbsp;<span translate=entity.action.back> Back</span> </button> </div>"
  );


  $templateCache.put('scripts/app/entities/path/path-dialog.html',
    "<form name=editForm role=form novalidate ng-submit=save() show-validation> <div class=modal-header> <button type=button class=close data-dismiss=modal aria-hidden=true ng-click=clear()>&times;</button> <h4 class=modal-title id=myPathLabel translate=dgdtoolApp.path.home.createOrEditLabel>Create or edit a Path</h4> </div> <div class=modal-body> <jh-alert-error></jh-alert-error> <div class=form-group> <label for=id translate=global.field.id>ID</label> <input class=form-control id=id name=id ng-model=path.id readonly/> </div> <div class=form-group> <label translate=dgdtoolApp.path.path_name for=field_path_name>Path_name</label> <input class=form-control name=path_name id=field_path_name ng-model=path.path_name required ng-maxlength=\"200\"/> <div ng-show=editForm.path_name.$invalid> <p class=help-block ng-show=editForm.path_name.$error.required translate=entity.validation.required> This field is required. </p> <p class=help-block ng-show=editForm.path_name.$error.maxlength translate=entity.validation.maxlength translate-value-max=200> This field cannot be longer than 200 characters. </p> </div> </div> <div class=form-group> <label translate=dgdtoolApp.path.description for=field_description>Description</label> <input class=form-control name=description id=field_description ng-model=path.description required ng-maxlength=\"2000\"/> <div ng-show=editForm.description.$invalid> <p class=help-block ng-show=editForm.description.$error.required translate=entity.validation.required> This field is required. </p> <p class=help-block ng-show=editForm.description.$error.maxlength translate=entity.validation.maxlength translate-value-max=2000> This field cannot be longer than 2000 characters. </p> </div> </div> <div class=form-group> <label translate=dgdtoolApp.path.status_id for=field_status_id>Status_id</label> <input type=number class=form-control name=status_id id=field_status_id ng-model=path.status_id required/> <div ng-show=editForm.status_id.$invalid> <p class=help-block ng-show=editForm.status_id.$error.required translate=entity.validation.required> This field is required. </p> <p class=help-block ng-show=editForm.status_id.$error.number translate=entity.validation.number> This field should be a number. </p> </div> </div> <div class=form-group> <label translate=dgdtoolApp.path.created_by for=field_created_by>Created_by</label> <input class=form-control name=created_by id=field_created_by ng-model=path.created_by required ng-maxlength=\"200\"/> <div ng-show=editForm.created_by.$invalid> <p class=help-block ng-show=editForm.created_by.$error.required translate=entity.validation.required> This field is required. </p> <p class=help-block ng-show=editForm.created_by.$error.maxlength translate=entity.validation.maxlength translate-value-max=200> This field cannot be longer than 200 characters. </p> </div> </div> <div class=form-group> <label translate=dgdtoolApp.path.created_date for=field_created_date>Created_date</label> <input type=date class=form-control name=created_date id=field_created_date ng-model=path.created_date required/> <div ng-show=editForm.created_date.$invalid> <p class=help-block ng-show=editForm.created_date.$error.required translate=entity.validation.required> This field is required. </p> </div> </div> <div class=form-group> <label translate=dgdtoolApp.path.modified_by for=field_modified_by>Modified_by</label> <input class=form-control name=modified_by id=field_modified_by ng-model=path.modified_by required ng-maxlength=\"200\"/> <div ng-show=editForm.modified_by.$invalid> <p class=help-block ng-show=editForm.modified_by.$error.required translate=entity.validation.required> This field is required. </p> <p class=help-block ng-show=editForm.modified_by.$error.maxlength translate=entity.validation.maxlength translate-value-max=200> This field cannot be longer than 200 characters. </p> </div> </div> <div class=form-group> <label translate=dgdtoolApp.path.modified_date for=field_modified_date>Modified_date</label> <input type=date class=form-control name=modified_date id=field_modified_date ng-model=path.modified_date required/> <div ng-show=editForm.modified_date.$invalid> <p class=help-block ng-show=editForm.modified_date.$error.required translate=entity.validation.required> This field is required. </p> </div> </div> </div> <div class=modal-footer> <button type=button class=\"btn btn-default\" data-dismiss=modal ng-click=clear()> <span class=\"glyphicon glyphicon-ban-circle\"></span>&nbsp;<span translate=entity.action.cancel>Cancel</span> </button> <button type=submit ng-disabled=\"editForm.$invalid || editForm.$submitted\" class=\"btn btn-primary\"> <span class=\"glyphicon glyphicon-save\"></span>&nbsp;<span translate=entity.action.save>Save</span> </button> </div> </form>"
  );


  $templateCache.put('scripts/app/entities/path/paths.html',
    "<div> <h2 translate=dgdtoolApp.path.home.title>Paths</h2> <jh-alert></jh-alert> <div class=container> <div class=row> <div class=col-md-4> <button class=\"btn btn-primary\" ui-sref=path.new> <span class=\"glyphicon glyphicon-flash\"></span> <span translate=dgdtoolApp.path.home.createLabel>Create a new Path</span> </button> </div> <div class=col-md-8> <form name=searchForm class=form-inline> <div class=form-group> <input class=form-control ng-model=searchQuery id=searchQuery placeholder=query> </div> <button class=\"btn btn-info\" ng-click=search()><span class=\"glyphicon glyphicon-search\"></span> <span>Search a Path</span> </button> </form> </div> </div> </div> <div class=\"modal fade\" id=deletePathConfirmation> <div class=modal-dialog> <div class=modal-content> <form name=deleteForm ng-submit=confirmDelete(path.id)> <div class=modal-header> <button type=button class=close data-dismiss=modal aria-hidden=true ng-click=clear()>&times;</button> <h4 class=modal-title translate=entity.delete.title>Confirm delete operation</h4> </div> <div class=modal-body> <p translate=dgdtoolApp.path.delete.question translate-values=\"{id: '{{path.id}}'}\">Are you sure you want to delete this Path?</p> </div> <div class=modal-footer> <button type=button class=\"btn btn-default\" data-dismiss=modal ng-click=clear()> <span class=\"glyphicon glyphicon-ban-circle\"></span>&nbsp;<span translate=entity.action.cancel>Cancel</span> </button> <button type=submit ng-disabled=deleteForm.$invalid class=\"btn btn-danger\"> <span class=\"glyphicon glyphicon-remove-circle\"></span>&nbsp;<span translate=entity.action.delete>Delete</span> </button> </div> </form> </div> </div> </div> <div class=table-responsive> <table class=\"table table-striped\"> <thead> <tr> <th translate=global.field.id>ID</th> <th translate=dgdtoolApp.path.path_name>Path_name</th> <th translate=dgdtoolApp.path.description>Description</th> <th translate=dgdtoolApp.path.status_id>Status_id</th> <th translate=dgdtoolApp.path.created_by>Created_by</th> <th translate=dgdtoolApp.path.created_date>Created_date</th> <th translate=dgdtoolApp.path.modified_by>Modified_by</th> <th translate=dgdtoolApp.path.modified_date>Modified_date</th> <th></th> </tr> </thead> <tbody> <tr ng-repeat=\"path in paths track by path.id\"> <td><a ui-sref=path.detail({id:path.id})>{{path.id}}</a></td> <td>{{path.path_name}}</td> <td>{{path.description}}</td> <td>{{path.status_id}}</td> <td>{{path.created_by}}</td> <td>{{path.created_date | date:'mediumDate'}}</td> <td>{{path.modified_by}}</td> <td>{{path.modified_date | date:'mediumDate'}}</td> <td> <button type=submit ui-sref=path.detail({id:path.id}) class=\"btn btn-info btn-sm\"> <span class=\"glyphicon glyphicon-eye-open\"></span>&nbsp;<span translate=entity.action.view> View</span> </button> <button type=submit ui-sref=path.edit({id:path.id}) class=\"btn btn-primary btn-sm\"> <span class=\"glyphicon glyphicon-pencil\"></span>&nbsp;<span translate=entity.action.edit> Edit</span> </button> <button type=submit ng-click=delete(path.id) class=\"btn btn-danger btn-sm\"> <span class=\"glyphicon glyphicon-remove-circle\"></span>&nbsp;<span translate=entity.action.delete> Delete</span> </button> </td> </tr> </tbody> </table> <nav> <ul class=pager> <li ng-show=\"links['first'] >= 0\" ng-click=\"loadPage(links['first'])\"><a href=#>&lt;&lt;</a></li> <li ng-show=\"page > 0\" ng-click=\"loadPage(links['prev'] || 0)\"><a href=#>&lt;</a></li> <li ng-show=\"links['next']\" ng-click=\"loadPage(links['next'])\"><a href=#>&gt;</a></li> <li ng-show=\"links['last'] > 0\" ng-click=\"loadPage(links['last'])\"><a href=#>&gt;&gt;</a></li> </ul> </nav> </div> </div>"
  );


  $templateCache.put('scripts/app/entities/platform/platform-detail.html',
    "<div> <h2><span translate=dgdtoolApp.platform.detail.title>Platform</span> {{platform.id}}</h2> <div class=table-responsive> <table class=\"table table-striped\"> <thead> <tr> <th translate=entity.detail.field>Field</th> <th translate=entity.detail.value>Value</th> </tr> </thead> <tbody> <tr> <td> <span translate=dgdtoolApp.platform.platform_name>Platform_name</span> </td> <td> <span class=form-control-static>{{platform.platform_name}}</span> </td> </tr> <tr> <td> <span translate=dgdtoolApp.platform.description>Description</span> </td> <td> <span class=form-control-static>{{platform.description}}</span> </td> </tr> <tr> <td> <span translate=dgdtoolApp.platform.status_id>Status_id</span> </td> <td> <span class=form-control-static>{{platform.status_id}}</span> </td> </tr> <tr> <td> <span translate=dgdtoolApp.platform.created_by>Created_by</span> </td> <td> <span class=form-control-static>{{platform.created_by}}</span> </td> </tr> <tr> <td> <span translate=dgdtoolApp.platform.created_date>Created_date</span> </td> <td> <span class=form-control-static>{{platform.created_date | date:'mediumDate'}}</span> </td> </tr> <tr> <td> <span translate=dgdtoolApp.platform.modified_by>Modified_by</span> </td> <td> <span class=form-control-static>{{platform.modified_by}}</span> </td> </tr> <tr> <td> <span translate=dgdtoolApp.platform.modified_date>Modified_date</span> </td> <td> <span class=form-control-static>{{platform.modified_date | date:'mediumDate'}}</span> </td> </tr> </tbody> </table> </div> <button type=submit onclick=window.history.back() class=\"btn btn-info\"> <span class=\"glyphicon glyphicon-arrow-left\"></span>&nbsp;<span translate=entity.action.back> Back</span> </button> </div>"
  );


  $templateCache.put('scripts/app/entities/platform/platform-dialog.html',
    "<form name=editForm role=form novalidate ng-submit=save() show-validation> <div class=modal-header> <button type=button class=close data-dismiss=modal aria-hidden=true ng-click=clear()>&times;</button> <h4 class=modal-title id=myPlatformLabel translate=dgdtoolApp.platform.home.createOrEditLabel>Create or edit a Platform</h4> </div> <div class=modal-body> <jh-alert-error></jh-alert-error> <div class=form-group> <label for=id translate=global.field.id>ID</label> <input class=form-control id=id name=id ng-model=platform.id readonly/> </div> <div class=form-group> <label translate=dgdtoolApp.platform.platform_name for=field_platform_name>Platform_name</label> <input class=form-control name=platform_name id=field_platform_name ng-model=platform.platform_name required ng-maxlength=\"200\"/> <div ng-show=editForm.platform_name.$invalid> <p class=help-block ng-show=editForm.platform_name.$error.required translate=entity.validation.required> This field is required. </p> <p class=help-block ng-show=editForm.platform_name.$error.maxlength translate=entity.validation.maxlength translate-value-max=200> This field cannot be longer than 200 characters. </p> </div> </div> <div class=form-group> <label translate=dgdtoolApp.platform.description for=field_description>Description</label> <input class=form-control name=description id=field_description ng-model=platform.description required ng-maxlength=\"2000\"/> <div ng-show=editForm.description.$invalid> <p class=help-block ng-show=editForm.description.$error.required translate=entity.validation.required> This field is required. </p> <p class=help-block ng-show=editForm.description.$error.maxlength translate=entity.validation.maxlength translate-value-max=2000> This field cannot be longer than 2000 characters. </p> </div> </div> <div class=form-group> <label translate=dgdtoolApp.platform.status_id for=field_status_id>Status_id</label> <input type=number class=form-control name=status_id id=field_status_id ng-model=platform.status_id required/> <div ng-show=editForm.status_id.$invalid> <p class=help-block ng-show=editForm.status_id.$error.required translate=entity.validation.required> This field is required. </p> <p class=help-block ng-show=editForm.status_id.$error.number translate=entity.validation.number> This field should be a number. </p> </div> </div> <div class=form-group> <label translate=dgdtoolApp.platform.created_by for=field_created_by>Created_by</label> <input class=form-control name=created_by id=field_created_by ng-model=platform.created_by required ng-maxlength=\"200\"/> <div ng-show=editForm.created_by.$invalid> <p class=help-block ng-show=editForm.created_by.$error.required translate=entity.validation.required> This field is required. </p> <p class=help-block ng-show=editForm.created_by.$error.maxlength translate=entity.validation.maxlength translate-value-max=200> This field cannot be longer than 200 characters. </p> </div> </div> <div class=form-group> <label translate=dgdtoolApp.platform.created_date for=field_created_date>Created_date</label> <input type=date class=form-control name=created_date id=field_created_date ng-model=platform.created_date required/> <div ng-show=editForm.created_date.$invalid> <p class=help-block ng-show=editForm.created_date.$error.required translate=entity.validation.required> This field is required. </p> </div> </div> <div class=form-group> <label translate=dgdtoolApp.platform.modified_by for=field_modified_by>Modified_by</label> <input class=form-control name=modified_by id=field_modified_by ng-model=platform.modified_by required ng-maxlength=\"200\"/> <div ng-show=editForm.modified_by.$invalid> <p class=help-block ng-show=editForm.modified_by.$error.required translate=entity.validation.required> This field is required. </p> <p class=help-block ng-show=editForm.modified_by.$error.maxlength translate=entity.validation.maxlength translate-value-max=200> This field cannot be longer than 200 characters. </p> </div> </div> <div class=form-group> <label translate=dgdtoolApp.platform.modified_date for=field_modified_date>Modified_date</label> <input type=date class=form-control name=modified_date id=field_modified_date ng-model=platform.modified_date required/> <div ng-show=editForm.modified_date.$invalid> <p class=help-block ng-show=editForm.modified_date.$error.required translate=entity.validation.required> This field is required. </p> </div> </div> </div> <div class=modal-footer> <button type=button class=\"btn btn-default\" data-dismiss=modal ng-click=clear()> <span class=\"glyphicon glyphicon-ban-circle\"></span>&nbsp;<span translate=entity.action.cancel>Cancel</span> </button> <button type=submit ng-disabled=\"editForm.$invalid || editForm.$submitted\" class=\"btn btn-primary\"> <span class=\"glyphicon glyphicon-save\"></span>&nbsp;<span translate=entity.action.save>Save</span> </button> </div> </form>"
  );


  $templateCache.put('scripts/app/entities/platform/platforms.html',
    "<div> <h2 translate=dgdtoolApp.platform.home.title>Platforms</h2> <jh-alert></jh-alert> <div class=container> <div class=row> <div class=col-md-4> <button class=\"btn btn-primary\" ui-sref=platform.new> <span class=\"glyphicon glyphicon-flash\"></span> <span translate=dgdtoolApp.platform.home.createLabel>Create a new Platform</span> </button> </div> <div class=col-md-8> <form name=searchForm class=form-inline> <div class=form-group> <input class=form-control ng-model=searchQuery id=searchQuery placeholder=query> </div> <button class=\"btn btn-info\" ng-click=search()><span class=\"glyphicon glyphicon-search\"></span> <span>Search a Platform</span> </button> </form> </div> </div> </div> <div class=\"modal fade\" id=deletePlatformConfirmation> <div class=modal-dialog> <div class=modal-content> <form name=deleteForm ng-submit=confirmDelete(platform.id)> <div class=modal-header> <button type=button class=close data-dismiss=modal aria-hidden=true ng-click=clear()>&times;</button> <h4 class=modal-title translate=entity.delete.title>Confirm delete operation</h4> </div> <div class=modal-body> <p translate=dgdtoolApp.platform.delete.question translate-values=\"{id: '{{platform.id}}'}\">Are you sure you want to delete this Platform?</p> </div> <div class=modal-footer> <button type=button class=\"btn btn-default\" data-dismiss=modal ng-click=clear()> <span class=\"glyphicon glyphicon-ban-circle\"></span>&nbsp;<span translate=entity.action.cancel>Cancel</span> </button> <button type=submit ng-disabled=deleteForm.$invalid class=\"btn btn-danger\"> <span class=\"glyphicon glyphicon-remove-circle\"></span>&nbsp;<span translate=entity.action.delete>Delete</span> </button> </div> </form> </div> </div> </div> <div class=table-responsive> <table class=\"table table-striped\"> <thead> <tr> <th translate=global.field.id>ID</th> <th translate=dgdtoolApp.platform.platform_name>Platform_name</th> <th translate=dgdtoolApp.platform.description>Description</th> <th translate=dgdtoolApp.platform.status_id>Status_id</th> <th translate=dgdtoolApp.platform.created_by>Created_by</th> <th translate=dgdtoolApp.platform.created_date>Created_date</th> <th translate=dgdtoolApp.platform.modified_by>Modified_by</th> <th translate=dgdtoolApp.platform.modified_date>Modified_date</th> <th></th> </tr> </thead> <tbody> <tr ng-repeat=\"platform in platforms track by platform.id\"> <td><a ui-sref=platform.detail({id:platform.id})>{{platform.id}}</a></td> <td>{{platform.platform_name}}</td> <td>{{platform.description}}</td> <td>{{platform.status_id}}</td> <td>{{platform.created_by}}</td> <td>{{platform.created_date | date:'mediumDate'}}</td> <td>{{platform.modified_by}}</td> <td>{{platform.modified_date | date:'mediumDate'}}</td> <td> <button type=submit ui-sref=platform.detail({id:platform.id}) class=\"btn btn-info btn-sm\"> <span class=\"glyphicon glyphicon-eye-open\"></span>&nbsp;<span translate=entity.action.view> View</span> </button> <button type=submit ui-sref=platform.edit({id:platform.id}) class=\"btn btn-primary btn-sm\"> <span class=\"glyphicon glyphicon-pencil\"></span>&nbsp;<span translate=entity.action.edit> Edit</span> </button> <button type=submit ng-click=delete(platform.id) class=\"btn btn-danger btn-sm\"> <span class=\"glyphicon glyphicon-remove-circle\"></span>&nbsp;<span translate=entity.action.delete> Delete</span> </button> </td> </tr> </tbody> </table> <nav> <ul class=pager> <li ng-show=\"links['first'] >= 0\" ng-click=\"loadPage(links['first'])\"><a href=#>&lt;&lt;</a></li> <li ng-show=\"page > 0\" ng-click=\"loadPage(links['prev'] || 0)\"><a href=#>&lt;</a></li> <li ng-show=\"links['next']\" ng-click=\"loadPage(links['next'])\"><a href=#>&gt;</a></li> <li ng-show=\"links['last'] > 0\" ng-click=\"loadPage(links['last'])\"><a href=#>&gt;&gt;</a></li> </ul> </nav> </div> </div>"
  );


  $templateCache.put('scripts/app/entities/project/project-detail.html',
    "<div> <h2><span translate=dgdtoolApp.project.detail.title>Project</span> {{project.id}}</h2> <div class=table-responsive> <table class=\"table table-striped\"> <thead> <tr> <th translate=entity.detail.field>Field</th> <th translate=entity.detail.value>Value</th> </tr> </thead> <tbody> <tr> <td> <span translate=dgdtoolApp.project.requestor_id>Requestor_id</span> </td> <td> <span class=form-control-static>{{project.requestor_id}}</span> </td> </tr> <tr> <td> <span translate=dgdtoolApp.project.associated_project_id>Associated_project_id</span> </td> <td> <span class=form-control-static>{{project.associated_project_id}}</span> </td> </tr> <tr> <td> <span translate=dgdtoolApp.project.initiative_id>Initiative_id</span> </td> <td> <span class=form-control-static>{{project.initiative_id}}</span> </td> </tr> <tr> <td> <span translate=dgdtoolApp.project.ticket_id>Ticket_id</span> </td> <td> <span class=form-control-static>{{project.ticket_id}}</span> </td> </tr> <tr> <td> <span translate=dgdtoolApp.project.service_id>Service_id</span> </td> <td> <span class=form-control-static>{{project.service_id}}</span> </td> </tr> <tr> <td> <span translate=dgdtoolApp.project.app_id>App_id</span> </td> <td> <span class=form-control-static>{{project.app_id}}</span> </td> </tr> <tr> <td> <span translate=dgdtoolApp.project.package_id>Package_id</span> </td> <td> <span class=form-control-static>{{project.package_id}}</span> </td> </tr> <tr> <td> <span translate=dgdtoolApp.project.legacy_owner>Legacy_owner</span> </td> <td> <span class=form-control-static>{{project.legacy_owner}}</span> </td> </tr> <tr> <td> <span translate=dgdtoolApp.project.business_unit>Business_unit</span> </td> <td> <span class=form-control-static>{{project.business_unit}}</span> </td> </tr> <tr> <td> <span translate=dgdtoolApp.project.planned_start_date>Planned_start_date</span> </td> <td> <span class=form-control-static>{{project.planned_start_date | date:'medium'}}</span> </td> </tr> <tr> <td> <span translate=dgdtoolApp.project.planned_end_date>Planned_end_date</span> </td> <td> <span class=form-control-static>{{project.planned_end_date | date:'medium'}}</span> </td> </tr> <tr> <td> <span translate=dgdtoolApp.project.description>Description</span> </td> <td> <span class=form-control-static>{{project.description}}</span> </td> </tr> <tr> <td> <span translate=dgdtoolApp.project.status_id>Status_id</span> </td> <td> <span class=form-control-static>{{project.status_id}}</span> </td> </tr> <tr> <td> <span translate=dgdtoolApp.project.created_by>Created_by</span> </td> <td> <span class=form-control-static>{{project.created_by}}</span> </td> </tr> <tr> <td> <span translate=dgdtoolApp.project.created_date>Created_date</span> </td> <td> <span class=form-control-static>{{project.created_date | date:'mediumDate'}}</span> </td> </tr> <tr> <td> <span translate=dgdtoolApp.project.modified_by>Modified_by</span> </td> <td> <span class=form-control-static>{{project.modified_by}}</span> </td> </tr> <tr> <td> <span translate=dgdtoolApp.project.modified_date>Modified_date</span> </td> <td> <span class=form-control-static>{{project.modified_date | date:'mediumDate'}}</span> </td> </tr> </tbody> </table> </div> <button type=submit onclick=window.history.back() class=\"btn btn-info\"> <span class=\"glyphicon glyphicon-arrow-left\"></span>&nbsp;<span translate=entity.action.back> Back</span> </button> </div>"
  );


  $templateCache.put('scripts/app/entities/project/project-dialog.html',
    "<form name=editForm role=form novalidate ng-submit=save() show-validation> <div class=modal-header> <button type=button class=close data-dismiss=modal aria-hidden=true ng-click=clear()>&times;</button> <h4 class=modal-title id=myProjectLabel translate=dgdtoolApp.project.home.createOrEditLabel>Create or edit a Project</h4> </div> <div class=modal-body> <jh-alert-error></jh-alert-error> <div class=form-group> <label for=id translate=global.field.id>ID</label> <input class=form-control id=id name=id ng-model=project.id readonly/> </div> <div class=form-group> <label translate=dgdtoolApp.project.requestor_id for=field_requestor_id>Requestor_id</label> <input type=number class=form-control name=requestor_id id=field_requestor_id ng-model=project.requestor_id required/> <div ng-show=editForm.requestor_id.$invalid> <p class=help-block ng-show=editForm.requestor_id.$error.required translate=entity.validation.required> This field is required. </p> <p class=help-block ng-show=editForm.requestor_id.$error.number translate=entity.validation.number> This field should be a number. </p> </div> </div> <div class=form-group> <label translate=dgdtoolApp.project.associated_project_id for=field_associated_project_id>Associated_project_id</label> <input type=number class=form-control name=associated_project_id id=field_associated_project_id ng-model=\"project.associated_project_id\"/> </div> <div class=form-group> <label translate=dgdtoolApp.project.initiative_id for=field_initiative_id>Initiative_id</label> <input type=number class=form-control name=initiative_id id=field_initiative_id ng-model=\"project.initiative_id\"/> </div> <div class=form-group> <label translate=dgdtoolApp.project.ticket_id for=field_ticket_id>Ticket_id</label> <input type=number class=form-control name=ticket_id id=field_ticket_id ng-model=\"project.ticket_id\"/> </div> <div class=form-group> <label translate=dgdtoolApp.project.service_id for=field_service_id>Service_id</label> <input type=number class=form-control name=service_id id=field_service_id ng-model=\"project.service_id\"/> </div> <div class=form-group> <label translate=dgdtoolApp.project.app_id for=field_app_id>App_id</label> <input type=number class=form-control name=app_id id=field_app_id ng-model=\"project.app_id\"/> </div> <div class=form-group> <label translate=dgdtoolApp.project.package_id for=field_package_id>Package_id</label> <input type=number class=form-control name=package_id id=field_package_id ng-model=\"project.package_id\"/> </div> <div class=form-group> <label translate=dgdtoolApp.project.legacy_owner for=field_legacy_owner>Legacy_owner</label> <input class=form-control name=legacy_owner id=field_legacy_owner ng-model=project.legacy_owner ng-maxlength=\"200\"/> <div ng-show=editForm.legacy_owner.$invalid> <p class=help-block ng-show=editForm.legacy_owner.$error.maxlength translate=entity.validation.maxlength translate-value-max=200> This field cannot be longer than 200 characters. </p> </div> </div> <div class=form-group> <label translate=dgdtoolApp.project.business_unit for=field_business_unit>Business_unit</label> <input class=form-control name=business_unit id=field_business_unit ng-model=project.business_unit ng-maxlength=\"200\"/> <div ng-show=editForm.business_unit.$invalid> <p class=help-block ng-show=editForm.business_unit.$error.maxlength translate=entity.validation.maxlength translate-value-max=200> This field cannot be longer than 200 characters. </p> </div> </div> <div class=form-group> <label translate=dgdtoolApp.project.planned_start_date for=field_planned_start_date>Planned_start_date</label> <input type=datetime-local class=form-control name=planned_start_date id=field_planned_start_date ng-model=\"project.planned_start_date\"/> </div> <div class=form-group> <label translate=dgdtoolApp.project.planned_end_date for=field_planned_end_date>Planned_end_date</label> <input type=datetime-local class=form-control name=planned_end_date id=field_planned_end_date ng-model=\"project.planned_end_date\"/> </div> <div class=form-group> <label translate=dgdtoolApp.project.description for=field_description>Description</label> <input class=form-control name=description id=field_description ng-model=project.description required ng-maxlength=\"2000\"/> <div ng-show=editForm.description.$invalid> <p class=help-block ng-show=editForm.description.$error.required translate=entity.validation.required> This field is required. </p> <p class=help-block ng-show=editForm.description.$error.maxlength translate=entity.validation.maxlength translate-value-max=2000> This field cannot be longer than 2000 characters. </p> </div> </div> <div class=form-group> <label translate=dgdtoolApp.project.status_id for=field_status_id>Status_id</label> <input type=number class=form-control name=status_id id=field_status_id ng-model=project.status_id required/> <div ng-show=editForm.status_id.$invalid> <p class=help-block ng-show=editForm.status_id.$error.required translate=entity.validation.required> This field is required. </p> <p class=help-block ng-show=editForm.status_id.$error.number translate=entity.validation.number> This field should be a number. </p> </div> </div> <div class=form-group> <label translate=dgdtoolApp.project.created_by for=field_created_by>Created_by</label> <input class=form-control name=created_by id=field_created_by ng-model=project.created_by required ng-maxlength=\"200\"/> <div ng-show=editForm.created_by.$invalid> <p class=help-block ng-show=editForm.created_by.$error.required translate=entity.validation.required> This field is required. </p> <p class=help-block ng-show=editForm.created_by.$error.maxlength translate=entity.validation.maxlength translate-value-max=200> This field cannot be longer than 200 characters. </p> </div> </div> <div class=form-group> <label translate=dgdtoolApp.project.created_date for=field_created_date>Created_date</label> <input type=date class=form-control name=created_date id=field_created_date ng-model=project.created_date required/> <div ng-show=editForm.created_date.$invalid> <p class=help-block ng-show=editForm.created_date.$error.required translate=entity.validation.required> This field is required. </p> </div> </div> <div class=form-group> <label translate=dgdtoolApp.project.modified_by for=field_modified_by>Modified_by</label> <input class=form-control name=modified_by id=field_modified_by ng-model=project.modified_by required ng-maxlength=\"200\"/> <div ng-show=editForm.modified_by.$invalid> <p class=help-block ng-show=editForm.modified_by.$error.required translate=entity.validation.required> This field is required. </p> <p class=help-block ng-show=editForm.modified_by.$error.maxlength translate=entity.validation.maxlength translate-value-max=200> This field cannot be longer than 200 characters. </p> </div> </div> <div class=form-group> <label translate=dgdtoolApp.project.modified_date for=field_modified_date>Modified_date</label> <input type=date class=form-control name=modified_date id=field_modified_date ng-model=project.modified_date required/> <div ng-show=editForm.modified_date.$invalid> <p class=help-block ng-show=editForm.modified_date.$error.required translate=entity.validation.required> This field is required. </p> </div> </div> </div> <div class=modal-footer> <button type=button class=\"btn btn-default\" data-dismiss=modal ng-click=clear()> <span class=\"glyphicon glyphicon-ban-circle\"></span>&nbsp;<span translate=entity.action.cancel>Cancel</span> </button> <button type=submit ng-disabled=\"editForm.$invalid || editForm.$submitted\" class=\"btn btn-primary\"> <span class=\"glyphicon glyphicon-save\"></span>&nbsp;<span translate=entity.action.save>Save</span> </button> </div> </form>"
  );


  $templateCache.put('scripts/app/entities/project/projects.html',
    "<div> <h2 translate=dgdtoolApp.project.home.title>Projects</h2> <jh-alert></jh-alert> <div class=container> <div class=row> <div class=col-md-4> <button class=\"btn btn-primary\" ui-sref=project.new> <span class=\"glyphicon glyphicon-flash\"></span> <span translate=dgdtoolApp.project.home.createLabel>Create a new Project</span> </button> </div> <div class=col-md-8> <form name=searchForm class=form-inline> <div class=form-group> <input class=form-control ng-model=searchQuery id=searchQuery placeholder=query> </div> <button class=\"btn btn-info\" ng-click=search()><span class=\"glyphicon glyphicon-search\"></span> <span>Search a Project</span> </button> </form> </div> </div> </div> <div class=\"modal fade\" id=deleteProjectConfirmation> <div class=modal-dialog> <div class=modal-content> <form name=deleteForm ng-submit=confirmDelete(project.id)> <div class=modal-header> <button type=button class=close data-dismiss=modal aria-hidden=true ng-click=clear()>&times;</button> <h4 class=modal-title translate=entity.delete.title>Confirm delete operation</h4> </div> <div class=modal-body> <p translate=dgdtoolApp.project.delete.question translate-values=\"{id: '{{project.id}}'}\">Are you sure you want to delete this Project?</p> </div> <div class=modal-footer> <button type=button class=\"btn btn-default\" data-dismiss=modal ng-click=clear()> <span class=\"glyphicon glyphicon-ban-circle\"></span>&nbsp;<span translate=entity.action.cancel>Cancel</span> </button> <button type=submit ng-disabled=deleteForm.$invalid class=\"btn btn-danger\"> <span class=\"glyphicon glyphicon-remove-circle\"></span>&nbsp;<span translate=entity.action.delete>Delete</span> </button> </div> </form> </div> </div> </div> <div class=table-responsive> <table class=\"table table-striped\"> <thead> <tr> <th translate=global.field.id>ID</th> <th translate=dgdtoolApp.project.requestor_id>Requestor_id</th> <th translate=dgdtoolApp.project.associated_project_id>Associated_project_id</th> <th translate=dgdtoolApp.project.initiative_id>Initiative_id</th> <th translate=dgdtoolApp.project.ticket_id>Ticket_id</th> <th translate=dgdtoolApp.project.service_id>Service_id</th> <th translate=dgdtoolApp.project.app_id>App_id</th> <th translate=dgdtoolApp.project.package_id>Package_id</th> <th translate=dgdtoolApp.project.legacy_owner>Legacy_owner</th> <th translate=dgdtoolApp.project.business_unit>Business_unit</th> <th translate=dgdtoolApp.project.planned_start_date>Planned_start_date</th> <th translate=dgdtoolApp.project.planned_end_date>Planned_end_date</th> <th translate=dgdtoolApp.project.description>Description</th> <th translate=dgdtoolApp.project.status_id>Status_id</th> <th translate=dgdtoolApp.project.created_by>Created_by</th> <th translate=dgdtoolApp.project.created_date>Created_date</th> <th translate=dgdtoolApp.project.modified_by>Modified_by</th> <th translate=dgdtoolApp.project.modified_date>Modified_date</th> <th></th> </tr> </thead> <tbody> <tr ng-repeat=\"project in projects track by project.id\"> <td><a ui-sref=project.detail({id:project.id})>{{project.id}}</a></td> <td>{{project.requestor_id}}</td> <td>{{project.associated_project_id}}</td> <td>{{project.initiative_id}}</td> <td>{{project.ticket_id}}</td> <td>{{project.service_id}}</td> <td>{{project.app_id}}</td> <td>{{project.package_id}}</td> <td>{{project.legacy_owner}}</td> <td>{{project.business_unit}}</td> <td>{{project.planned_start_date | date:'medium'}}</td> <td>{{project.planned_end_date | date:'medium'}}</td> <td>{{project.description}}</td> <td>{{project.status_id}}</td> <td>{{project.created_by}}</td> <td>{{project.created_date | date:'mediumDate'}}</td> <td>{{project.modified_by}}</td> <td>{{project.modified_date | date:'mediumDate'}}</td> <td> <button type=submit ui-sref=project.detail({id:project.id}) class=\"btn btn-info btn-sm\"> <span class=\"glyphicon glyphicon-eye-open\"></span>&nbsp;<span translate=entity.action.view> View</span> </button> <button type=submit ui-sref=project.edit({id:project.id}) class=\"btn btn-primary btn-sm\"> <span class=\"glyphicon glyphicon-pencil\"></span>&nbsp;<span translate=entity.action.edit> Edit</span> </button> <button type=submit ng-click=delete(project.id) class=\"btn btn-danger btn-sm\"> <span class=\"glyphicon glyphicon-remove-circle\"></span>&nbsp;<span translate=entity.action.delete> Delete</span> </button> </td> </tr> </tbody> </table> <nav> <ul class=pager> <li ng-show=\"links['first'] >= 0\" ng-click=\"loadPage(links['first'])\"><a href=#>&lt;&lt;</a></li> <li ng-show=\"page > 0\" ng-click=\"loadPage(links['prev'] || 0)\"><a href=#>&lt;</a></li> <li ng-show=\"links['next']\" ng-click=\"loadPage(links['next'])\"><a href=#>&gt;</a></li> <li ng-show=\"links['last'] > 0\" ng-click=\"loadPage(links['last'])\"><a href=#>&gt;&gt;</a></li> </ul> </nav> </div> </div>"
  );


  $templateCache.put('scripts/app/entities/project_phase/project_phase-detail.html',
    "<div> <h2><span translate=dgdtoolApp.project_phase.detail.title>Project_phase</span> {{project_phase.id}}</h2> <div class=table-responsive> <table class=\"table table-striped\"> <thead> <tr> <th translate=entity.detail.field>Field</th> <th translate=entity.detail.value>Value</th> </tr> </thead> <tbody> <tr> <td> <span translate=dgdtoolApp.project_phase.project_phase_name>Project_phase_name</span> </td> <td> <span class=form-control-static>{{project_phase.project_phase_name}}</span> </td> </tr> <tr> <td> <span translate=dgdtoolApp.project_phase.description>Description</span> </td> <td> <span class=form-control-static>{{project_phase.description}}</span> </td> </tr> <tr> <td> <span translate=dgdtoolApp.project_phase.status_id>Status_id</span> </td> <td> <span class=form-control-static>{{project_phase.status_id}}</span> </td> </tr> <tr> <td> <span translate=dgdtoolApp.project_phase.created_by>Created_by</span> </td> <td> <span class=form-control-static>{{project_phase.created_by}}</span> </td> </tr> <tr> <td> <span translate=dgdtoolApp.project_phase.modified_by>Modified_by</span> </td> <td> <span class=form-control-static>{{project_phase.modified_by}}</span> </td> </tr> <tr> <td> <span translate=dgdtoolApp.project_phase.modified_date>Modified_date</span> </td> <td> <span class=form-control-static>{{project_phase.modified_date | date:'mediumDate'}}</span> </td> </tr> </tbody> </table> </div> <button type=submit onclick=window.history.back() class=\"btn btn-info\"> <span class=\"glyphicon glyphicon-arrow-left\"></span>&nbsp;<span translate=entity.action.back> Back</span> </button> </div>"
  );


  $templateCache.put('scripts/app/entities/project_phase/project_phase-dialog.html',
    "<form name=editForm role=form novalidate ng-submit=save() show-validation> <div class=modal-header> <button type=button class=close data-dismiss=modal aria-hidden=true ng-click=clear()>&times;</button> <h4 class=modal-title id=myProject_phaseLabel translate=dgdtoolApp.project_phase.home.createOrEditLabel>Create or edit a Project_phase</h4> </div> <div class=modal-body> <jh-alert-error></jh-alert-error> <div class=form-group> <label for=id translate=global.field.id>ID</label> <input class=form-control id=id name=id ng-model=project_phase.id readonly/> </div> <div class=form-group> <label translate=dgdtoolApp.project_phase.project_phase_name for=field_project_phase_name>Project_phase_name</label> <input class=form-control name=project_phase_name id=field_project_phase_name ng-model=project_phase.project_phase_name required ng-maxlength=\"200\"/> <div ng-show=editForm.project_phase_name.$invalid> <p class=help-block ng-show=editForm.project_phase_name.$error.required translate=entity.validation.required> This field is required. </p> <p class=help-block ng-show=editForm.project_phase_name.$error.maxlength translate=entity.validation.maxlength translate-value-max=200> This field cannot be longer than 200 characters. </p> </div> </div> <div class=form-group> <label translate=dgdtoolApp.project_phase.description for=field_description>Description</label> <input class=form-control name=description id=field_description ng-model=project_phase.description required ng-maxlength=\"2000\"/> <div ng-show=editForm.description.$invalid> <p class=help-block ng-show=editForm.description.$error.required translate=entity.validation.required> This field is required. </p> <p class=help-block ng-show=editForm.description.$error.maxlength translate=entity.validation.maxlength translate-value-max=2000> This field cannot be longer than 2000 characters. </p> </div> </div> <div class=form-group> <label translate=dgdtoolApp.project_phase.status_id for=field_status_id>Status_id</label> <input type=number class=form-control name=status_id id=field_status_id ng-model=project_phase.status_id required/> <div ng-show=editForm.status_id.$invalid> <p class=help-block ng-show=editForm.status_id.$error.required translate=entity.validation.required> This field is required. </p> <p class=help-block ng-show=editForm.status_id.$error.number translate=entity.validation.number> This field should be a number. </p> </div> </div> <div class=form-group> <label translate=dgdtoolApp.project_phase.created_by for=field_created_by>Created_by</label> <input class=form-control name=created_by id=field_created_by ng-model=project_phase.created_by required ng-maxlength=\"200\"/> <div ng-show=editForm.created_by.$invalid> <p class=help-block ng-show=editForm.created_by.$error.required translate=entity.validation.required> This field is required. </p> <p class=help-block ng-show=editForm.created_by.$error.maxlength translate=entity.validation.maxlength translate-value-max=200> This field cannot be longer than 200 characters. </p> </div> </div> <div class=form-group> <label translate=dgdtoolApp.project_phase.modified_by for=field_modified_by>Modified_by</label> <input class=form-control name=modified_by id=field_modified_by ng-model=project_phase.modified_by required ng-maxlength=\"200\"/> <div ng-show=editForm.modified_by.$invalid> <p class=help-block ng-show=editForm.modified_by.$error.required translate=entity.validation.required> This field is required. </p> <p class=help-block ng-show=editForm.modified_by.$error.maxlength translate=entity.validation.maxlength translate-value-max=200> This field cannot be longer than 200 characters. </p> </div> </div> <div class=form-group> <label translate=dgdtoolApp.project_phase.modified_date for=field_modified_date>Modified_date</label> <input type=date class=form-control name=modified_date id=field_modified_date ng-model=project_phase.modified_date required/> <div ng-show=editForm.modified_date.$invalid> <p class=help-block ng-show=editForm.modified_date.$error.required translate=entity.validation.required> This field is required. </p> </div> </div> </div> <div class=modal-footer> <button type=button class=\"btn btn-default\" data-dismiss=modal ng-click=clear()> <span class=\"glyphicon glyphicon-ban-circle\"></span>&nbsp;<span translate=entity.action.cancel>Cancel</span> </button> <button type=submit ng-disabled=\"editForm.$invalid || editForm.$submitted\" class=\"btn btn-primary\"> <span class=\"glyphicon glyphicon-save\"></span>&nbsp;<span translate=entity.action.save>Save</span> </button> </div> </form>"
  );


  $templateCache.put('scripts/app/entities/project_phase/project_phases.html',
    "<div> <h2 translate=dgdtoolApp.project_phase.home.title>Project_phases</h2> <jh-alert></jh-alert> <div class=container> <div class=row> <div class=col-md-4> <button class=\"btn btn-primary\" ui-sref=project_phase.new> <span class=\"glyphicon glyphicon-flash\"></span> <span translate=dgdtoolApp.project_phase.home.createLabel>Create a new Project_phase</span> </button> </div> <div class=col-md-8> <form name=searchForm class=form-inline> <div class=form-group> <input class=form-control ng-model=searchQuery id=searchQuery placeholder=query> </div> <button class=\"btn btn-info\" ng-click=search()><span class=\"glyphicon glyphicon-search\"></span> <span>Search a Project_phase</span> </button> </form> </div> </div> </div> <div class=\"modal fade\" id=deleteProject_phaseConfirmation> <div class=modal-dialog> <div class=modal-content> <form name=deleteForm ng-submit=confirmDelete(project_phase.id)> <div class=modal-header> <button type=button class=close data-dismiss=modal aria-hidden=true ng-click=clear()>&times;</button> <h4 class=modal-title translate=entity.delete.title>Confirm delete operation</h4> </div> <div class=modal-body> <p translate=dgdtoolApp.project_phase.delete.question translate-values=\"{id: '{{project_phase.id}}'}\">Are you sure you want to delete this Project_phase?</p> </div> <div class=modal-footer> <button type=button class=\"btn btn-default\" data-dismiss=modal ng-click=clear()> <span class=\"glyphicon glyphicon-ban-circle\"></span>&nbsp;<span translate=entity.action.cancel>Cancel</span> </button> <button type=submit ng-disabled=deleteForm.$invalid class=\"btn btn-danger\"> <span class=\"glyphicon glyphicon-remove-circle\"></span>&nbsp;<span translate=entity.action.delete>Delete</span> </button> </div> </form> </div> </div> </div> <div class=table-responsive> <table class=\"table table-striped\"> <thead> <tr> <th translate=global.field.id>ID</th> <th translate=dgdtoolApp.project_phase.project_phase_name>Project_phase_name</th> <th translate=dgdtoolApp.project_phase.description>Description</th> <th translate=dgdtoolApp.project_phase.status_id>Status_id</th> <th translate=dgdtoolApp.project_phase.created_by>Created_by</th> <th translate=dgdtoolApp.project_phase.modified_by>Modified_by</th> <th translate=dgdtoolApp.project_phase.modified_date>Modified_date</th> <th></th> </tr> </thead> <tbody> <tr ng-repeat=\"project_phase in project_phases track by project_phase.id\"> <td><a ui-sref=project_phase.detail({id:project_phase.id})>{{project_phase.id}}</a></td> <td>{{project_phase.project_phase_name}}</td> <td>{{project_phase.description}}</td> <td>{{project_phase.status_id}}</td> <td>{{project_phase.created_by}}</td> <td>{{project_phase.modified_by}}</td> <td>{{project_phase.modified_date | date:'mediumDate'}}</td> <td> <button type=submit ui-sref=project_phase.detail({id:project_phase.id}) class=\"btn btn-info btn-sm\"> <span class=\"glyphicon glyphicon-eye-open\"></span>&nbsp;<span translate=entity.action.view> View</span> </button> <button type=submit ui-sref=project_phase.edit({id:project_phase.id}) class=\"btn btn-primary btn-sm\"> <span class=\"glyphicon glyphicon-pencil\"></span>&nbsp;<span translate=entity.action.edit> Edit</span> </button> <button type=submit ng-click=delete(project_phase.id) class=\"btn btn-danger btn-sm\"> <span class=\"glyphicon glyphicon-remove-circle\"></span>&nbsp;<span translate=entity.action.delete> Delete</span> </button> </td> </tr> </tbody> </table> <nav> <ul class=pager> <li ng-show=\"links['first'] >= 0\" ng-click=\"loadPage(links['first'])\"><a href=#>&lt;&lt;</a></li> <li ng-show=\"page > 0\" ng-click=\"loadPage(links['prev'] || 0)\"><a href=#>&lt;</a></li> <li ng-show=\"links['next']\" ng-click=\"loadPage(links['next'])\"><a href=#>&gt;</a></li> <li ng-show=\"links['last'] > 0\" ng-click=\"loadPage(links['last'])\"><a href=#>&gt;&gt;</a></li> </ul> </nav> </div> </div>"
  );


  $templateCache.put('scripts/app/entities/project_team/project_team-detail.html',
    "<div> <h2><span translate=dgdtoolApp.project_team.detail.title>Project_team</span> {{project_team.id}}</h2> <div class=table-responsive> <table class=\"table table-striped\"> <thead> <tr> <th translate=entity.detail.field>Field</th> <th translate=entity.detail.value>Value</th> </tr> </thead> <tbody> <tr> <td> <span translate=dgdtoolApp.project_team.project_id>Project_id</span> </td> <td> <span class=form-control-static>{{project_team.project_id}}</span> </td> </tr> <tr> <td> <span translate=dgdtoolApp.project_team.resource_id>Resource_id</span> </td> <td> <span class=form-control-static>{{project_team.resource_id}}</span> </td> </tr> <tr> <td> <span translate=dgdtoolApp.project_team.role_id>Role_id</span> </td> <td> <span class=form-control-static>{{project_team.role_id}}</span> </td> </tr> <tr> <td> <span translate=dgdtoolApp.project_team.support_level>Support_level</span> </td> <td> <span class=form-control-static>{{project_team.support_level}}</span> </td> </tr> <tr> <td> <span translate=dgdtoolApp.project_team.est_hours>Est_hours</span> </td> <td> <span class=form-control-static>{{project_team.est_hours}}</span> </td> </tr> <tr> <td> <span translate=dgdtoolApp.project_team.assigned_date>Assigned_date</span> </td> <td> <span class=form-control-static>{{project_team.assigned_date | date:'medium'}}</span> </td> </tr> <tr> <td> <span translate=dgdtoolApp.project_team.description>Description</span> </td> <td> <span class=form-control-static>{{project_team.description}}</span> </td> </tr> <tr> <td> <span translate=dgdtoolApp.project_team.status_id>Status_id</span> </td> <td> <span class=form-control-static>{{project_team.status_id}}</span> </td> </tr> <tr> <td> <span translate=dgdtoolApp.project_team.created_by>Created_by</span> </td> <td> <span class=form-control-static>{{project_team.created_by}}</span> </td> </tr> <tr> <td> <span translate=dgdtoolApp.project_team.created_date>Created_date</span> </td> <td> <span class=form-control-static>{{project_team.created_date | date:'mediumDate'}}</span> </td> </tr> <tr> <td> <span translate=dgdtoolApp.project_team.modified_by>Modified_by</span> </td> <td> <span class=form-control-static>{{project_team.modified_by}}</span> </td> </tr> <tr> <td> <span translate=dgdtoolApp.project_team.modified_date>Modified_date</span> </td> <td> <span class=form-control-static>{{project_team.modified_date | date:'mediumDate'}}</span> </td> </tr> </tbody> </table> </div> <button type=submit onclick=window.history.back() class=\"btn btn-info\"> <span class=\"glyphicon glyphicon-arrow-left\"></span>&nbsp;<span translate=entity.action.back> Back</span> </button> </div>"
  );


  $templateCache.put('scripts/app/entities/project_team/project_team-dialog.html',
    "<form name=editForm role=form novalidate ng-submit=save() show-validation> <div class=modal-header> <button type=button class=close data-dismiss=modal aria-hidden=true ng-click=clear()>&times;</button> <h4 class=modal-title id=myProject_teamLabel translate=dgdtoolApp.project_team.home.createOrEditLabel>Create or edit a Project_team</h4> </div> <div class=modal-body> <jh-alert-error></jh-alert-error> <div class=form-group> <label for=id translate=global.field.id>ID</label> <input class=form-control id=id name=id ng-model=project_team.id readonly/> </div> <div class=form-group> <label translate=dgdtoolApp.project_team.project_id for=field_project_id>Project_id</label> <input type=number class=form-control name=project_id id=field_project_id ng-model=project_team.project_id required/> <div ng-show=editForm.project_id.$invalid> <p class=help-block ng-show=editForm.project_id.$error.required translate=entity.validation.required> This field is required. </p> <p class=help-block ng-show=editForm.project_id.$error.number translate=entity.validation.number> This field should be a number. </p> </div> </div> <div class=form-group> <label translate=dgdtoolApp.project_team.resource_id for=field_resource_id>Resource_id</label> <input type=number class=form-control name=resource_id id=field_resource_id ng-model=project_team.resource_id required/> <div ng-show=editForm.resource_id.$invalid> <p class=help-block ng-show=editForm.resource_id.$error.required translate=entity.validation.required> This field is required. </p> <p class=help-block ng-show=editForm.resource_id.$error.number translate=entity.validation.number> This field should be a number. </p> </div> </div> <div class=form-group> <label translate=dgdtoolApp.project_team.role_id for=field_role_id>Role_id</label> <input type=number class=form-control name=role_id id=field_role_id ng-model=project_team.role_id required/> <div ng-show=editForm.role_id.$invalid> <p class=help-block ng-show=editForm.role_id.$error.required translate=entity.validation.required> This field is required. </p> <p class=help-block ng-show=editForm.role_id.$error.number translate=entity.validation.number> This field should be a number. </p> </div> </div> <div class=form-group> <label translate=dgdtoolApp.project_team.support_level for=field_support_level>Support_level</label> <input type=number class=form-control name=support_level id=field_support_level ng-model=\"project_team.support_level\"/> </div> <div class=form-group> <label translate=dgdtoolApp.project_team.est_hours for=field_est_hours>Est_hours</label> <input type=number class=form-control name=est_hours id=field_est_hours ng-model=\"project_team.est_hours\"/> </div> <div class=form-group> <label translate=dgdtoolApp.project_team.assigned_date for=field_assigned_date>Assigned_date</label> <input type=datetime-local class=form-control name=assigned_date id=field_assigned_date ng-model=\"project_team.assigned_date\"/> </div> <div class=form-group> <label translate=dgdtoolApp.project_team.description for=field_description>Description</label> <input class=form-control name=description id=field_description ng-model=project_team.description required ng-maxlength=\"2000\"/> <div ng-show=editForm.description.$invalid> <p class=help-block ng-show=editForm.description.$error.required translate=entity.validation.required> This field is required. </p> <p class=help-block ng-show=editForm.description.$error.maxlength translate=entity.validation.maxlength translate-value-max=2000> This field cannot be longer than 2000 characters. </p> </div> </div> <div class=form-group> <label translate=dgdtoolApp.project_team.status_id for=field_status_id>Status_id</label> <input type=number class=form-control name=status_id id=field_status_id ng-model=project_team.status_id required/> <div ng-show=editForm.status_id.$invalid> <p class=help-block ng-show=editForm.status_id.$error.required translate=entity.validation.required> This field is required. </p> <p class=help-block ng-show=editForm.status_id.$error.number translate=entity.validation.number> This field should be a number. </p> </div> </div> <div class=form-group> <label translate=dgdtoolApp.project_team.created_by for=field_created_by>Created_by</label> <input class=form-control name=created_by id=field_created_by ng-model=project_team.created_by required ng-maxlength=\"200\"/> <div ng-show=editForm.created_by.$invalid> <p class=help-block ng-show=editForm.created_by.$error.required translate=entity.validation.required> This field is required. </p> <p class=help-block ng-show=editForm.created_by.$error.maxlength translate=entity.validation.maxlength translate-value-max=200> This field cannot be longer than 200 characters. </p> </div> </div> <div class=form-group> <label translate=dgdtoolApp.project_team.created_date for=field_created_date>Created_date</label> <input type=date class=form-control name=created_date id=field_created_date ng-model=project_team.created_date required/> <div ng-show=editForm.created_date.$invalid> <p class=help-block ng-show=editForm.created_date.$error.required translate=entity.validation.required> This field is required. </p> </div> </div> <div class=form-group> <label translate=dgdtoolApp.project_team.modified_by for=field_modified_by>Modified_by</label> <input class=form-control name=modified_by id=field_modified_by ng-model=project_team.modified_by required ng-maxlength=\"200\"/> <div ng-show=editForm.modified_by.$invalid> <p class=help-block ng-show=editForm.modified_by.$error.required translate=entity.validation.required> This field is required. </p> <p class=help-block ng-show=editForm.modified_by.$error.maxlength translate=entity.validation.maxlength translate-value-max=200> This field cannot be longer than 200 characters. </p> </div> </div> <div class=form-group> <label translate=dgdtoolApp.project_team.modified_date for=field_modified_date>Modified_date</label> <input type=date class=form-control name=modified_date id=field_modified_date ng-model=project_team.modified_date required/> <div ng-show=editForm.modified_date.$invalid> <p class=help-block ng-show=editForm.modified_date.$error.required translate=entity.validation.required> This field is required. </p> </div> </div> </div> <div class=modal-footer> <button type=button class=\"btn btn-default\" data-dismiss=modal ng-click=clear()> <span class=\"glyphicon glyphicon-ban-circle\"></span>&nbsp;<span translate=entity.action.cancel>Cancel</span> </button> <button type=submit ng-disabled=\"editForm.$invalid || editForm.$submitted\" class=\"btn btn-primary\"> <span class=\"glyphicon glyphicon-save\"></span>&nbsp;<span translate=entity.action.save>Save</span> </button> </div> </form>"
  );


  $templateCache.put('scripts/app/entities/project_team/project_teams.html',
    "<div> <h2 translate=dgdtoolApp.project_team.home.title>Project_teams</h2> <jh-alert></jh-alert> <div class=container> <div class=row> <div class=col-md-4> <button class=\"btn btn-primary\" ui-sref=project_team.new> <span class=\"glyphicon glyphicon-flash\"></span> <span translate=dgdtoolApp.project_team.home.createLabel>Create a new Project_team</span> </button> </div> <div class=col-md-8> <form name=searchForm class=form-inline> <div class=form-group> <input class=form-control ng-model=searchQuery id=searchQuery placeholder=query> </div> <button class=\"btn btn-info\" ng-click=search()><span class=\"glyphicon glyphicon-search\"></span> <span>Search a Project_team</span> </button> </form> </div> </div> </div> <div class=\"modal fade\" id=deleteProject_teamConfirmation> <div class=modal-dialog> <div class=modal-content> <form name=deleteForm ng-submit=confirmDelete(project_team.id)> <div class=modal-header> <button type=button class=close data-dismiss=modal aria-hidden=true ng-click=clear()>&times;</button> <h4 class=modal-title translate=entity.delete.title>Confirm delete operation</h4> </div> <div class=modal-body> <p translate=dgdtoolApp.project_team.delete.question translate-values=\"{id: '{{project_team.id}}'}\">Are you sure you want to delete this Project_team?</p> </div> <div class=modal-footer> <button type=button class=\"btn btn-default\" data-dismiss=modal ng-click=clear()> <span class=\"glyphicon glyphicon-ban-circle\"></span>&nbsp;<span translate=entity.action.cancel>Cancel</span> </button> <button type=submit ng-disabled=deleteForm.$invalid class=\"btn btn-danger\"> <span class=\"glyphicon glyphicon-remove-circle\"></span>&nbsp;<span translate=entity.action.delete>Delete</span> </button> </div> </form> </div> </div> </div> <div class=table-responsive> <table class=\"table table-striped\"> <thead> <tr> <th translate=global.field.id>ID</th> <th translate=dgdtoolApp.project_team.project_id>Project_id</th> <th translate=dgdtoolApp.project_team.resource_id>Resource_id</th> <th translate=dgdtoolApp.project_team.role_id>Role_id</th> <th translate=dgdtoolApp.project_team.support_level>Support_level</th> <th translate=dgdtoolApp.project_team.est_hours>Est_hours</th> <th translate=dgdtoolApp.project_team.assigned_date>Assigned_date</th> <th translate=dgdtoolApp.project_team.description>Description</th> <th translate=dgdtoolApp.project_team.status_id>Status_id</th> <th translate=dgdtoolApp.project_team.created_by>Created_by</th> <th translate=dgdtoolApp.project_team.created_date>Created_date</th> <th translate=dgdtoolApp.project_team.modified_by>Modified_by</th> <th translate=dgdtoolApp.project_team.modified_date>Modified_date</th> <th></th> </tr> </thead> <tbody> <tr ng-repeat=\"project_team in project_teams track by project_team.id\"> <td><a ui-sref=project_team.detail({id:project_team.id})>{{project_team.id}}</a></td> <td>{{project_team.project_id}}</td> <td>{{project_team.resource_id}}</td> <td>{{project_team.role_id}}</td> <td>{{project_team.support_level}}</td> <td>{{project_team.est_hours}}</td> <td>{{project_team.assigned_date | date:'medium'}}</td> <td>{{project_team.description}}</td> <td>{{project_team.status_id}}</td> <td>{{project_team.created_by}}</td> <td>{{project_team.created_date | date:'mediumDate'}}</td> <td>{{project_team.modified_by}}</td> <td>{{project_team.modified_date | date:'mediumDate'}}</td> <td> <button type=submit ui-sref=project_team.detail({id:project_team.id}) class=\"btn btn-info btn-sm\"> <span class=\"glyphicon glyphicon-eye-open\"></span>&nbsp;<span translate=entity.action.view> View</span> </button> <button type=submit ui-sref=project_team.edit({id:project_team.id}) class=\"btn btn-primary btn-sm\"> <span class=\"glyphicon glyphicon-pencil\"></span>&nbsp;<span translate=entity.action.edit> Edit</span> </button> <button type=submit ng-click=delete(project_team.id) class=\"btn btn-danger btn-sm\"> <span class=\"glyphicon glyphicon-remove-circle\"></span>&nbsp;<span translate=entity.action.delete> Delete</span> </button> </td> </tr> </tbody> </table> <nav> <ul class=pager> <li ng-show=\"links['first'] >= 0\" ng-click=\"loadPage(links['first'])\"><a href=#>&lt;&lt;</a></li> <li ng-show=\"page > 0\" ng-click=\"loadPage(links['prev'] || 0)\"><a href=#>&lt;</a></li> <li ng-show=\"links['next']\" ng-click=\"loadPage(links['next'])\"><a href=#>&gt;</a></li> <li ng-show=\"links['last'] > 0\" ng-click=\"loadPage(links['last'])\"><a href=#>&gt;&gt;</a></li> </ul> </nav> </div> </div>"
  );


  $templateCache.put('scripts/app/entities/resource/resource-detail.html',
    "<div> <h2><span translate=dgdtoolApp.resource.detail.title>Resource</span> {{resource.id}}</h2> <div class=table-responsive> <table class=\"table table-striped\"> <thead> <tr> <th translate=entity.detail.field>Field</th> <th translate=entity.detail.value>Value</th> </tr> </thead> <tbody> <tr> <td> <span translate=dgdtoolApp.resource.resource_name>Resource_name</span> </td> <td> <span class=form-control-static>{{resource.resource_name}}</span> </td> </tr> <tr> <td> <span translate=dgdtoolApp.resource.resource_number>Resource_number</span> </td> <td> <span class=form-control-static>{{resource.resource_number}}</span> </td> </tr> <tr> <td> <span translate=dgdtoolApp.resource.description>Description</span> </td> <td> <span class=form-control-static>{{resource.description}}</span> </td> </tr> <tr> <td> <span translate=dgdtoolApp.resource.status_id>Status_id</span> </td> <td> <span class=form-control-static>{{resource.status_id}}</span> </td> </tr> <tr> <td> <span translate=dgdtoolApp.resource.created_by>Created_by</span> </td> <td> <span class=form-control-static>{{resource.created_by}}</span> </td> </tr> <tr> <td> <span translate=dgdtoolApp.resource.created_date>Created_date</span> </td> <td> <span class=form-control-static>{{resource.created_date | date:'mediumDate'}}</span> </td> </tr> <tr> <td> <span translate=dgdtoolApp.resource.modified_by>Modified_by</span> </td> <td> <span class=form-control-static>{{resource.modified_by}}</span> </td> </tr> <tr> <td> <span translate=dgdtoolApp.resource.modified_date>Modified_date</span> </td> <td> <span class=form-control-static>{{resource.modified_date | date:'mediumDate'}}</span> </td> </tr> </tbody> </table> </div> <button type=submit onclick=window.history.back() class=\"btn btn-info\"> <span class=\"glyphicon glyphicon-arrow-left\"></span>&nbsp;<span translate=entity.action.back> Back</span> </button> </div>"
  );


  $templateCache.put('scripts/app/entities/resource/resource-dialog.html',
    "<form name=editForm role=form novalidate ng-submit=save() show-validation> <div class=modal-header> <button type=button class=close data-dismiss=modal aria-hidden=true ng-click=clear()>&times;</button> <h4 class=modal-title id=myResourceLabel translate=dgdtoolApp.resource.home.createOrEditLabel>Create or edit a Resource</h4> </div> <div class=modal-body> <jh-alert-error></jh-alert-error> <div class=form-group> <label for=id translate=global.field.id>ID</label> <input class=form-control id=id name=id ng-model=resource.id readonly/> </div> <div class=form-group> <label translate=dgdtoolApp.resource.resource_name for=field_resource_name>Resource_name</label> <input class=form-control name=resource_name id=field_resource_name ng-model=resource.resource_name required ng-maxlength=\"200\"/> <div ng-show=editForm.resource_name.$invalid> <p class=help-block ng-show=editForm.resource_name.$error.required translate=entity.validation.required> This field is required. </p> <p class=help-block ng-show=editForm.resource_name.$error.maxlength translate=entity.validation.maxlength translate-value-max=200> This field cannot be longer than 200 characters. </p> </div> </div> <div class=form-group> <label translate=dgdtoolApp.resource.resource_number for=field_resource_number>Resource_number</label> <input class=form-control name=resource_number id=field_resource_number ng-model=resource.resource_number required ng-maxlength=\"200\"/> <div ng-show=editForm.resource_number.$invalid> <p class=help-block ng-show=editForm.resource_number.$error.required translate=entity.validation.required> This field is required. </p> <p class=help-block ng-show=editForm.resource_number.$error.maxlength translate=entity.validation.maxlength translate-value-max=200> This field cannot be longer than 200 characters. </p> </div> </div> <div class=form-group> <label translate=dgdtoolApp.resource.description for=field_description>Description</label> <input class=form-control name=description id=field_description ng-model=resource.description required ng-maxlength=\"2000\"/> <div ng-show=editForm.description.$invalid> <p class=help-block ng-show=editForm.description.$error.required translate=entity.validation.required> This field is required. </p> <p class=help-block ng-show=editForm.description.$error.maxlength translate=entity.validation.maxlength translate-value-max=2000> This field cannot be longer than 2000 characters. </p> </div> </div> <div class=form-group> <label translate=dgdtoolApp.resource.status_id for=field_status_id>Status_id</label> <input type=number class=form-control name=status_id id=field_status_id ng-model=resource.status_id required/> <div ng-show=editForm.status_id.$invalid> <p class=help-block ng-show=editForm.status_id.$error.required translate=entity.validation.required> This field is required. </p> <p class=help-block ng-show=editForm.status_id.$error.number translate=entity.validation.number> This field should be a number. </p> </div> </div> <div class=form-group> <label translate=dgdtoolApp.resource.created_by for=field_created_by>Created_by</label> <input class=form-control name=created_by id=field_created_by ng-model=resource.created_by required ng-maxlength=\"200\"/> <div ng-show=editForm.created_by.$invalid> <p class=help-block ng-show=editForm.created_by.$error.required translate=entity.validation.required> This field is required. </p> <p class=help-block ng-show=editForm.created_by.$error.maxlength translate=entity.validation.maxlength translate-value-max=200> This field cannot be longer than 200 characters. </p> </div> </div> <div class=form-group> <label translate=dgdtoolApp.resource.created_date for=field_created_date>Created_date</label> <input type=date class=form-control name=created_date id=field_created_date ng-model=resource.created_date required/> <div ng-show=editForm.created_date.$invalid> <p class=help-block ng-show=editForm.created_date.$error.required translate=entity.validation.required> This field is required. </p> </div> </div> <div class=form-group> <label translate=dgdtoolApp.resource.modified_by for=field_modified_by>Modified_by</label> <input class=form-control name=modified_by id=field_modified_by ng-model=resource.modified_by required ng-maxlength=\"200\"/> <div ng-show=editForm.modified_by.$invalid> <p class=help-block ng-show=editForm.modified_by.$error.required translate=entity.validation.required> This field is required. </p> <p class=help-block ng-show=editForm.modified_by.$error.maxlength translate=entity.validation.maxlength translate-value-max=200> This field cannot be longer than 200 characters. </p> </div> </div> <div class=form-group> <label translate=dgdtoolApp.resource.modified_date for=field_modified_date>Modified_date</label> <input type=date class=form-control name=modified_date id=field_modified_date ng-model=resource.modified_date required/> <div ng-show=editForm.modified_date.$invalid> <p class=help-block ng-show=editForm.modified_date.$error.required translate=entity.validation.required> This field is required. </p> </div> </div> </div> <div class=modal-footer> <button type=button class=\"btn btn-default\" data-dismiss=modal ng-click=clear()> <span class=\"glyphicon glyphicon-ban-circle\"></span>&nbsp;<span translate=entity.action.cancel>Cancel</span> </button> <button type=submit ng-disabled=\"editForm.$invalid || editForm.$submitted\" class=\"btn btn-primary\"> <span class=\"glyphicon glyphicon-save\"></span>&nbsp;<span translate=entity.action.save>Save</span> </button> </div> </form>"
  );


  $templateCache.put('scripts/app/entities/resource/resources.html',
    "<div> <h2 translate=dgdtoolApp.resource.home.title>Resources</h2> <jh-alert></jh-alert> <div class=container> <div class=row> <div class=col-md-4> <button class=\"btn btn-primary\" ui-sref=resource.new> <span class=\"glyphicon glyphicon-flash\"></span> <span translate=dgdtoolApp.resource.home.createLabel>Create a new Resource</span> </button> </div> <div class=col-md-8> <form name=searchForm class=form-inline> <div class=form-group> <input class=form-control ng-model=searchQuery id=searchQuery placeholder=query> </div> <button class=\"btn btn-info\" ng-click=search()><span class=\"glyphicon glyphicon-search\"></span> <span>Search a Resource</span> </button> </form> </div> </div> </div> <div class=\"modal fade\" id=deleteResourceConfirmation> <div class=modal-dialog> <div class=modal-content> <form name=deleteForm ng-submit=confirmDelete(resource.id)> <div class=modal-header> <button type=button class=close data-dismiss=modal aria-hidden=true ng-click=clear()>&times;</button> <h4 class=modal-title translate=entity.delete.title>Confirm delete operation</h4> </div> <div class=modal-body> <p translate=dgdtoolApp.resource.delete.question translate-values=\"{id: '{{resource.id}}'}\">Are you sure you want to delete this Resource?</p> </div> <div class=modal-footer> <button type=button class=\"btn btn-default\" data-dismiss=modal ng-click=clear()> <span class=\"glyphicon glyphicon-ban-circle\"></span>&nbsp;<span translate=entity.action.cancel>Cancel</span> </button> <button type=submit ng-disabled=deleteForm.$invalid class=\"btn btn-danger\"> <span class=\"glyphicon glyphicon-remove-circle\"></span>&nbsp;<span translate=entity.action.delete>Delete</span> </button> </div> </form> </div> </div> </div> <div class=table-responsive> <table class=\"table table-striped\"> <thead> <tr> <th translate=global.field.id>ID</th> <th translate=dgdtoolApp.resource.resource_name>Resource_name</th> <th translate=dgdtoolApp.resource.resource_number>Resource_number</th> <th translate=dgdtoolApp.resource.description>Description</th> <th translate=dgdtoolApp.resource.status_id>Status_id</th> <th translate=dgdtoolApp.resource.created_by>Created_by</th> <th translate=dgdtoolApp.resource.created_date>Created_date</th> <th translate=dgdtoolApp.resource.modified_by>Modified_by</th> <th translate=dgdtoolApp.resource.modified_date>Modified_date</th> <th></th> </tr> </thead> <tbody> <tr ng-repeat=\"resource in resources track by resource.id\"> <td><a ui-sref=resource.detail({id:resource.id})>{{resource.id}}</a></td> <td>{{resource.resource_name}}</td> <td>{{resource.resource_number}}</td> <td>{{resource.description}}</td> <td>{{resource.status_id}}</td> <td>{{resource.created_by}}</td> <td>{{resource.created_date | date:'mediumDate'}}</td> <td>{{resource.modified_by}}</td> <td>{{resource.modified_date | date:'mediumDate'}}</td> <td> <button type=submit ui-sref=resource.detail({id:resource.id}) class=\"btn btn-info btn-sm\"> <span class=\"glyphicon glyphicon-eye-open\"></span>&nbsp;<span translate=entity.action.view> View</span> </button> <button type=submit ui-sref=resource.edit({id:resource.id}) class=\"btn btn-primary btn-sm\"> <span class=\"glyphicon glyphicon-pencil\"></span>&nbsp;<span translate=entity.action.edit> Edit</span> </button> <button type=submit ng-click=delete(resource.id) class=\"btn btn-danger btn-sm\"> <span class=\"glyphicon glyphicon-remove-circle\"></span>&nbsp;<span translate=entity.action.delete> Delete</span> </button> </td> </tr> </tbody> </table> <nav> <ul class=pager> <li ng-show=\"links['first'] >= 0\" ng-click=\"loadPage(links['first'])\"><a href=#>&lt;&lt;</a></li> <li ng-show=\"page > 0\" ng-click=\"loadPage(links['prev'] || 0)\"><a href=#>&lt;</a></li> <li ng-show=\"links['next']\" ng-click=\"loadPage(links['next'])\"><a href=#>&gt;</a></li> <li ng-show=\"links['last'] > 0\" ng-click=\"loadPage(links['last'])\"><a href=#>&gt;&gt;</a></li> </ul> </nav> </div> </div>"
  );


  $templateCache.put('scripts/app/entities/role/role-detail.html',
    "<div> <h2><span translate=dgdtoolApp.role.detail.title>Role</span> {{role.id}}</h2> <div class=table-responsive> <table class=\"table table-striped\"> <thead> <tr> <th translate=entity.detail.field>Field</th> <th translate=entity.detail.value>Value</th> </tr> </thead> <tbody> <tr> <td> <span translate=dgdtoolApp.role.role_name>Role_name</span> </td> <td> <span class=form-control-static>{{role.role_name}}</span> </td> </tr> <tr> <td> <span translate=dgdtoolApp.role.description>Description</span> </td> <td> <span class=form-control-static>{{role.description}}</span> </td> </tr> <tr> <td> <span translate=dgdtoolApp.role.status_id>Status_id</span> </td> <td> <span class=form-control-static>{{role.status_id}}</span> </td> </tr> <tr> <td> <span translate=dgdtoolApp.role.created_by>Created_by</span> </td> <td> <span class=form-control-static>{{role.created_by}}</span> </td> </tr> <tr> <td> <span translate=dgdtoolApp.role.created_date>Created_date</span> </td> <td> <span class=form-control-static>{{role.created_date | date:'mediumDate'}}</span> </td> </tr> <tr> <td> <span translate=dgdtoolApp.role.modified_by>Modified_by</span> </td> <td> <span class=form-control-static>{{role.modified_by}}</span> </td> </tr> <tr> <td> <span translate=dgdtoolApp.role.modified_date>Modified_date</span> </td> <td> <span class=form-control-static>{{role.modified_date | date:'mediumDate'}}</span> </td> </tr> </tbody> </table> </div> <button type=submit onclick=window.history.back() class=\"btn btn-info\"> <span class=\"glyphicon glyphicon-arrow-left\"></span>&nbsp;<span translate=entity.action.back> Back</span> </button> </div>"
  );


  $templateCache.put('scripts/app/entities/role/role-dialog.html',
    "<form name=editForm role=form novalidate ng-submit=save() show-validation> <div class=modal-header> <button type=button class=close data-dismiss=modal aria-hidden=true ng-click=clear()>&times;</button> <h4 class=modal-title id=myRoleLabel translate=dgdtoolApp.role.home.createOrEditLabel>Create or edit a Role</h4> </div> <div class=modal-body> <jh-alert-error></jh-alert-error> <div class=form-group> <label for=id translate=global.field.id>ID</label> <input class=form-control id=id name=id ng-model=role.id readonly/> </div> <div class=form-group> <label translate=dgdtoolApp.role.role_name for=field_role_name>Role_name</label> <input class=form-control name=role_name id=field_role_name ng-model=role.role_name required ng-maxlength=\"200\"/> <div ng-show=editForm.role_name.$invalid> <p class=help-block ng-show=editForm.role_name.$error.required translate=entity.validation.required> This field is required. </p> <p class=help-block ng-show=editForm.role_name.$error.maxlength translate=entity.validation.maxlength translate-value-max=200> This field cannot be longer than 200 characters. </p> </div> </div> <div class=form-group> <label translate=dgdtoolApp.role.description for=field_description>Description</label> <input class=form-control name=description id=field_description ng-model=role.description required ng-maxlength=\"2000\"/> <div ng-show=editForm.description.$invalid> <p class=help-block ng-show=editForm.description.$error.required translate=entity.validation.required> This field is required. </p> <p class=help-block ng-show=editForm.description.$error.maxlength translate=entity.validation.maxlength translate-value-max=2000> This field cannot be longer than 2000 characters. </p> </div> </div> <div class=form-group> <label translate=dgdtoolApp.role.status_id for=field_status_id>Status_id</label> <input type=number class=form-control name=status_id id=field_status_id ng-model=role.status_id required/> <div ng-show=editForm.status_id.$invalid> <p class=help-block ng-show=editForm.status_id.$error.required translate=entity.validation.required> This field is required. </p> <p class=help-block ng-show=editForm.status_id.$error.number translate=entity.validation.number> This field should be a number. </p> </div> </div> <div class=form-group> <label translate=dgdtoolApp.role.created_by for=field_created_by>Created_by</label> <input class=form-control name=created_by id=field_created_by ng-model=role.created_by required ng-maxlength=\"200\"/> <div ng-show=editForm.created_by.$invalid> <p class=help-block ng-show=editForm.created_by.$error.required translate=entity.validation.required> This field is required. </p> <p class=help-block ng-show=editForm.created_by.$error.maxlength translate=entity.validation.maxlength translate-value-max=200> This field cannot be longer than 200 characters. </p> </div> </div> <div class=form-group> <label translate=dgdtoolApp.role.created_date for=field_created_date>Created_date</label> <input type=date class=form-control name=created_date id=field_created_date ng-model=role.created_date required/> <div ng-show=editForm.created_date.$invalid> <p class=help-block ng-show=editForm.created_date.$error.required translate=entity.validation.required> This field is required. </p> </div> </div> <div class=form-group> <label translate=dgdtoolApp.role.modified_by for=field_modified_by>Modified_by</label> <input class=form-control name=modified_by id=field_modified_by ng-model=role.modified_by required ng-maxlength=\"200\"/> <div ng-show=editForm.modified_by.$invalid> <p class=help-block ng-show=editForm.modified_by.$error.required translate=entity.validation.required> This field is required. </p> <p class=help-block ng-show=editForm.modified_by.$error.maxlength translate=entity.validation.maxlength translate-value-max=200> This field cannot be longer than 200 characters. </p> </div> </div> <div class=form-group> <label translate=dgdtoolApp.role.modified_date for=field_modified_date>Modified_date</label> <input type=date class=form-control name=modified_date id=field_modified_date ng-model=role.modified_date required/> <div ng-show=editForm.modified_date.$invalid> <p class=help-block ng-show=editForm.modified_date.$error.required translate=entity.validation.required> This field is required. </p> </div> </div> </div> <div class=modal-footer> <button type=button class=\"btn btn-default\" data-dismiss=modal ng-click=clear()> <span class=\"glyphicon glyphicon-ban-circle\"></span>&nbsp;<span translate=entity.action.cancel>Cancel</span> </button> <button type=submit ng-disabled=\"editForm.$invalid || editForm.$submitted\" class=\"btn btn-primary\"> <span class=\"glyphicon glyphicon-save\"></span>&nbsp;<span translate=entity.action.save>Save</span> </button> </div> </form>"
  );


  $templateCache.put('scripts/app/entities/role/roles.html',
    "<div> <h2 translate=dgdtoolApp.role.home.title>Roles</h2> <jh-alert></jh-alert> <div class=container> <div class=row> <div class=col-md-4> <button class=\"btn btn-primary\" ui-sref=role.new> <span class=\"glyphicon glyphicon-flash\"></span> <span translate=dgdtoolApp.role.home.createLabel>Create a new Role</span> </button> </div> <div class=col-md-8> <form name=searchForm class=form-inline> <div class=form-group> <input class=form-control ng-model=searchQuery id=searchQuery placeholder=query> </div> <button class=\"btn btn-info\" ng-click=search()><span class=\"glyphicon glyphicon-search\"></span> <span>Search a Role</span> </button> </form> </div> </div> </div> <div class=\"modal fade\" id=deleteRoleConfirmation> <div class=modal-dialog> <div class=modal-content> <form name=deleteForm ng-submit=confirmDelete(role.id)> <div class=modal-header> <button type=button class=close data-dismiss=modal aria-hidden=true ng-click=clear()>&times;</button> <h4 class=modal-title translate=entity.delete.title>Confirm delete operation</h4> </div> <div class=modal-body> <p translate=dgdtoolApp.role.delete.question translate-values=\"{id: '{{role.id}}'}\">Are you sure you want to delete this Role?</p> </div> <div class=modal-footer> <button type=button class=\"btn btn-default\" data-dismiss=modal ng-click=clear()> <span class=\"glyphicon glyphicon-ban-circle\"></span>&nbsp;<span translate=entity.action.cancel>Cancel</span> </button> <button type=submit ng-disabled=deleteForm.$invalid class=\"btn btn-danger\"> <span class=\"glyphicon glyphicon-remove-circle\"></span>&nbsp;<span translate=entity.action.delete>Delete</span> </button> </div> </form> </div> </div> </div> <div class=table-responsive> <table class=\"table table-striped\"> <thead> <tr> <th translate=global.field.id>ID</th> <th translate=dgdtoolApp.role.role_name>Role_name</th> <th translate=dgdtoolApp.role.description>Description</th> <th translate=dgdtoolApp.role.status_id>Status_id</th> <th translate=dgdtoolApp.role.created_by>Created_by</th> <th translate=dgdtoolApp.role.created_date>Created_date</th> <th translate=dgdtoolApp.role.modified_by>Modified_by</th> <th translate=dgdtoolApp.role.modified_date>Modified_date</th> <th></th> </tr> </thead> <tbody> <tr ng-repeat=\"role in roles track by role.id\"> <td><a ui-sref=role.detail({id:role.id})>{{role.id}}</a></td> <td>{{role.role_name}}</td> <td>{{role.description}}</td> <td>{{role.status_id}}</td> <td>{{role.created_by}}</td> <td>{{role.created_date | date:'mediumDate'}}</td> <td>{{role.modified_by}}</td> <td>{{role.modified_date | date:'mediumDate'}}</td> <td> <button type=submit ui-sref=role.detail({id:role.id}) class=\"btn btn-info btn-sm\"> <span class=\"glyphicon glyphicon-eye-open\"></span>&nbsp;<span translate=entity.action.view> View</span> </button> <button type=submit ui-sref=role.edit({id:role.id}) class=\"btn btn-primary btn-sm\"> <span class=\"glyphicon glyphicon-pencil\"></span>&nbsp;<span translate=entity.action.edit> Edit</span> </button> <button type=submit ng-click=delete(role.id) class=\"btn btn-danger btn-sm\"> <span class=\"glyphicon glyphicon-remove-circle\"></span>&nbsp;<span translate=entity.action.delete> Delete</span> </button> </td> </tr> </tbody> </table> <nav> <ul class=pager> <li ng-show=\"links['first'] >= 0\" ng-click=\"loadPage(links['first'])\"><a href=#>&lt;&lt;</a></li> <li ng-show=\"page > 0\" ng-click=\"loadPage(links['prev'] || 0)\"><a href=#>&lt;</a></li> <li ng-show=\"links['next']\" ng-click=\"loadPage(links['next'])\"><a href=#>&gt;</a></li> <li ng-show=\"links['last'] > 0\" ng-click=\"loadPage(links['last'])\"><a href=#>&gt;&gt;</a></li> </ul> </nav> </div> </div>"
  );


  $templateCache.put('scripts/app/entities/security_solution/security_solution-detail.html',
    "<div> <h2><span translate=dgdtoolApp.security_solution.detail.title>Security_solution</span> {{security_solution.id}}</h2> <div class=table-responsive> <table class=\"table table-striped\"> <thead> <tr> <th translate=entity.detail.field>Field</th> <th translate=entity.detail.value>Value</th> </tr> </thead> <tbody> <tr> <td> <span translate=dgdtoolApp.security_solution.security_solution_name>Security_solution_name</span> </td> <td> <span class=form-control-static>{{security_solution.security_solution_name}}</span> </td> </tr> <tr> <td> <span translate=dgdtoolApp.security_solution.description>Description</span> </td> <td> <span class=form-control-static>{{security_solution.description}}</span> </td> </tr> <tr> <td> <span translate=dgdtoolApp.security_solution.status_id>Status_id</span> </td> <td> <span class=form-control-static>{{security_solution.status_id}}</span> </td> </tr> <tr> <td> <span translate=dgdtoolApp.security_solution.created_by>Created_by</span> </td> <td> <span class=form-control-static>{{security_solution.created_by}}</span> </td> </tr> <tr> <td> <span translate=dgdtoolApp.security_solution.created_date>Created_date</span> </td> <td> <span class=form-control-static>{{security_solution.created_date | date:'mediumDate'}}</span> </td> </tr> <tr> <td> <span translate=dgdtoolApp.security_solution.modified_by>Modified_by</span> </td> <td> <span class=form-control-static>{{security_solution.modified_by}}</span> </td> </tr> <tr> <td> <span translate=dgdtoolApp.security_solution.modified_date>Modified_date</span> </td> <td> <span class=form-control-static>{{security_solution.modified_date | date:'mediumDate'}}</span> </td> </tr> </tbody> </table> </div> <button type=submit onclick=window.history.back() class=\"btn btn-info\"> <span class=\"glyphicon glyphicon-arrow-left\"></span>&nbsp;<span translate=entity.action.back> Back</span> </button> </div>"
  );


  $templateCache.put('scripts/app/entities/security_solution/security_solution-dialog.html',
    "<form name=editForm role=form novalidate ng-submit=save() show-validation> <div class=modal-header> <button type=button class=close data-dismiss=modal aria-hidden=true ng-click=clear()>&times;</button> <h4 class=modal-title id=mySecurity_solutionLabel translate=dgdtoolApp.security_solution.home.createOrEditLabel>Create or edit a Security_solution</h4> </div> <div class=modal-body> <jh-alert-error></jh-alert-error> <div class=form-group> <label for=id translate=global.field.id>ID</label> <input class=form-control id=id name=id ng-model=security_solution.id readonly/> </div> <div class=form-group> <label translate=dgdtoolApp.security_solution.security_solution_name for=field_security_solution_name>Security_solution_name</label> <input class=form-control name=security_solution_name id=field_security_solution_name ng-model=security_solution.security_solution_name required ng-maxlength=\"200\"/> <div ng-show=editForm.security_solution_name.$invalid> <p class=help-block ng-show=editForm.security_solution_name.$error.required translate=entity.validation.required> This field is required. </p> <p class=help-block ng-show=editForm.security_solution_name.$error.maxlength translate=entity.validation.maxlength translate-value-max=200> This field cannot be longer than 200 characters. </p> </div> </div> <div class=form-group> <label translate=dgdtoolApp.security_solution.description for=field_description>Description</label> <input class=form-control name=description id=field_description ng-model=security_solution.description required ng-maxlength=\"2000\"/> <div ng-show=editForm.description.$invalid> <p class=help-block ng-show=editForm.description.$error.required translate=entity.validation.required> This field is required. </p> <p class=help-block ng-show=editForm.description.$error.maxlength translate=entity.validation.maxlength translate-value-max=2000> This field cannot be longer than 2000 characters. </p> </div> </div> <div class=form-group> <label translate=dgdtoolApp.security_solution.status_id for=field_status_id>Status_id</label> <input type=number class=form-control name=status_id id=field_status_id ng-model=security_solution.status_id required/> <div ng-show=editForm.status_id.$invalid> <p class=help-block ng-show=editForm.status_id.$error.required translate=entity.validation.required> This field is required. </p> <p class=help-block ng-show=editForm.status_id.$error.number translate=entity.validation.number> This field should be a number. </p> </div> </div> <div class=form-group> <label translate=dgdtoolApp.security_solution.created_by for=field_created_by>Created_by</label> <input class=form-control name=created_by id=field_created_by ng-model=security_solution.created_by required ng-maxlength=\"200\"/> <div ng-show=editForm.created_by.$invalid> <p class=help-block ng-show=editForm.created_by.$error.required translate=entity.validation.required> This field is required. </p> <p class=help-block ng-show=editForm.created_by.$error.maxlength translate=entity.validation.maxlength translate-value-max=200> This field cannot be longer than 200 characters. </p> </div> </div> <div class=form-group> <label translate=dgdtoolApp.security_solution.created_date for=field_created_date>Created_date</label> <input type=date class=form-control name=created_date id=field_created_date ng-model=security_solution.created_date required/> <div ng-show=editForm.created_date.$invalid> <p class=help-block ng-show=editForm.created_date.$error.required translate=entity.validation.required> This field is required. </p> </div> </div> <div class=form-group> <label translate=dgdtoolApp.security_solution.modified_by for=field_modified_by>Modified_by</label> <input class=form-control name=modified_by id=field_modified_by ng-model=security_solution.modified_by required ng-maxlength=\"200\"/> <div ng-show=editForm.modified_by.$invalid> <p class=help-block ng-show=editForm.modified_by.$error.required translate=entity.validation.required> This field is required. </p> <p class=help-block ng-show=editForm.modified_by.$error.maxlength translate=entity.validation.maxlength translate-value-max=200> This field cannot be longer than 200 characters. </p> </div> </div> <div class=form-group> <label translate=dgdtoolApp.security_solution.modified_date for=field_modified_date>Modified_date</label> <input type=date class=form-control name=modified_date id=field_modified_date ng-model=security_solution.modified_date required/> <div ng-show=editForm.modified_date.$invalid> <p class=help-block ng-show=editForm.modified_date.$error.required translate=entity.validation.required> This field is required. </p> </div> </div> </div> <div class=modal-footer> <button type=button class=\"btn btn-default\" data-dismiss=modal ng-click=clear()> <span class=\"glyphicon glyphicon-ban-circle\"></span>&nbsp;<span translate=entity.action.cancel>Cancel</span> </button> <button type=submit ng-disabled=\"editForm.$invalid || editForm.$submitted\" class=\"btn btn-primary\"> <span class=\"glyphicon glyphicon-save\"></span>&nbsp;<span translate=entity.action.save>Save</span> </button> </div> </form>"
  );


  $templateCache.put('scripts/app/entities/security_solution/security_solutions.html',
    "<div> <h2 translate=dgdtoolApp.security_solution.home.title>Security_solutions</h2> <jh-alert></jh-alert> <div class=container> <div class=row> <div class=col-md-4> <button class=\"btn btn-primary\" ui-sref=security_solution.new> <span class=\"glyphicon glyphicon-flash\"></span> <span translate=dgdtoolApp.security_solution.home.createLabel>Create a new Security_solution</span> </button> </div> <div class=col-md-8> <form name=searchForm class=form-inline> <div class=form-group> <input class=form-control ng-model=searchQuery id=searchQuery placeholder=query> </div> <button class=\"btn btn-info\" ng-click=search()><span class=\"glyphicon glyphicon-search\"></span> <span>Search a Security_solution</span> </button> </form> </div> </div> </div> <div class=\"modal fade\" id=deleteSecurity_solutionConfirmation> <div class=modal-dialog> <div class=modal-content> <form name=deleteForm ng-submit=confirmDelete(security_solution.id)> <div class=modal-header> <button type=button class=close data-dismiss=modal aria-hidden=true ng-click=clear()>&times;</button> <h4 class=modal-title translate=entity.delete.title>Confirm delete operation</h4> </div> <div class=modal-body> <p translate=dgdtoolApp.security_solution.delete.question translate-values=\"{id: '{{security_solution.id}}'}\">Are you sure you want to delete this Security_solution?</p> </div> <div class=modal-footer> <button type=button class=\"btn btn-default\" data-dismiss=modal ng-click=clear()> <span class=\"glyphicon glyphicon-ban-circle\"></span>&nbsp;<span translate=entity.action.cancel>Cancel</span> </button> <button type=submit ng-disabled=deleteForm.$invalid class=\"btn btn-danger\"> <span class=\"glyphicon glyphicon-remove-circle\"></span>&nbsp;<span translate=entity.action.delete>Delete</span> </button> </div> </form> </div> </div> </div> <div class=table-responsive> <table class=\"table table-striped\"> <thead> <tr> <th translate=global.field.id>ID</th> <th translate=dgdtoolApp.security_solution.security_solution_name>Security_solution_name</th> <th translate=dgdtoolApp.security_solution.description>Description</th> <th translate=dgdtoolApp.security_solution.status_id>Status_id</th> <th translate=dgdtoolApp.security_solution.created_by>Created_by</th> <th translate=dgdtoolApp.security_solution.created_date>Created_date</th> <th translate=dgdtoolApp.security_solution.modified_by>Modified_by</th> <th translate=dgdtoolApp.security_solution.modified_date>Modified_date</th> <th></th> </tr> </thead> <tbody> <tr ng-repeat=\"security_solution in security_solutions track by security_solution.id\"> <td><a ui-sref=security_solution.detail({id:security_solution.id})>{{security_solution.id}}</a></td> <td>{{security_solution.security_solution_name}}</td> <td>{{security_solution.description}}</td> <td>{{security_solution.status_id}}</td> <td>{{security_solution.created_by}}</td> <td>{{security_solution.created_date | date:'mediumDate'}}</td> <td>{{security_solution.modified_by}}</td> <td>{{security_solution.modified_date | date:'mediumDate'}}</td> <td> <button type=submit ui-sref=security_solution.detail({id:security_solution.id}) class=\"btn btn-info btn-sm\"> <span class=\"glyphicon glyphicon-eye-open\"></span>&nbsp;<span translate=entity.action.view> View</span> </button> <button type=submit ui-sref=security_solution.edit({id:security_solution.id}) class=\"btn btn-primary btn-sm\"> <span class=\"glyphicon glyphicon-pencil\"></span>&nbsp;<span translate=entity.action.edit> Edit</span> </button> <button type=submit ng-click=delete(security_solution.id) class=\"btn btn-danger btn-sm\"> <span class=\"glyphicon glyphicon-remove-circle\"></span>&nbsp;<span translate=entity.action.delete> Delete</span> </button> </td> </tr> </tbody> </table> <nav> <ul class=pager> <li ng-show=\"links['first'] >= 0\" ng-click=\"loadPage(links['first'])\"><a href=#>&lt;&lt;</a></li> <li ng-show=\"page > 0\" ng-click=\"loadPage(links['prev'] || 0)\"><a href=#>&lt;</a></li> <li ng-show=\"links['next']\" ng-click=\"loadPage(links['next'])\"><a href=#>&gt;</a></li> <li ng-show=\"links['last'] > 0\" ng-click=\"loadPage(links['last'])\"><a href=#>&gt;&gt;</a></li> </ul> </nav> </div> </div>"
  );


  $templateCache.put('scripts/app/entities/server_role/server_role-detail.html',
    "<div> <h2><span translate=dgdtoolApp.server_role.detail.title>Server_role</span> {{server_role.id}}</h2> <div class=table-responsive> <table class=\"table table-striped\"> <thead> <tr> <th translate=entity.detail.field>Field</th> <th translate=entity.detail.value>Value</th> </tr> </thead> <tbody> <tr> <td> <span translate=dgdtoolApp.server_role.server_role_name>Server_role_name</span> </td> <td> <span class=form-control-static>{{server_role.server_role_name}}</span> </td> </tr> <tr> <td> <span translate=dgdtoolApp.server_role.description>Description</span> </td> <td> <span class=form-control-static>{{server_role.description}}</span> </td> </tr> <tr> <td> <span translate=dgdtoolApp.server_role.status_id>Status_id</span> </td> <td> <span class=form-control-static>{{server_role.status_id}}</span> </td> </tr> <tr> <td> <span translate=dgdtoolApp.server_role.created_by>Created_by</span> </td> <td> <span class=form-control-static>{{server_role.created_by}}</span> </td> </tr> <tr> <td> <span translate=dgdtoolApp.server_role.created_date>Created_date</span> </td> <td> <span class=form-control-static>{{server_role.created_date | date:'mediumDate'}}</span> </td> </tr> <tr> <td> <span translate=dgdtoolApp.server_role.modified_by>Modified_by</span> </td> <td> <span class=form-control-static>{{server_role.modified_by}}</span> </td> </tr> <tr> <td> <span translate=dgdtoolApp.server_role.modified_date>Modified_date</span> </td> <td> <span class=form-control-static>{{server_role.modified_date | date:'mediumDate'}}</span> </td> </tr> </tbody> </table> </div> <button type=submit onclick=window.history.back() class=\"btn btn-info\"> <span class=\"glyphicon glyphicon-arrow-left\"></span>&nbsp;<span translate=entity.action.back> Back</span> </button> </div>"
  );


  $templateCache.put('scripts/app/entities/server_role/server_role-dialog.html',
    "<form name=editForm role=form novalidate ng-submit=save() show-validation> <div class=modal-header> <button type=button class=close data-dismiss=modal aria-hidden=true ng-click=clear()>&times;</button> <h4 class=modal-title id=myServer_roleLabel translate=dgdtoolApp.server_role.home.createOrEditLabel>Create or edit a Server_role</h4> </div> <div class=modal-body> <jh-alert-error></jh-alert-error> <div class=form-group> <label for=id translate=global.field.id>ID</label> <input class=form-control id=id name=id ng-model=server_role.id readonly/> </div> <div class=form-group> <label translate=dgdtoolApp.server_role.server_role_name for=field_server_role_name>Server_role_name</label> <input class=form-control name=server_role_name id=field_server_role_name ng-model=server_role.server_role_name required ng-maxlength=\"200\"/> <div ng-show=editForm.server_role_name.$invalid> <p class=help-block ng-show=editForm.server_role_name.$error.required translate=entity.validation.required> This field is required. </p> <p class=help-block ng-show=editForm.server_role_name.$error.maxlength translate=entity.validation.maxlength translate-value-max=200> This field cannot be longer than 200 characters. </p> </div> </div> <div class=form-group> <label translate=dgdtoolApp.server_role.description for=field_description>Description</label> <input class=form-control name=description id=field_description ng-model=server_role.description required ng-maxlength=\"2000\"/> <div ng-show=editForm.description.$invalid> <p class=help-block ng-show=editForm.description.$error.required translate=entity.validation.required> This field is required. </p> <p class=help-block ng-show=editForm.description.$error.maxlength translate=entity.validation.maxlength translate-value-max=2000> This field cannot be longer than 2000 characters. </p> </div> </div> <div class=form-group> <label translate=dgdtoolApp.server_role.status_id for=field_status_id>Status_id</label> <input type=number class=form-control name=status_id id=field_status_id ng-model=server_role.status_id required/> <div ng-show=editForm.status_id.$invalid> <p class=help-block ng-show=editForm.status_id.$error.required translate=entity.validation.required> This field is required. </p> <p class=help-block ng-show=editForm.status_id.$error.number translate=entity.validation.number> This field should be a number. </p> </div> </div> <div class=form-group> <label translate=dgdtoolApp.server_role.created_by for=field_created_by>Created_by</label> <input class=form-control name=created_by id=field_created_by ng-model=server_role.created_by required ng-maxlength=\"200\"/> <div ng-show=editForm.created_by.$invalid> <p class=help-block ng-show=editForm.created_by.$error.required translate=entity.validation.required> This field is required. </p> <p class=help-block ng-show=editForm.created_by.$error.maxlength translate=entity.validation.maxlength translate-value-max=200> This field cannot be longer than 200 characters. </p> </div> </div> <div class=form-group> <label translate=dgdtoolApp.server_role.created_date for=field_created_date>Created_date</label> <input type=date class=form-control name=created_date id=field_created_date ng-model=server_role.created_date required/> <div ng-show=editForm.created_date.$invalid> <p class=help-block ng-show=editForm.created_date.$error.required translate=entity.validation.required> This field is required. </p> </div> </div> <div class=form-group> <label translate=dgdtoolApp.server_role.modified_by for=field_modified_by>Modified_by</label> <input class=form-control name=modified_by id=field_modified_by ng-model=server_role.modified_by required ng-maxlength=\"200\"/> <div ng-show=editForm.modified_by.$invalid> <p class=help-block ng-show=editForm.modified_by.$error.required translate=entity.validation.required> This field is required. </p> <p class=help-block ng-show=editForm.modified_by.$error.maxlength translate=entity.validation.maxlength translate-value-max=200> This field cannot be longer than 200 characters. </p> </div> </div> <div class=form-group> <label translate=dgdtoolApp.server_role.modified_date for=field_modified_date>Modified_date</label> <input type=date class=form-control name=modified_date id=field_modified_date ng-model=server_role.modified_date required/> <div ng-show=editForm.modified_date.$invalid> <p class=help-block ng-show=editForm.modified_date.$error.required translate=entity.validation.required> This field is required. </p> </div> </div> </div> <div class=modal-footer> <button type=button class=\"btn btn-default\" data-dismiss=modal ng-click=clear()> <span class=\"glyphicon glyphicon-ban-circle\"></span>&nbsp;<span translate=entity.action.cancel>Cancel</span> </button> <button type=submit ng-disabled=\"editForm.$invalid || editForm.$submitted\" class=\"btn btn-primary\"> <span class=\"glyphicon glyphicon-save\"></span>&nbsp;<span translate=entity.action.save>Save</span> </button> </div> </form>"
  );


  $templateCache.put('scripts/app/entities/server_role/server_roles.html',
    "<div> <h2 translate=dgdtoolApp.server_role.home.title>Server_roles</h2> <jh-alert></jh-alert> <div class=container> <div class=row> <div class=col-md-4> <button class=\"btn btn-primary\" ui-sref=server_role.new> <span class=\"glyphicon glyphicon-flash\"></span> <span translate=dgdtoolApp.server_role.home.createLabel>Create a new Server_role</span> </button> </div> <div class=col-md-8> <form name=searchForm class=form-inline> <div class=form-group> <input class=form-control ng-model=searchQuery id=searchQuery placeholder=query> </div> <button class=\"btn btn-info\" ng-click=search()><span class=\"glyphicon glyphicon-search\"></span> <span>Search a Server_role</span> </button> </form> </div> </div> </div> <div class=\"modal fade\" id=deleteServer_roleConfirmation> <div class=modal-dialog> <div class=modal-content> <form name=deleteForm ng-submit=confirmDelete(server_role.id)> <div class=modal-header> <button type=button class=close data-dismiss=modal aria-hidden=true ng-click=clear()>&times;</button> <h4 class=modal-title translate=entity.delete.title>Confirm delete operation</h4> </div> <div class=modal-body> <p translate=dgdtoolApp.server_role.delete.question translate-values=\"{id: '{{server_role.id}}'}\">Are you sure you want to delete this Server_role?</p> </div> <div class=modal-footer> <button type=button class=\"btn btn-default\" data-dismiss=modal ng-click=clear()> <span class=\"glyphicon glyphicon-ban-circle\"></span>&nbsp;<span translate=entity.action.cancel>Cancel</span> </button> <button type=submit ng-disabled=deleteForm.$invalid class=\"btn btn-danger\"> <span class=\"glyphicon glyphicon-remove-circle\"></span>&nbsp;<span translate=entity.action.delete>Delete</span> </button> </div> </form> </div> </div> </div> <div class=table-responsive> <table class=\"table table-striped\"> <thead> <tr> <th translate=global.field.id>ID</th> <th translate=dgdtoolApp.server_role.server_role_name>Server_role_name</th> <th translate=dgdtoolApp.server_role.description>Description</th> <th translate=dgdtoolApp.server_role.status_id>Status_id</th> <th translate=dgdtoolApp.server_role.created_by>Created_by</th> <th translate=dgdtoolApp.server_role.created_date>Created_date</th> <th translate=dgdtoolApp.server_role.modified_by>Modified_by</th> <th translate=dgdtoolApp.server_role.modified_date>Modified_date</th> <th></th> </tr> </thead> <tbody> <tr ng-repeat=\"server_role in server_roles track by server_role.id\"> <td><a ui-sref=server_role.detail({id:server_role.id})>{{server_role.id}}</a></td> <td>{{server_role.server_role_name}}</td> <td>{{server_role.description}}</td> <td>{{server_role.status_id}}</td> <td>{{server_role.created_by}}</td> <td>{{server_role.created_date | date:'mediumDate'}}</td> <td>{{server_role.modified_by}}</td> <td>{{server_role.modified_date | date:'mediumDate'}}</td> <td> <button type=submit ui-sref=server_role.detail({id:server_role.id}) class=\"btn btn-info btn-sm\"> <span class=\"glyphicon glyphicon-eye-open\"></span>&nbsp;<span translate=entity.action.view> View</span> </button> <button type=submit ui-sref=server_role.edit({id:server_role.id}) class=\"btn btn-primary btn-sm\"> <span class=\"glyphicon glyphicon-pencil\"></span>&nbsp;<span translate=entity.action.edit> Edit</span> </button> <button type=submit ng-click=delete(server_role.id) class=\"btn btn-danger btn-sm\"> <span class=\"glyphicon glyphicon-remove-circle\"></span>&nbsp;<span translate=entity.action.delete> Delete</span> </button> </td> </tr> </tbody> </table> <nav> <ul class=pager> <li ng-show=\"links['first'] >= 0\" ng-click=\"loadPage(links['first'])\"><a href=#>&lt;&lt;</a></li> <li ng-show=\"page > 0\" ng-click=\"loadPage(links['prev'] || 0)\"><a href=#>&lt;</a></li> <li ng-show=\"links['next']\" ng-click=\"loadPage(links['next'])\"><a href=#>&gt;</a></li> <li ng-show=\"links['last'] > 0\" ng-click=\"loadPage(links['last'])\"><a href=#>&gt;&gt;</a></li> </ul> </nav> </div> </div>"
  );


  $templateCache.put('scripts/app/entities/server_type/server_type-detail.html',
    "<div> <h2><span translate=dgdtoolApp.server_type.detail.title>Server_type</span> {{server_type.id}}</h2> <div class=table-responsive> <table class=\"table table-striped\"> <thead> <tr> <th translate=entity.detail.field>Field</th> <th translate=entity.detail.value>Value</th> </tr> </thead> <tbody> <tr> <td> <span translate=dgdtoolApp.server_type.server_type_name>Server_type_name</span> </td> <td> <span class=form-control-static>{{server_type.server_type_name}}</span> </td> </tr> <tr> <td> <span translate=dgdtoolApp.server_type.description>Description</span> </td> <td> <span class=form-control-static>{{server_type.description}}</span> </td> </tr> <tr> <td> <span translate=dgdtoolApp.server_type.status_id>Status_id</span> </td> <td> <span class=form-control-static>{{server_type.status_id}}</span> </td> </tr> <tr> <td> <span translate=dgdtoolApp.server_type.created_by>Created_by</span> </td> <td> <span class=form-control-static>{{server_type.created_by}}</span> </td> </tr> <tr> <td> <span translate=dgdtoolApp.server_type.created_date>Created_date</span> </td> <td> <span class=form-control-static>{{server_type.created_date | date:'mediumDate'}}</span> </td> </tr> <tr> <td> <span translate=dgdtoolApp.server_type.modified_by>Modified_by</span> </td> <td> <span class=form-control-static>{{server_type.modified_by}}</span> </td> </tr> <tr> <td> <span translate=dgdtoolApp.server_type.modified_date>Modified_date</span> </td> <td> <span class=form-control-static>{{server_type.modified_date | date:'mediumDate'}}</span> </td> </tr> </tbody> </table> </div> <button type=submit onclick=window.history.back() class=\"btn btn-info\"> <span class=\"glyphicon glyphicon-arrow-left\"></span>&nbsp;<span translate=entity.action.back> Back</span> </button> </div>"
  );


  $templateCache.put('scripts/app/entities/server_type/server_type-dialog.html',
    "<form name=editForm role=form novalidate ng-submit=save() show-validation> <div class=modal-header> <button type=button class=close data-dismiss=modal aria-hidden=true ng-click=clear()>&times;</button> <h4 class=modal-title id=myServer_typeLabel translate=dgdtoolApp.server_type.home.createOrEditLabel>Create or edit a Server_type</h4> </div> <div class=modal-body> <jh-alert-error></jh-alert-error> <div class=form-group> <label for=id translate=global.field.id>ID</label> <input class=form-control id=id name=id ng-model=server_type.id readonly/> </div> <div class=form-group> <label translate=dgdtoolApp.server_type.server_type_name for=field_server_type_name>Server_type_name</label> <input class=form-control name=server_type_name id=field_server_type_name ng-model=server_type.server_type_name required ng-maxlength=\"200\"/> <div ng-show=editForm.server_type_name.$invalid> <p class=help-block ng-show=editForm.server_type_name.$error.required translate=entity.validation.required> This field is required. </p> <p class=help-block ng-show=editForm.server_type_name.$error.maxlength translate=entity.validation.maxlength translate-value-max=200> This field cannot be longer than 200 characters. </p> </div> </div> <div class=form-group> <label translate=dgdtoolApp.server_type.description for=field_description>Description</label> <input class=form-control name=description id=field_description ng-model=server_type.description required ng-maxlength=\"2000\"/> <div ng-show=editForm.description.$invalid> <p class=help-block ng-show=editForm.description.$error.required translate=entity.validation.required> This field is required. </p> <p class=help-block ng-show=editForm.description.$error.maxlength translate=entity.validation.maxlength translate-value-max=2000> This field cannot be longer than 2000 characters. </p> </div> </div> <div class=form-group> <label translate=dgdtoolApp.server_type.status_id for=field_status_id>Status_id</label> <input type=number class=form-control name=status_id id=field_status_id ng-model=server_type.status_id required/> <div ng-show=editForm.status_id.$invalid> <p class=help-block ng-show=editForm.status_id.$error.required translate=entity.validation.required> This field is required. </p> <p class=help-block ng-show=editForm.status_id.$error.number translate=entity.validation.number> This field should be a number. </p> </div> </div> <div class=form-group> <label translate=dgdtoolApp.server_type.created_by for=field_created_by>Created_by</label> <input class=form-control name=created_by id=field_created_by ng-model=server_type.created_by required ng-maxlength=\"200\"/> <div ng-show=editForm.created_by.$invalid> <p class=help-block ng-show=editForm.created_by.$error.required translate=entity.validation.required> This field is required. </p> <p class=help-block ng-show=editForm.created_by.$error.maxlength translate=entity.validation.maxlength translate-value-max=200> This field cannot be longer than 200 characters. </p> </div> </div> <div class=form-group> <label translate=dgdtoolApp.server_type.created_date for=field_created_date>Created_date</label> <input type=date class=form-control name=created_date id=field_created_date ng-model=server_type.created_date required/> <div ng-show=editForm.created_date.$invalid> <p class=help-block ng-show=editForm.created_date.$error.required translate=entity.validation.required> This field is required. </p> </div> </div> <div class=form-group> <label translate=dgdtoolApp.server_type.modified_by for=field_modified_by>Modified_by</label> <input class=form-control name=modified_by id=field_modified_by ng-model=server_type.modified_by required ng-maxlength=\"200\"/> <div ng-show=editForm.modified_by.$invalid> <p class=help-block ng-show=editForm.modified_by.$error.required translate=entity.validation.required> This field is required. </p> <p class=help-block ng-show=editForm.modified_by.$error.maxlength translate=entity.validation.maxlength translate-value-max=200> This field cannot be longer than 200 characters. </p> </div> </div> <div class=form-group> <label translate=dgdtoolApp.server_type.modified_date for=field_modified_date>Modified_date</label> <input type=date class=form-control name=modified_date id=field_modified_date ng-model=server_type.modified_date required/> <div ng-show=editForm.modified_date.$invalid> <p class=help-block ng-show=editForm.modified_date.$error.required translate=entity.validation.required> This field is required. </p> </div> </div> </div> <div class=modal-footer> <button type=button class=\"btn btn-default\" data-dismiss=modal ng-click=clear()> <span class=\"glyphicon glyphicon-ban-circle\"></span>&nbsp;<span translate=entity.action.cancel>Cancel</span> </button> <button type=submit ng-disabled=\"editForm.$invalid || editForm.$submitted\" class=\"btn btn-primary\"> <span class=\"glyphicon glyphicon-save\"></span>&nbsp;<span translate=entity.action.save>Save</span> </button> </div> </form>"
  );


  $templateCache.put('scripts/app/entities/server_type/server_types.html',
    "<div> <h2 translate=dgdtoolApp.server_type.home.title>Server_types</h2> <jh-alert></jh-alert> <div class=container> <div class=row> <div class=col-md-4> <button class=\"btn btn-primary\" ui-sref=server_type.new> <span class=\"glyphicon glyphicon-flash\"></span> <span translate=dgdtoolApp.server_type.home.createLabel>Create a new Server_type</span> </button> </div> <div class=col-md-8> <form name=searchForm class=form-inline> <div class=form-group> <input class=form-control ng-model=searchQuery id=searchQuery placeholder=query> </div> <button class=\"btn btn-info\" ng-click=search()><span class=\"glyphicon glyphicon-search\"></span> <span>Search a Server_type</span> </button> </form> </div> </div> </div> <div class=\"modal fade\" id=deleteServer_typeConfirmation> <div class=modal-dialog> <div class=modal-content> <form name=deleteForm ng-submit=confirmDelete(server_type.id)> <div class=modal-header> <button type=button class=close data-dismiss=modal aria-hidden=true ng-click=clear()>&times;</button> <h4 class=modal-title translate=entity.delete.title>Confirm delete operation</h4> </div> <div class=modal-body> <p translate=dgdtoolApp.server_type.delete.question translate-values=\"{id: '{{server_type.id}}'}\">Are you sure you want to delete this Server_type?</p> </div> <div class=modal-footer> <button type=button class=\"btn btn-default\" data-dismiss=modal ng-click=clear()> <span class=\"glyphicon glyphicon-ban-circle\"></span>&nbsp;<span translate=entity.action.cancel>Cancel</span> </button> <button type=submit ng-disabled=deleteForm.$invalid class=\"btn btn-danger\"> <span class=\"glyphicon glyphicon-remove-circle\"></span>&nbsp;<span translate=entity.action.delete>Delete</span> </button> </div> </form> </div> </div> </div> <div class=table-responsive> <table class=\"table table-striped\"> <thead> <tr> <th translate=global.field.id>ID</th> <th translate=dgdtoolApp.server_type.server_type_name>Server_type_name</th> <th translate=dgdtoolApp.server_type.description>Description</th> <th translate=dgdtoolApp.server_type.status_id>Status_id</th> <th translate=dgdtoolApp.server_type.created_by>Created_by</th> <th translate=dgdtoolApp.server_type.created_date>Created_date</th> <th translate=dgdtoolApp.server_type.modified_by>Modified_by</th> <th translate=dgdtoolApp.server_type.modified_date>Modified_date</th> <th></th> </tr> </thead> <tbody> <tr ng-repeat=\"server_type in server_types track by server_type.id\"> <td><a ui-sref=server_type.detail({id:server_type.id})>{{server_type.id}}</a></td> <td>{{server_type.server_type_name}}</td> <td>{{server_type.description}}</td> <td>{{server_type.status_id}}</td> <td>{{server_type.created_by}}</td> <td>{{server_type.created_date | date:'mediumDate'}}</td> <td>{{server_type.modified_by}}</td> <td>{{server_type.modified_date | date:'mediumDate'}}</td> <td> <button type=submit ui-sref=server_type.detail({id:server_type.id}) class=\"btn btn-info btn-sm\"> <span class=\"glyphicon glyphicon-eye-open\"></span>&nbsp;<span translate=entity.action.view> View</span> </button> <button type=submit ui-sref=server_type.edit({id:server_type.id}) class=\"btn btn-primary btn-sm\"> <span class=\"glyphicon glyphicon-pencil\"></span>&nbsp;<span translate=entity.action.edit> Edit</span> </button> <button type=submit ng-click=delete(server_type.id) class=\"btn btn-danger btn-sm\"> <span class=\"glyphicon glyphicon-remove-circle\"></span>&nbsp;<span translate=entity.action.delete> Delete</span> </button> </td> </tr> </tbody> </table> <nav> <ul class=pager> <li ng-show=\"links['first'] >= 0\" ng-click=\"loadPage(links['first'])\"><a href=#>&lt;&lt;</a></li> <li ng-show=\"page > 0\" ng-click=\"loadPage(links['prev'] || 0)\"><a href=#>&lt;</a></li> <li ng-show=\"links['next']\" ng-click=\"loadPage(links['next'])\"><a href=#>&gt;</a></li> <li ng-show=\"links['last'] > 0\" ng-click=\"loadPage(links['last'])\"><a href=#>&gt;&gt;</a></li> </ul> </nav> </div> </div>"
  );


  $templateCache.put('scripts/app/entities/service/service-detail.html',
    "<div> <h2><span translate=dgdtoolApp.service.detail.title>Service</span> {{service.id}}</h2> <div class=table-responsive> <table class=\"table table-striped\"> <thead> <tr> <th translate=entity.detail.field>Field</th> <th translate=entity.detail.value>Value</th> </tr> </thead> <tbody> <tr> <td> <span translate=dgdtoolApp.service.service_name>Service_name</span> </td> <td> <span class=form-control-static>{{service.service_name}}</span> </td> </tr> <tr> <td> <span translate=dgdtoolApp.service.description>Description</span> </td> <td> <span class=form-control-static>{{service.description}}</span> </td> </tr> <tr> <td> <span translate=dgdtoolApp.service.status_id>Status_id</span> </td> <td> <span class=form-control-static>{{service.status_id}}</span> </td> </tr> <tr> <td> <span translate=dgdtoolApp.service.created_by>Created_by</span> </td> <td> <span class=form-control-static>{{service.created_by}}</span> </td> </tr> <tr> <td> <span translate=dgdtoolApp.service.created_date>Created_date</span> </td> <td> <span class=form-control-static>{{service.created_date | date:'mediumDate'}}</span> </td> </tr> <tr> <td> <span translate=dgdtoolApp.service.modified_by>Modified_by</span> </td> <td> <span class=form-control-static>{{service.modified_by}}</span> </td> </tr> <tr> <td> <span translate=dgdtoolApp.service.modified_date>Modified_date</span> </td> <td> <span class=form-control-static>{{service.modified_date | date:'mediumDate'}}</span> </td> </tr> </tbody> </table> </div> <button type=submit onclick=window.history.back() class=\"btn btn-info\"> <span class=\"glyphicon glyphicon-arrow-left\"></span>&nbsp;<span translate=entity.action.back> Back</span> </button> </div>"
  );


  $templateCache.put('scripts/app/entities/service/service-dialog.html',
    "<form name=editForm role=form novalidate ng-submit=save() show-validation> <div class=modal-header> <button type=button class=close data-dismiss=modal aria-hidden=true ng-click=clear()>&times;</button> <h4 class=modal-title id=myServiceLabel translate=dgdtoolApp.service.home.createOrEditLabel>Create or edit a Service</h4> </div> <div class=modal-body> <jh-alert-error></jh-alert-error> <div class=form-group> <label for=id translate=global.field.id>ID</label> <input class=form-control id=id name=id ng-model=service.id readonly/> </div> <div class=form-group> <label translate=dgdtoolApp.service.service_name for=field_service_name>Service_name</label> <input class=form-control name=service_name id=field_service_name ng-model=service.service_name required ng-maxlength=\"200\"/> <div ng-show=editForm.service_name.$invalid> <p class=help-block ng-show=editForm.service_name.$error.required translate=entity.validation.required> This field is required. </p> <p class=help-block ng-show=editForm.service_name.$error.maxlength translate=entity.validation.maxlength translate-value-max=200> This field cannot be longer than 200 characters. </p> </div> </div> <div class=form-group> <label translate=dgdtoolApp.service.description for=field_description>Description</label> <input class=form-control name=description id=field_description ng-model=service.description required ng-maxlength=\"2000\"/> <div ng-show=editForm.description.$invalid> <p class=help-block ng-show=editForm.description.$error.required translate=entity.validation.required> This field is required. </p> <p class=help-block ng-show=editForm.description.$error.maxlength translate=entity.validation.maxlength translate-value-max=2000> This field cannot be longer than 2000 characters. </p> </div> </div> <div class=form-group> <label translate=dgdtoolApp.service.status_id for=field_status_id>Status_id</label> <input type=number class=form-control name=status_id id=field_status_id ng-model=service.status_id required/> <div ng-show=editForm.status_id.$invalid> <p class=help-block ng-show=editForm.status_id.$error.required translate=entity.validation.required> This field is required. </p> <p class=help-block ng-show=editForm.status_id.$error.number translate=entity.validation.number> This field should be a number. </p> </div> </div> <div class=form-group> <label translate=dgdtoolApp.service.created_by for=field_created_by>Created_by</label> <input class=form-control name=created_by id=field_created_by ng-model=service.created_by required ng-maxlength=\"200\"/> <div ng-show=editForm.created_by.$invalid> <p class=help-block ng-show=editForm.created_by.$error.required translate=entity.validation.required> This field is required. </p> <p class=help-block ng-show=editForm.created_by.$error.maxlength translate=entity.validation.maxlength translate-value-max=200> This field cannot be longer than 200 characters. </p> </div> </div> <div class=form-group> <label translate=dgdtoolApp.service.created_date for=field_created_date>Created_date</label> <input type=date class=form-control name=created_date id=field_created_date ng-model=service.created_date required/> <div ng-show=editForm.created_date.$invalid> <p class=help-block ng-show=editForm.created_date.$error.required translate=entity.validation.required> This field is required. </p> </div> </div> <div class=form-group> <label translate=dgdtoolApp.service.modified_by for=field_modified_by>Modified_by</label> <input class=form-control name=modified_by id=field_modified_by ng-model=service.modified_by required ng-maxlength=\"200\"/> <div ng-show=editForm.modified_by.$invalid> <p class=help-block ng-show=editForm.modified_by.$error.required translate=entity.validation.required> This field is required. </p> <p class=help-block ng-show=editForm.modified_by.$error.maxlength translate=entity.validation.maxlength translate-value-max=200> This field cannot be longer than 200 characters. </p> </div> </div> <div class=form-group> <label translate=dgdtoolApp.service.modified_date for=field_modified_date>Modified_date</label> <input type=date class=form-control name=modified_date id=field_modified_date ng-model=service.modified_date required/> <div ng-show=editForm.modified_date.$invalid> <p class=help-block ng-show=editForm.modified_date.$error.required translate=entity.validation.required> This field is required. </p> </div> </div> </div> <div class=modal-footer> <button type=button class=\"btn btn-default\" data-dismiss=modal ng-click=clear()> <span class=\"glyphicon glyphicon-ban-circle\"></span>&nbsp;<span translate=entity.action.cancel>Cancel</span> </button> <button type=submit ng-disabled=\"editForm.$invalid || editForm.$submitted\" class=\"btn btn-primary\"> <span class=\"glyphicon glyphicon-save\"></span>&nbsp;<span translate=entity.action.save>Save</span> </button> </div> </form>"
  );


  $templateCache.put('scripts/app/entities/service/services.html',
    "<div> <h2 translate=dgdtoolApp.service.home.title>Services</h2> <jh-alert></jh-alert> <div class=container> <div class=row> <div class=col-md-4> <button class=\"btn btn-primary\" ui-sref=service.new> <span class=\"glyphicon glyphicon-flash\"></span> <span translate=dgdtoolApp.service.home.createLabel>Create a new Service</span> </button> </div> <div class=col-md-8> <form name=searchForm class=form-inline> <div class=form-group> <input class=form-control ng-model=searchQuery id=searchQuery placeholder=query> </div> <button class=\"btn btn-info\" ng-click=search()><span class=\"glyphicon glyphicon-search\"></span> <span>Search a Service</span> </button> </form> </div> </div> </div> <div class=\"modal fade\" id=deleteServiceConfirmation> <div class=modal-dialog> <div class=modal-content> <form name=deleteForm ng-submit=confirmDelete(service.id)> <div class=modal-header> <button type=button class=close data-dismiss=modal aria-hidden=true ng-click=clear()>&times;</button> <h4 class=modal-title translate=entity.delete.title>Confirm delete operation</h4> </div> <div class=modal-body> <p translate=dgdtoolApp.service.delete.question translate-values=\"{id: '{{service.id}}'}\">Are you sure you want to delete this Service?</p> </div> <div class=modal-footer> <button type=button class=\"btn btn-default\" data-dismiss=modal ng-click=clear()> <span class=\"glyphicon glyphicon-ban-circle\"></span>&nbsp;<span translate=entity.action.cancel>Cancel</span> </button> <button type=submit ng-disabled=deleteForm.$invalid class=\"btn btn-danger\"> <span class=\"glyphicon glyphicon-remove-circle\"></span>&nbsp;<span translate=entity.action.delete>Delete</span> </button> </div> </form> </div> </div> </div> <div class=table-responsive> <table class=\"table table-striped\"> <thead> <tr> <th translate=global.field.id>ID</th> <th translate=dgdtoolApp.service.service_name>Service_name</th> <th translate=dgdtoolApp.service.description>Description</th> <th translate=dgdtoolApp.service.status_id>Status_id</th> <th translate=dgdtoolApp.service.created_by>Created_by</th> <th translate=dgdtoolApp.service.created_date>Created_date</th> <th translate=dgdtoolApp.service.modified_by>Modified_by</th> <th translate=dgdtoolApp.service.modified_date>Modified_date</th> <th></th> </tr> </thead> <tbody> <tr ng-repeat=\"service in services track by service.id\"> <td><a ui-sref=service.detail({id:service.id})>{{service.id}}</a></td> <td>{{service.service_name}}</td> <td>{{service.description}}</td> <td>{{service.status_id}}</td> <td>{{service.created_by}}</td> <td>{{service.created_date | date:'mediumDate'}}</td> <td>{{service.modified_by}}</td> <td>{{service.modified_date | date:'mediumDate'}}</td> <td> <button type=submit ui-sref=service.detail({id:service.id}) class=\"btn btn-info btn-sm\"> <span class=\"glyphicon glyphicon-eye-open\"></span>&nbsp;<span translate=entity.action.view> View</span> </button> <button type=submit ui-sref=service.edit({id:service.id}) class=\"btn btn-primary btn-sm\"> <span class=\"glyphicon glyphicon-pencil\"></span>&nbsp;<span translate=entity.action.edit> Edit</span> </button> <button type=submit ng-click=delete(service.id) class=\"btn btn-danger btn-sm\"> <span class=\"glyphicon glyphicon-remove-circle\"></span>&nbsp;<span translate=entity.action.delete> Delete</span> </button> </td> </tr> </tbody> </table> <nav> <ul class=pager> <li ng-show=\"links['first'] >= 0\" ng-click=\"loadPage(links['first'])\"><a href=#>&lt;&lt;</a></li> <li ng-show=\"page > 0\" ng-click=\"loadPage(links['prev'] || 0)\"><a href=#>&lt;</a></li> <li ng-show=\"links['next']\" ng-click=\"loadPage(links['next'])\"><a href=#>&gt;</a></li> <li ng-show=\"links['last'] > 0\" ng-click=\"loadPage(links['last'])\"><a href=#>&gt;&gt;</a></li> </ul> </nav> </div> </div>"
  );


  $templateCache.put('scripts/app/entities/stage/stage-detail.html',
    "<div> <h2><span translate=dgdtoolApp.stage.detail.title>Stage</span> {{stage.id}}</h2> <div class=table-responsive> <table class=\"table table-striped\"> <thead> <tr> <th translate=entity.detail.field>Field</th> <th translate=entity.detail.value>Value</th> </tr> </thead> <tbody> <tr> <td> <span translate=dgdtoolApp.stage.stage_name>Stage_name</span> </td> <td> <span class=form-control-static>{{stage.stage_name}}</span> </td> </tr> <tr> <td> <span translate=dgdtoolApp.stage.description>Description</span> </td> <td> <span class=form-control-static>{{stage.description}}</span> </td> </tr> <tr> <td> <span translate=dgdtoolApp.stage.status_id>Status_id</span> </td> <td> <span class=form-control-static>{{stage.status_id}}</span> </td> </tr> <tr> <td> <span translate=dgdtoolApp.stage.created_by>Created_by</span> </td> <td> <span class=form-control-static>{{stage.created_by}}</span> </td> </tr> <tr> <td> <span translate=dgdtoolApp.stage.created_date>Created_date</span> </td> <td> <span class=form-control-static>{{stage.created_date | date:'mediumDate'}}</span> </td> </tr> <tr> <td> <span translate=dgdtoolApp.stage.modified_by>Modified_by</span> </td> <td> <span class=form-control-static>{{stage.modified_by}}</span> </td> </tr> <tr> <td> <span translate=dgdtoolApp.stage.modified_date>Modified_date</span> </td> <td> <span class=form-control-static>{{stage.modified_date | date:'mediumDate'}}</span> </td> </tr> </tbody> </table> </div> <button type=submit onclick=window.history.back() class=\"btn btn-info\"> <span class=\"glyphicon glyphicon-arrow-left\"></span>&nbsp;<span translate=entity.action.back> Back</span> </button> </div>"
  );


  $templateCache.put('scripts/app/entities/stage/stage-dialog.html',
    "<form name=editForm role=form novalidate ng-submit=save() show-validation> <div class=modal-header> <button type=button class=close data-dismiss=modal aria-hidden=true ng-click=clear()>&times;</button> <h4 class=modal-title id=myStageLabel translate=dgdtoolApp.stage.home.createOrEditLabel>Create or edit a Stage</h4> </div> <div class=modal-body> <jh-alert-error></jh-alert-error> <div class=form-group> <label for=id translate=global.field.id>ID</label> <input class=form-control id=id name=id ng-model=stage.id readonly/> </div> <div class=form-group> <label translate=dgdtoolApp.stage.stage_name for=field_stage_name>Stage_name</label> <input class=form-control name=stage_name id=field_stage_name ng-model=stage.stage_name required ng-maxlength=\"200\"/> <div ng-show=editForm.stage_name.$invalid> <p class=help-block ng-show=editForm.stage_name.$error.required translate=entity.validation.required> This field is required. </p> <p class=help-block ng-show=editForm.stage_name.$error.maxlength translate=entity.validation.maxlength translate-value-max=200> This field cannot be longer than 200 characters. </p> </div> </div> <div class=form-group> <label translate=dgdtoolApp.stage.description for=field_description>Description</label> <input class=form-control name=description id=field_description ng-model=stage.description required ng-maxlength=\"2000\"/> <div ng-show=editForm.description.$invalid> <p class=help-block ng-show=editForm.description.$error.required translate=entity.validation.required> This field is required. </p> <p class=help-block ng-show=editForm.description.$error.maxlength translate=entity.validation.maxlength translate-value-max=2000> This field cannot be longer than 2000 characters. </p> </div> </div> <div class=form-group> <label translate=dgdtoolApp.stage.status_id for=field_status_id>Status_id</label> <input type=number class=form-control name=status_id id=field_status_id ng-model=stage.status_id required/> <div ng-show=editForm.status_id.$invalid> <p class=help-block ng-show=editForm.status_id.$error.required translate=entity.validation.required> This field is required. </p> <p class=help-block ng-show=editForm.status_id.$error.number translate=entity.validation.number> This field should be a number. </p> </div> </div> <div class=form-group> <label translate=dgdtoolApp.stage.created_by for=field_created_by>Created_by</label> <input class=form-control name=created_by id=field_created_by ng-model=stage.created_by required ng-maxlength=\"200\"/> <div ng-show=editForm.created_by.$invalid> <p class=help-block ng-show=editForm.created_by.$error.required translate=entity.validation.required> This field is required. </p> <p class=help-block ng-show=editForm.created_by.$error.maxlength translate=entity.validation.maxlength translate-value-max=200> This field cannot be longer than 200 characters. </p> </div> </div> <div class=form-group> <label translate=dgdtoolApp.stage.created_date for=field_created_date>Created_date</label> <input type=date class=form-control name=created_date id=field_created_date ng-model=stage.created_date required/> <div ng-show=editForm.created_date.$invalid> <p class=help-block ng-show=editForm.created_date.$error.required translate=entity.validation.required> This field is required. </p> </div> </div> <div class=form-group> <label translate=dgdtoolApp.stage.modified_by for=field_modified_by>Modified_by</label> <input class=form-control name=modified_by id=field_modified_by ng-model=stage.modified_by required ng-maxlength=\"200\"/> <div ng-show=editForm.modified_by.$invalid> <p class=help-block ng-show=editForm.modified_by.$error.required translate=entity.validation.required> This field is required. </p> <p class=help-block ng-show=editForm.modified_by.$error.maxlength translate=entity.validation.maxlength translate-value-max=200> This field cannot be longer than 200 characters. </p> </div> </div> <div class=form-group> <label translate=dgdtoolApp.stage.modified_date for=field_modified_date>Modified_date</label> <input type=date class=form-control name=modified_date id=field_modified_date ng-model=stage.modified_date required/> <div ng-show=editForm.modified_date.$invalid> <p class=help-block ng-show=editForm.modified_date.$error.required translate=entity.validation.required> This field is required. </p> </div> </div> </div> <div class=modal-footer> <button type=button class=\"btn btn-default\" data-dismiss=modal ng-click=clear()> <span class=\"glyphicon glyphicon-ban-circle\"></span>&nbsp;<span translate=entity.action.cancel>Cancel</span> </button> <button type=submit ng-disabled=\"editForm.$invalid || editForm.$submitted\" class=\"btn btn-primary\"> <span class=\"glyphicon glyphicon-save\"></span>&nbsp;<span translate=entity.action.save>Save</span> </button> </div> </form>"
  );


  $templateCache.put('scripts/app/entities/stage/stages.html',
    "<div> <h2 translate=dgdtoolApp.stage.home.title>Stages</h2> <jh-alert></jh-alert> <div class=container> <div class=row> <div class=col-md-4> <button class=\"btn btn-primary\" ui-sref=stage.new> <span class=\"glyphicon glyphicon-flash\"></span> <span translate=dgdtoolApp.stage.home.createLabel>Create a new Stage</span> </button> </div> <div class=col-md-8> <form name=searchForm class=form-inline> <div class=form-group> <input class=form-control ng-model=searchQuery id=searchQuery placeholder=query> </div> <button class=\"btn btn-info\" ng-click=search()><span class=\"glyphicon glyphicon-search\"></span> <span>Search a Stage</span> </button> </form> </div> </div> </div> <div class=\"modal fade\" id=deleteStageConfirmation> <div class=modal-dialog> <div class=modal-content> <form name=deleteForm ng-submit=confirmDelete(stage.id)> <div class=modal-header> <button type=button class=close data-dismiss=modal aria-hidden=true ng-click=clear()>&times;</button> <h4 class=modal-title translate=entity.delete.title>Confirm delete operation</h4> </div> <div class=modal-body> <p translate=dgdtoolApp.stage.delete.question translate-values=\"{id: '{{stage.id}}'}\">Are you sure you want to delete this Stage?</p> </div> <div class=modal-footer> <button type=button class=\"btn btn-default\" data-dismiss=modal ng-click=clear()> <span class=\"glyphicon glyphicon-ban-circle\"></span>&nbsp;<span translate=entity.action.cancel>Cancel</span> </button> <button type=submit ng-disabled=deleteForm.$invalid class=\"btn btn-danger\"> <span class=\"glyphicon glyphicon-remove-circle\"></span>&nbsp;<span translate=entity.action.delete>Delete</span> </button> </div> </form> </div> </div> </div> <div class=table-responsive> <table class=\"table table-striped\"> <thead> <tr> <th translate=global.field.id>ID</th> <th translate=dgdtoolApp.stage.stage_name>Stage_name</th> <th translate=dgdtoolApp.stage.description>Description</th> <th translate=dgdtoolApp.stage.status_id>Status_id</th> <th translate=dgdtoolApp.stage.created_by>Created_by</th> <th translate=dgdtoolApp.stage.created_date>Created_date</th> <th translate=dgdtoolApp.stage.modified_by>Modified_by</th> <th translate=dgdtoolApp.stage.modified_date>Modified_date</th> <th></th> </tr> </thead> <tbody> <tr ng-repeat=\"stage in stages track by stage.id\"> <td><a ui-sref=stage.detail({id:stage.id})>{{stage.id}}</a></td> <td>{{stage.stage_name}}</td> <td>{{stage.description}}</td> <td>{{stage.status_id}}</td> <td>{{stage.created_by}}</td> <td>{{stage.created_date | date:'mediumDate'}}</td> <td>{{stage.modified_by}}</td> <td>{{stage.modified_date | date:'mediumDate'}}</td> <td> <button type=submit ui-sref=stage.detail({id:stage.id}) class=\"btn btn-info btn-sm\"> <span class=\"glyphicon glyphicon-eye-open\"></span>&nbsp;<span translate=entity.action.view> View</span> </button> <button type=submit ui-sref=stage.edit({id:stage.id}) class=\"btn btn-primary btn-sm\"> <span class=\"glyphicon glyphicon-pencil\"></span>&nbsp;<span translate=entity.action.edit> Edit</span> </button> <button type=submit ng-click=delete(stage.id) class=\"btn btn-danger btn-sm\"> <span class=\"glyphicon glyphicon-remove-circle\"></span>&nbsp;<span translate=entity.action.delete> Delete</span> </button> </td> </tr> </tbody> </table> <nav> <ul class=pager> <li ng-show=\"links['first'] >= 0\" ng-click=\"loadPage(links['first'])\"><a href=#>&lt;&lt;</a></li> <li ng-show=\"page > 0\" ng-click=\"loadPage(links['prev'] || 0)\"><a href=#>&lt;</a></li> <li ng-show=\"links['next']\" ng-click=\"loadPage(links['next'])\"><a href=#>&gt;</a></li> <li ng-show=\"links['last'] > 0\" ng-click=\"loadPage(links['last'])\"><a href=#>&gt;&gt;</a></li> </ul> </nav> </div> </div>"
  );


  $templateCache.put('scripts/app/entities/status_type/status_type-detail.html',
    "<div> <h2><span translate=dgdtoolApp.status_type.detail.title>Status_type</span> {{status_type.id}}</h2> <div class=table-responsive> <table class=\"table table-striped\"> <thead> <tr> <th translate=entity.detail.field>Field</th> <th translate=entity.detail.value>Value</th> </tr> </thead> <tbody> <tr> <td> <span translate=dgdtoolApp.status_type.status_type_name>Status_type_name</span> </td> <td> <span class=form-control-static>{{status_type.status_type_name}}</span> </td> </tr> <tr> <td> <span translate=dgdtoolApp.status_type.description>Description</span> </td> <td> <span class=form-control-static>{{status_type.description}}</span> </td> </tr> <tr> <td> <span translate=dgdtoolApp.status_type.created_by>Created_by</span> </td> <td> <span class=form-control-static>{{status_type.created_by}}</span> </td> </tr> <tr> <td> <span translate=dgdtoolApp.status_type.created_date>Created_date</span> </td> <td> <span class=form-control-static>{{status_type.created_date | date:'mediumDate'}}</span> </td> </tr> <tr> <td> <span translate=dgdtoolApp.status_type.modified_by>Modified_by</span> </td> <td> <span class=form-control-static>{{status_type.modified_by}}</span> </td> </tr> <tr> <td> <span translate=dgdtoolApp.status_type.modified_date>Modified_date</span> </td> <td> <span class=form-control-static>{{status_type.modified_date | date:'mediumDate'}}</span> </td> </tr> </tbody> </table> </div> <button type=submit onclick=window.history.back() class=\"btn btn-info\"> <span class=\"glyphicon glyphicon-arrow-left\"></span>&nbsp;<span translate=entity.action.back> Back</span> </button> </div>"
  );


  $templateCache.put('scripts/app/entities/status_type/status_type-dialog.html',
    "<form name=editForm role=form novalidate ng-submit=save() show-validation> <div class=modal-header> <button type=button class=close data-dismiss=modal aria-hidden=true ng-click=clear()>&times;</button> <h4 class=modal-title id=myStatus_typeLabel translate=dgdtoolApp.status_type.home.createOrEditLabel>Create or edit a Status_type</h4> </div> <div class=modal-body> <jh-alert-error></jh-alert-error> <div class=form-group> <label for=id translate=global.field.id>ID</label> <input class=form-control id=id name=id ng-model=status_type.id readonly/> </div> <div class=form-group> <label translate=dgdtoolApp.status_type.status_type_name for=field_status_type_name>Status_type_name</label> <input class=form-control name=status_type_name id=field_status_type_name ng-model=status_type.status_type_name required ng-maxlength=\"50\"/> <div ng-show=editForm.status_type_name.$invalid> <p class=help-block ng-show=editForm.status_type_name.$error.required translate=entity.validation.required> This field is required. </p> <p class=help-block ng-show=editForm.status_type_name.$error.maxlength translate=entity.validation.maxlength translate-value-max=50> This field cannot be longer than 50 characters. </p> </div> </div> <div class=form-group> <label translate=dgdtoolApp.status_type.description for=field_description>Description</label> <input class=form-control name=description id=field_description ng-model=status_type.description required ng-maxlength=\"2000\"/> <div ng-show=editForm.description.$invalid> <p class=help-block ng-show=editForm.description.$error.required translate=entity.validation.required> This field is required. </p> <p class=help-block ng-show=editForm.description.$error.maxlength translate=entity.validation.maxlength translate-value-max=2000> This field cannot be longer than 2000 characters. </p> </div> </div> <div class=form-group> <label translate=dgdtoolApp.status_type.created_by for=field_created_by>Created_by</label> <input class=form-control name=created_by id=field_created_by ng-model=status_type.created_by required ng-maxlength=\"200\"/> <div ng-show=editForm.created_by.$invalid> <p class=help-block ng-show=editForm.created_by.$error.required translate=entity.validation.required> This field is required. </p> <p class=help-block ng-show=editForm.created_by.$error.maxlength translate=entity.validation.maxlength translate-value-max=200> This field cannot be longer than 200 characters. </p> </div> </div> <div class=form-group> <label translate=dgdtoolApp.status_type.created_date for=field_created_date>Created_date</label> <input type=date class=form-control name=created_date id=field_created_date ng-model=status_type.created_date required/> <div ng-show=editForm.created_date.$invalid> <p class=help-block ng-show=editForm.created_date.$error.required translate=entity.validation.required> This field is required. </p> </div> </div> <div class=form-group> <label translate=dgdtoolApp.status_type.modified_by for=field_modified_by>Modified_by</label> <input class=form-control name=modified_by id=field_modified_by ng-model=status_type.modified_by required ng-maxlength=\"200\"/> <div ng-show=editForm.modified_by.$invalid> <p class=help-block ng-show=editForm.modified_by.$error.required translate=entity.validation.required> This field is required. </p> <p class=help-block ng-show=editForm.modified_by.$error.maxlength translate=entity.validation.maxlength translate-value-max=200> This field cannot be longer than 200 characters. </p> </div> </div> <div class=form-group> <label translate=dgdtoolApp.status_type.modified_date for=field_modified_date>Modified_date</label> <input type=date class=form-control name=modified_date id=field_modified_date ng-model=status_type.modified_date required/> <div ng-show=editForm.modified_date.$invalid> <p class=help-block ng-show=editForm.modified_date.$error.required translate=entity.validation.required> This field is required. </p> </div> </div> </div> <div class=modal-footer> <button type=button class=\"btn btn-default\" data-dismiss=modal ng-click=clear()> <span class=\"glyphicon glyphicon-ban-circle\"></span>&nbsp;<span translate=entity.action.cancel>Cancel</span> </button> <button type=submit ng-disabled=\"editForm.$invalid || editForm.$submitted\" class=\"btn btn-primary\"> <span class=\"glyphicon glyphicon-save\"></span>&nbsp;<span translate=entity.action.save>Save</span> </button> </div> </form>"
  );


  $templateCache.put('scripts/app/entities/status_type/status_types.html',
    "<div> <h2 translate=dgdtoolApp.status_type.home.title>Status_types</h2> <jh-alert></jh-alert> <div class=container> <div class=row> <div class=col-md-4> <button class=\"btn btn-primary\" ui-sref=status_type.new> <span class=\"glyphicon glyphicon-flash\"></span> <span translate=dgdtoolApp.status_type.home.createLabel>Create a new Status_type</span> </button> </div> <div class=col-md-8> <form name=searchForm class=form-inline> <div class=form-group> <input class=form-control ng-model=searchQuery id=searchQuery placeholder=query> </div> <button class=\"btn btn-info\" ng-click=search()><span class=\"glyphicon glyphicon-search\"></span> <span>Search a Status_type</span> </button> </form> </div> </div> </div> <div class=\"modal fade\" id=deleteStatus_typeConfirmation> <div class=modal-dialog> <div class=modal-content> <form name=deleteForm ng-submit=confirmDelete(status_type.id)> <div class=modal-header> <button type=button class=close data-dismiss=modal aria-hidden=true ng-click=clear()>&times;</button> <h4 class=modal-title translate=entity.delete.title>Confirm delete operation</h4> </div> <div class=modal-body> <p translate=dgdtoolApp.status_type.delete.question translate-values=\"{id: '{{status_type.id}}'}\">Are you sure you want to delete this Status_type?</p> </div> <div class=modal-footer> <button type=button class=\"btn btn-default\" data-dismiss=modal ng-click=clear()> <span class=\"glyphicon glyphicon-ban-circle\"></span>&nbsp;<span translate=entity.action.cancel>Cancel</span> </button> <button type=submit ng-disabled=deleteForm.$invalid class=\"btn btn-danger\"> <span class=\"glyphicon glyphicon-remove-circle\"></span>&nbsp;<span translate=entity.action.delete>Delete</span> </button> </div> </form> </div> </div> </div> <div class=table-responsive> <table class=\"table table-striped\"> <thead> <tr> <th translate=global.field.id>ID</th> <th translate=dgdtoolApp.status_type.status_type_name>Status_type_name</th> <th translate=dgdtoolApp.status_type.description>Description</th> <th translate=dgdtoolApp.status_type.created_by>Created_by</th> <th translate=dgdtoolApp.status_type.created_date>Created_date</th> <th translate=dgdtoolApp.status_type.modified_by>Modified_by</th> <th translate=dgdtoolApp.status_type.modified_date>Modified_date</th> <th></th> </tr> </thead> <tbody> <tr ng-repeat=\"status_type in status_types track by status_type.id\"> <td><a ui-sref=status_type.detail({id:status_type.id})>{{status_type.id}}</a></td> <td>{{status_type.status_type_name}}</td> <td>{{status_type.description}}</td> <td>{{status_type.created_by}}</td> <td>{{status_type.created_date | date:'mediumDate'}}</td> <td>{{status_type.modified_by}}</td> <td>{{status_type.modified_date | date:'mediumDate'}}</td> <td> <button type=submit ui-sref=status_type.detail({id:status_type.id}) class=\"btn btn-info btn-sm\"> <span class=\"glyphicon glyphicon-eye-open\"></span>&nbsp;<span translate=entity.action.view> View</span> </button> <button type=submit ui-sref=status_type.edit({id:status_type.id}) class=\"btn btn-primary btn-sm\"> <span class=\"glyphicon glyphicon-pencil\"></span>&nbsp;<span translate=entity.action.edit> Edit</span> </button> <button type=submit ng-click=delete(status_type.id) class=\"btn btn-danger btn-sm\"> <span class=\"glyphicon glyphicon-remove-circle\"></span>&nbsp;<span translate=entity.action.delete> Delete</span> </button> </td> </tr> </tbody> </table> <nav> <ul class=pager> <li ng-show=\"links['first'] >= 0\" ng-click=\"loadPage(links['first'])\"><a href=#>&lt;&lt;</a></li> <li ng-show=\"page > 0\" ng-click=\"loadPage(links['prev'] || 0)\"><a href=#>&lt;</a></li> <li ng-show=\"links['next']\" ng-click=\"loadPage(links['next'])\"><a href=#>&gt;</a></li> <li ng-show=\"links['last'] > 0\" ng-click=\"loadPage(links['last'])\"><a href=#>&gt;&gt;</a></li> </ul> </nav> </div> </div>"
  );


  $templateCache.put('scripts/app/entities/statuses/statuses-detail.html',
    "<div> <h2><span translate=dgdtoolApp.statuses.detail.title>Statuses</span> {{statuses.id}}</h2> <div class=table-responsive> <table class=\"table table-striped\"> <thead> <tr> <th translate=entity.detail.field>Field</th> <th translate=entity.detail.value>Value</th> </tr> </thead> <tbody> <tr> <td> <span translate=dgdtoolApp.statuses.status_type_id>Status_type_id</span> </td> <td> <span class=form-control-static>{{statuses.status_type_id}}</span> </td> </tr> <tr> <td> <span translate=dgdtoolApp.statuses.status_name>Status_name</span> </td> <td> <span class=form-control-static>{{statuses.status_name}}</span> </td> </tr> <tr> <td> <span translate=dgdtoolApp.statuses.description>Description</span> </td> <td> <span class=form-control-static>{{statuses.description}}</span> </td> </tr> <tr> <td> <span translate=dgdtoolApp.statuses.status_id>Status_id</span> </td> <td> <span class=form-control-static>{{statuses.status_id}}</span> </td> </tr> <tr> <td> <span translate=dgdtoolApp.statuses.created_by>Created_by</span> </td> <td> <span class=form-control-static>{{statuses.created_by}}</span> </td> </tr> <tr> <td> <span translate=dgdtoolApp.statuses.created_date>Created_date</span> </td> <td> <span class=form-control-static>{{statuses.created_date | date:'mediumDate'}}</span> </td> </tr> <tr> <td> <span translate=dgdtoolApp.statuses.modified_by>Modified_by</span> </td> <td> <span class=form-control-static>{{statuses.modified_by}}</span> </td> </tr> <tr> <td> <span translate=dgdtoolApp.statuses.modified_date>Modified_date</span> </td> <td> <span class=form-control-static>{{statuses.modified_date | date:'mediumDate'}}</span> </td> </tr> </tbody> </table> </div> <button type=submit onclick=window.history.back() class=\"btn btn-info\"> <span class=\"glyphicon glyphicon-arrow-left\"></span>&nbsp;<span translate=entity.action.back> Back</span> </button> </div>"
  );


  $templateCache.put('scripts/app/entities/statuses/statuses-dialog.html',
    "<form name=editForm role=form novalidate ng-submit=save() show-validation> <div class=modal-header> <button type=button class=close data-dismiss=modal aria-hidden=true ng-click=clear()>&times;</button> <h4 class=modal-title id=myStatusesLabel translate=dgdtoolApp.statuses.home.createOrEditLabel>Create or edit a Statuses</h4> </div> <div class=modal-body> <jh-alert-error></jh-alert-error> <div class=form-group> <label for=id translate=global.field.id>ID</label> <input class=form-control id=id name=id ng-model=statuses.id readonly/> </div> <div class=form-group> <label translate=dgdtoolApp.statuses.status_type_id for=field_status_type_id>Status_type_id</label> <input type=number class=form-control name=status_type_id id=field_status_type_id ng-model=statuses.status_type_id required/> <div ng-show=editForm.status_type_id.$invalid> <p class=help-block ng-show=editForm.status_type_id.$error.required translate=entity.validation.required> This field is required. </p> <p class=help-block ng-show=editForm.status_type_id.$error.number translate=entity.validation.number> This field should be a number. </p> </div> </div> <div class=form-group> <label translate=dgdtoolApp.statuses.status_name for=field_status_name>Status_name</label> <input class=form-control name=status_name id=field_status_name ng-model=statuses.status_name required ng-maxlength=\"200\"/> <div ng-show=editForm.status_name.$invalid> <p class=help-block ng-show=editForm.status_name.$error.required translate=entity.validation.required> This field is required. </p> <p class=help-block ng-show=editForm.status_name.$error.maxlength translate=entity.validation.maxlength translate-value-max=200> This field cannot be longer than 200 characters. </p> </div> </div> <div class=form-group> <label translate=dgdtoolApp.statuses.description for=field_description>Description</label> <input class=form-control name=description id=field_description ng-model=statuses.description required ng-maxlength=\"2000\"/> <div ng-show=editForm.description.$invalid> <p class=help-block ng-show=editForm.description.$error.required translate=entity.validation.required> This field is required. </p> <p class=help-block ng-show=editForm.description.$error.maxlength translate=entity.validation.maxlength translate-value-max=2000> This field cannot be longer than 2000 characters. </p> </div> </div> <div class=form-group> <label translate=dgdtoolApp.statuses.status_id for=field_status_id>Status_id</label> <input type=number class=form-control name=status_id id=field_status_id ng-model=statuses.status_id required/> <div ng-show=editForm.status_id.$invalid> <p class=help-block ng-show=editForm.status_id.$error.required translate=entity.validation.required> This field is required. </p> <p class=help-block ng-show=editForm.status_id.$error.number translate=entity.validation.number> This field should be a number. </p> </div> </div> <div class=form-group> <label translate=dgdtoolApp.statuses.created_by for=field_created_by>Created_by</label> <input class=form-control name=created_by id=field_created_by ng-model=statuses.created_by required ng-maxlength=\"200\"/> <div ng-show=editForm.created_by.$invalid> <p class=help-block ng-show=editForm.created_by.$error.required translate=entity.validation.required> This field is required. </p> <p class=help-block ng-show=editForm.created_by.$error.maxlength translate=entity.validation.maxlength translate-value-max=200> This field cannot be longer than 200 characters. </p> </div> </div> <div class=form-group> <label translate=dgdtoolApp.statuses.created_date for=field_created_date>Created_date</label> <input type=date class=form-control name=created_date id=field_created_date ng-model=statuses.created_date required/> <div ng-show=editForm.created_date.$invalid> <p class=help-block ng-show=editForm.created_date.$error.required translate=entity.validation.required> This field is required. </p> </div> </div> <div class=form-group> <label translate=dgdtoolApp.statuses.modified_by for=field_modified_by>Modified_by</label> <input class=form-control name=modified_by id=field_modified_by ng-model=statuses.modified_by required ng-maxlength=\"200\"/> <div ng-show=editForm.modified_by.$invalid> <p class=help-block ng-show=editForm.modified_by.$error.required translate=entity.validation.required> This field is required. </p> <p class=help-block ng-show=editForm.modified_by.$error.maxlength translate=entity.validation.maxlength translate-value-max=200> This field cannot be longer than 200 characters. </p> </div> </div> <div class=form-group> <label translate=dgdtoolApp.statuses.modified_date for=field_modified_date>Modified_date</label> <input type=date class=form-control name=modified_date id=field_modified_date ng-model=statuses.modified_date required/> <div ng-show=editForm.modified_date.$invalid> <p class=help-block ng-show=editForm.modified_date.$error.required translate=entity.validation.required> This field is required. </p> </div> </div> </div> <div class=modal-footer> <button type=button class=\"btn btn-default\" data-dismiss=modal ng-click=clear()> <span class=\"glyphicon glyphicon-ban-circle\"></span>&nbsp;<span translate=entity.action.cancel>Cancel</span> </button> <button type=submit ng-disabled=\"editForm.$invalid || editForm.$submitted\" class=\"btn btn-primary\"> <span class=\"glyphicon glyphicon-save\"></span>&nbsp;<span translate=entity.action.save>Save</span> </button> </div> </form>"
  );


  $templateCache.put('scripts/app/entities/statuses/statusess.html',
    "<div> <h2 translate=dgdtoolApp.statuses.home.title>Statusess</h2> <jh-alert></jh-alert> <div class=container> <div class=row> <div class=col-md-4> <button class=\"btn btn-primary\" ui-sref=statuses.new> <span class=\"glyphicon glyphicon-flash\"></span> <span translate=dgdtoolApp.statuses.home.createLabel>Create a new Statuses</span> </button> </div> <div class=col-md-8> <form name=searchForm class=form-inline> <div class=form-group> <input class=form-control ng-model=searchQuery id=searchQuery placeholder=query> </div> <button class=\"btn btn-info\" ng-click=search()><span class=\"glyphicon glyphicon-search\"></span> <span>Search a Statuses</span> </button> </form> </div> </div> </div> <div class=\"modal fade\" id=deleteStatusesConfirmation> <div class=modal-dialog> <div class=modal-content> <form name=deleteForm ng-submit=confirmDelete(statuses.id)> <div class=modal-header> <button type=button class=close data-dismiss=modal aria-hidden=true ng-click=clear()>&times;</button> <h4 class=modal-title translate=entity.delete.title>Confirm delete operation</h4> </div> <div class=modal-body> <p translate=dgdtoolApp.statuses.delete.question translate-values=\"{id: '{{statuses.id}}'}\">Are you sure you want to delete this Statuses?</p> </div> <div class=modal-footer> <button type=button class=\"btn btn-default\" data-dismiss=modal ng-click=clear()> <span class=\"glyphicon glyphicon-ban-circle\"></span>&nbsp;<span translate=entity.action.cancel>Cancel</span> </button> <button type=submit ng-disabled=deleteForm.$invalid class=\"btn btn-danger\"> <span class=\"glyphicon glyphicon-remove-circle\"></span>&nbsp;<span translate=entity.action.delete>Delete</span> </button> </div> </form> </div> </div> </div> <div class=table-responsive> <table class=\"table table-striped\"> <thead> <tr> <th translate=global.field.id>ID</th> <th translate=dgdtoolApp.statuses.status_type_id>Status_type_id</th> <th translate=dgdtoolApp.statuses.status_name>Status_name</th> <th translate=dgdtoolApp.statuses.description>Description</th> <th translate=dgdtoolApp.statuses.status_id>Status_id</th> <th translate=dgdtoolApp.statuses.created_by>Created_by</th> <th translate=dgdtoolApp.statuses.created_date>Created_date</th> <th translate=dgdtoolApp.statuses.modified_by>Modified_by</th> <th translate=dgdtoolApp.statuses.modified_date>Modified_date</th> <th></th> </tr> </thead> <tbody> <tr ng-repeat=\"statuses in statusess track by statuses.id\"> <td><a ui-sref=statuses.detail({id:statuses.id})>{{statuses.id}}</a></td> <td>{{statuses.status_type_id}}</td> <td>{{statuses.status_name}}</td> <td>{{statuses.description}}</td> <td>{{statuses.status_id}}</td> <td>{{statuses.created_by}}</td> <td>{{statuses.created_date | date:'mediumDate'}}</td> <td>{{statuses.modified_by}}</td> <td>{{statuses.modified_date | date:'mediumDate'}}</td> <td> <button type=submit ui-sref=statuses.detail({id:statuses.id}) class=\"btn btn-info btn-sm\"> <span class=\"glyphicon glyphicon-eye-open\"></span>&nbsp;<span translate=entity.action.view> View</span> </button> <button type=submit ui-sref=statuses.edit({id:statuses.id}) class=\"btn btn-primary btn-sm\"> <span class=\"glyphicon glyphicon-pencil\"></span>&nbsp;<span translate=entity.action.edit> Edit</span> </button> <button type=submit ng-click=delete(statuses.id) class=\"btn btn-danger btn-sm\"> <span class=\"glyphicon glyphicon-remove-circle\"></span>&nbsp;<span translate=entity.action.delete> Delete</span> </button> </td> </tr> </tbody> </table> <nav> <ul class=pager> <li ng-show=\"links['first'] >= 0\" ng-click=\"loadPage(links['first'])\"><a href=#>&lt;&lt;</a></li> <li ng-show=\"page > 0\" ng-click=\"loadPage(links['prev'] || 0)\"><a href=#>&lt;</a></li> <li ng-show=\"links['next']\" ng-click=\"loadPage(links['next'])\"><a href=#>&gt;</a></li> <li ng-show=\"links['last'] > 0\" ng-click=\"loadPage(links['last'])\"><a href=#>&gt;&gt;</a></li> </ul> </nav> </div> </div>"
  );


  $templateCache.put('scripts/app/entities/support_level/support_level-detail.html',
    "<div> <h2><span translate=dgdtoolApp.support_level.detail.title>Support_level</span> {{support_level.id}}</h2> <div class=table-responsive> <table class=\"table table-striped\"> <thead> <tr> <th translate=entity.detail.field>Field</th> <th translate=entity.detail.value>Value</th> </tr> </thead> <tbody> <tr> <td> <span translate=dgdtoolApp.support_level.support_level_name>Support_level_name</span> </td> <td> <span class=form-control-static>{{support_level.support_level_name}}</span> </td> </tr> <tr> <td> <span translate=dgdtoolApp.support_level.description>Description</span> </td> <td> <span class=form-control-static>{{support_level.description}}</span> </td> </tr> <tr> <td> <span translate=dgdtoolApp.support_level.status_id>Status_id</span> </td> <td> <span class=form-control-static>{{support_level.status_id}}</span> </td> </tr> <tr> <td> <span translate=dgdtoolApp.support_level.created_by>Created_by</span> </td> <td> <span class=form-control-static>{{support_level.created_by}}</span> </td> </tr> <tr> <td> <span translate=dgdtoolApp.support_level.created_date>Created_date</span> </td> <td> <span class=form-control-static>{{support_level.created_date | date:'mediumDate'}}</span> </td> </tr> <tr> <td> <span translate=dgdtoolApp.support_level.modified_by>Modified_by</span> </td> <td> <span class=form-control-static>{{support_level.modified_by}}</span> </td> </tr> <tr> <td> <span translate=dgdtoolApp.support_level.modified_date>Modified_date</span> </td> <td> <span class=form-control-static>{{support_level.modified_date | date:'mediumDate'}}</span> </td> </tr> </tbody> </table> </div> <button type=submit onclick=window.history.back() class=\"btn btn-info\"> <span class=\"glyphicon glyphicon-arrow-left\"></span>&nbsp;<span translate=entity.action.back> Back</span> </button> </div>"
  );


  $templateCache.put('scripts/app/entities/support_level/support_level-dialog.html',
    "<form name=editForm role=form novalidate ng-submit=save() show-validation> <div class=modal-header> <button type=button class=close data-dismiss=modal aria-hidden=true ng-click=clear()>&times;</button> <h4 class=modal-title id=mySupport_levelLabel translate=dgdtoolApp.support_level.home.createOrEditLabel>Create or edit a Support_level</h4> </div> <div class=modal-body> <jh-alert-error></jh-alert-error> <div class=form-group> <label for=id translate=global.field.id>ID</label> <input class=form-control id=id name=id ng-model=support_level.id readonly/> </div> <div class=form-group> <label translate=dgdtoolApp.support_level.support_level_name for=field_support_level_name>Support_level_name</label> <input class=form-control name=support_level_name id=field_support_level_name ng-model=support_level.support_level_name required ng-maxlength=\"200\"/> <div ng-show=editForm.support_level_name.$invalid> <p class=help-block ng-show=editForm.support_level_name.$error.required translate=entity.validation.required> This field is required. </p> <p class=help-block ng-show=editForm.support_level_name.$error.maxlength translate=entity.validation.maxlength translate-value-max=200> This field cannot be longer than 200 characters. </p> </div> </div> <div class=form-group> <label translate=dgdtoolApp.support_level.description for=field_description>Description</label> <input class=form-control name=description id=field_description ng-model=support_level.description required ng-maxlength=\"2000\"/> <div ng-show=editForm.description.$invalid> <p class=help-block ng-show=editForm.description.$error.required translate=entity.validation.required> This field is required. </p> <p class=help-block ng-show=editForm.description.$error.maxlength translate=entity.validation.maxlength translate-value-max=2000> This field cannot be longer than 2000 characters. </p> </div> </div> <div class=form-group> <label translate=dgdtoolApp.support_level.status_id for=field_status_id>Status_id</label> <input type=number class=form-control name=status_id id=field_status_id ng-model=support_level.status_id required/> <div ng-show=editForm.status_id.$invalid> <p class=help-block ng-show=editForm.status_id.$error.required translate=entity.validation.required> This field is required. </p> <p class=help-block ng-show=editForm.status_id.$error.number translate=entity.validation.number> This field should be a number. </p> </div> </div> <div class=form-group> <label translate=dgdtoolApp.support_level.created_by for=field_created_by>Created_by</label> <input class=form-control name=created_by id=field_created_by ng-model=support_level.created_by required ng-maxlength=\"200\"/> <div ng-show=editForm.created_by.$invalid> <p class=help-block ng-show=editForm.created_by.$error.required translate=entity.validation.required> This field is required. </p> <p class=help-block ng-show=editForm.created_by.$error.maxlength translate=entity.validation.maxlength translate-value-max=200> This field cannot be longer than 200 characters. </p> </div> </div> <div class=form-group> <label translate=dgdtoolApp.support_level.created_date for=field_created_date>Created_date</label> <input type=date class=form-control name=created_date id=field_created_date ng-model=support_level.created_date required/> <div ng-show=editForm.created_date.$invalid> <p class=help-block ng-show=editForm.created_date.$error.required translate=entity.validation.required> This field is required. </p> </div> </div> <div class=form-group> <label translate=dgdtoolApp.support_level.modified_by for=field_modified_by>Modified_by</label> <input class=form-control name=modified_by id=field_modified_by ng-model=support_level.modified_by required ng-maxlength=\"200\"/> <div ng-show=editForm.modified_by.$invalid> <p class=help-block ng-show=editForm.modified_by.$error.required translate=entity.validation.required> This field is required. </p> <p class=help-block ng-show=editForm.modified_by.$error.maxlength translate=entity.validation.maxlength translate-value-max=200> This field cannot be longer than 200 characters. </p> </div> </div> <div class=form-group> <label translate=dgdtoolApp.support_level.modified_date for=field_modified_date>Modified_date</label> <input type=date class=form-control name=modified_date id=field_modified_date ng-model=support_level.modified_date required/> <div ng-show=editForm.modified_date.$invalid> <p class=help-block ng-show=editForm.modified_date.$error.required translate=entity.validation.required> This field is required. </p> </div> </div> </div> <div class=modal-footer> <button type=button class=\"btn btn-default\" data-dismiss=modal ng-click=clear()> <span class=\"glyphicon glyphicon-ban-circle\"></span>&nbsp;<span translate=entity.action.cancel>Cancel</span> </button> <button type=submit ng-disabled=\"editForm.$invalid || editForm.$submitted\" class=\"btn btn-primary\"> <span class=\"glyphicon glyphicon-save\"></span>&nbsp;<span translate=entity.action.save>Save</span> </button> </div> </form>"
  );


  $templateCache.put('scripts/app/entities/support_level/support_levels.html',
    "<div> <h2 translate=dgdtoolApp.support_level.home.title>Support_levels</h2> <jh-alert></jh-alert> <div class=container> <div class=row> <div class=col-md-4> <button class=\"btn btn-primary\" ui-sref=support_level.new> <span class=\"glyphicon glyphicon-flash\"></span> <span translate=dgdtoolApp.support_level.home.createLabel>Create a new Support_level</span> </button> </div> <div class=col-md-8> <form name=searchForm class=form-inline> <div class=form-group> <input class=form-control ng-model=searchQuery id=searchQuery placeholder=query> </div> <button class=\"btn btn-info\" ng-click=search()><span class=\"glyphicon glyphicon-search\"></span> <span>Search a Support_level</span> </button> </form> </div> </div> </div> <div class=\"modal fade\" id=deleteSupport_levelConfirmation> <div class=modal-dialog> <div class=modal-content> <form name=deleteForm ng-submit=confirmDelete(support_level.id)> <div class=modal-header> <button type=button class=close data-dismiss=modal aria-hidden=true ng-click=clear()>&times;</button> <h4 class=modal-title translate=entity.delete.title>Confirm delete operation</h4> </div> <div class=modal-body> <p translate=dgdtoolApp.support_level.delete.question translate-values=\"{id: '{{support_level.id}}'}\">Are you sure you want to delete this Support_level?</p> </div> <div class=modal-footer> <button type=button class=\"btn btn-default\" data-dismiss=modal ng-click=clear()> <span class=\"glyphicon glyphicon-ban-circle\"></span>&nbsp;<span translate=entity.action.cancel>Cancel</span> </button> <button type=submit ng-disabled=deleteForm.$invalid class=\"btn btn-danger\"> <span class=\"glyphicon glyphicon-remove-circle\"></span>&nbsp;<span translate=entity.action.delete>Delete</span> </button> </div> </form> </div> </div> </div> <div class=table-responsive> <table class=\"table table-striped\"> <thead> <tr> <th translate=global.field.id>ID</th> <th translate=dgdtoolApp.support_level.support_level_name>Support_level_name</th> <th translate=dgdtoolApp.support_level.description>Description</th> <th translate=dgdtoolApp.support_level.status_id>Status_id</th> <th translate=dgdtoolApp.support_level.created_by>Created_by</th> <th translate=dgdtoolApp.support_level.created_date>Created_date</th> <th translate=dgdtoolApp.support_level.modified_by>Modified_by</th> <th translate=dgdtoolApp.support_level.modified_date>Modified_date</th> <th></th> </tr> </thead> <tbody> <tr ng-repeat=\"support_level in support_levels track by support_level.id\"> <td><a ui-sref=support_level.detail({id:support_level.id})>{{support_level.id}}</a></td> <td>{{support_level.support_level_name}}</td> <td>{{support_level.description}}</td> <td>{{support_level.status_id}}</td> <td>{{support_level.created_by}}</td> <td>{{support_level.created_date | date:'mediumDate'}}</td> <td>{{support_level.modified_by}}</td> <td>{{support_level.modified_date | date:'mediumDate'}}</td> <td> <button type=submit ui-sref=support_level.detail({id:support_level.id}) class=\"btn btn-info btn-sm\"> <span class=\"glyphicon glyphicon-eye-open\"></span>&nbsp;<span translate=entity.action.view> View</span> </button> <button type=submit ui-sref=support_level.edit({id:support_level.id}) class=\"btn btn-primary btn-sm\"> <span class=\"glyphicon glyphicon-pencil\"></span>&nbsp;<span translate=entity.action.edit> Edit</span> </button> <button type=submit ng-click=delete(support_level.id) class=\"btn btn-danger btn-sm\"> <span class=\"glyphicon glyphicon-remove-circle\"></span>&nbsp;<span translate=entity.action.delete> Delete</span> </button> </td> </tr> </tbody> </table> <nav> <ul class=pager> <li ng-show=\"links['first'] >= 0\" ng-click=\"loadPage(links['first'])\"><a href=#>&lt;&lt;</a></li> <li ng-show=\"page > 0\" ng-click=\"loadPage(links['prev'] || 0)\"><a href=#>&lt;</a></li> <li ng-show=\"links['next']\" ng-click=\"loadPage(links['next'])\"><a href=#>&gt;</a></li> <li ng-show=\"links['last'] > 0\" ng-click=\"loadPage(links['last'])\"><a href=#>&gt;&gt;</a></li> </ul> </nav> </div> </div>"
  );


  $templateCache.put('scripts/app/entities/ticket/ticket-detail.html',
    "<div> <h2><span translate=dgdtoolApp.ticket.detail.title>Ticket</span> {{ticket.id}}</h2> <div class=table-responsive> <table class=\"table table-striped\"> <thead> <tr> <th translate=entity.detail.field>Field</th> <th translate=entity.detail.value>Value</th> </tr> </thead> <tbody> <tr> <td> <span translate=dgdtoolApp.ticket.ticket_ref_number>Ticket_ref_number</span> </td> <td> <span class=form-control-static>{{ticket.ticket_ref_number}}</span> </td> </tr> <tr> <td> <span translate=dgdtoolApp.ticket.ticket_created_date>Ticket_created_date</span> </td> <td> <span class=form-control-static>{{ticket.ticket_created_date | date:'medium'}}</span> </td> </tr> <tr> <td> <span translate=dgdtoolApp.ticket.description>Description</span> </td> <td> <span class=form-control-static>{{ticket.description}}</span> </td> </tr> <tr> <td> <span translate=dgdtoolApp.ticket.status_id>Status_id</span> </td> <td> <span class=form-control-static>{{ticket.status_id}}</span> </td> </tr> <tr> <td> <span translate=dgdtoolApp.ticket.created_by>Created_by</span> </td> <td> <span class=form-control-static>{{ticket.created_by}}</span> </td> </tr> <tr> <td> <span translate=dgdtoolApp.ticket.created_date>Created_date</span> </td> <td> <span class=form-control-static>{{ticket.created_date | date:'mediumDate'}}</span> </td> </tr> <tr> <td> <span translate=dgdtoolApp.ticket.modified_by>Modified_by</span> </td> <td> <span class=form-control-static>{{ticket.modified_by}}</span> </td> </tr> <tr> <td> <span translate=dgdtoolApp.ticket.modified_date>Modified_date</span> </td> <td> <span class=form-control-static>{{ticket.modified_date | date:'mediumDate'}}</span> </td> </tr> </tbody> </table> </div> <button type=submit onclick=window.history.back() class=\"btn btn-info\"> <span class=\"glyphicon glyphicon-arrow-left\"></span>&nbsp;<span translate=entity.action.back> Back</span> </button> </div>"
  );


  $templateCache.put('scripts/app/entities/ticket/ticket-dialog.html',
    "<form name=editForm role=form novalidate ng-submit=save() show-validation> <div class=modal-header> <button type=button class=close data-dismiss=modal aria-hidden=true ng-click=clear()>&times;</button> <h4 class=modal-title id=myTicketLabel translate=dgdtoolApp.ticket.home.createOrEditLabel>Create or edit a Ticket</h4> </div> <div class=modal-body> <jh-alert-error></jh-alert-error> <div class=form-group> <label for=id translate=global.field.id>ID</label> <input class=form-control id=id name=id ng-model=ticket.id readonly/> </div> <div class=form-group> <label translate=dgdtoolApp.ticket.ticket_ref_number for=field_ticket_ref_number>Ticket_ref_number</label> <input class=form-control name=ticket_ref_number id=field_ticket_ref_number ng-model=ticket.ticket_ref_number required ng-maxlength=\"200\"/> <div ng-show=editForm.ticket_ref_number.$invalid> <p class=help-block ng-show=editForm.ticket_ref_number.$error.required translate=entity.validation.required> This field is required. </p> <p class=help-block ng-show=editForm.ticket_ref_number.$error.maxlength translate=entity.validation.maxlength translate-value-max=200> This field cannot be longer than 200 characters. </p> </div> </div> <div class=form-group> <label translate=dgdtoolApp.ticket.ticket_created_date for=field_ticket_created_date>Ticket_created_date</label> <input type=datetime-local class=form-control name=ticket_created_date id=field_ticket_created_date ng-model=\"ticket.ticket_created_date\"/> </div> <div class=form-group> <label translate=dgdtoolApp.ticket.description for=field_description>Description</label> <input class=form-control name=description id=field_description ng-model=ticket.description required ng-maxlength=\"2000\"/> <div ng-show=editForm.description.$invalid> <p class=help-block ng-show=editForm.description.$error.required translate=entity.validation.required> This field is required. </p> <p class=help-block ng-show=editForm.description.$error.maxlength translate=entity.validation.maxlength translate-value-max=2000> This field cannot be longer than 2000 characters. </p> </div> </div> <div class=form-group> <label translate=dgdtoolApp.ticket.status_id for=field_status_id>Status_id</label> <input type=number class=form-control name=status_id id=field_status_id ng-model=ticket.status_id required/> <div ng-show=editForm.status_id.$invalid> <p class=help-block ng-show=editForm.status_id.$error.required translate=entity.validation.required> This field is required. </p> <p class=help-block ng-show=editForm.status_id.$error.number translate=entity.validation.number> This field should be a number. </p> </div> </div> <div class=form-group> <label translate=dgdtoolApp.ticket.created_by for=field_created_by>Created_by</label> <input class=form-control name=created_by id=field_created_by ng-model=ticket.created_by required ng-maxlength=\"200\"/> <div ng-show=editForm.created_by.$invalid> <p class=help-block ng-show=editForm.created_by.$error.required translate=entity.validation.required> This field is required. </p> <p class=help-block ng-show=editForm.created_by.$error.maxlength translate=entity.validation.maxlength translate-value-max=200> This field cannot be longer than 200 characters. </p> </div> </div> <div class=form-group> <label translate=dgdtoolApp.ticket.created_date for=field_created_date>Created_date</label> <input type=date class=form-control name=created_date id=field_created_date ng-model=ticket.created_date required/> <div ng-show=editForm.created_date.$invalid> <p class=help-block ng-show=editForm.created_date.$error.required translate=entity.validation.required> This field is required. </p> </div> </div> <div class=form-group> <label translate=dgdtoolApp.ticket.modified_by for=field_modified_by>Modified_by</label> <input class=form-control name=modified_by id=field_modified_by ng-model=ticket.modified_by required ng-maxlength=\"200\"/> <div ng-show=editForm.modified_by.$invalid> <p class=help-block ng-show=editForm.modified_by.$error.required translate=entity.validation.required> This field is required. </p> <p class=help-block ng-show=editForm.modified_by.$error.maxlength translate=entity.validation.maxlength translate-value-max=200> This field cannot be longer than 200 characters. </p> </div> </div> <div class=form-group> <label translate=dgdtoolApp.ticket.modified_date for=field_modified_date>Modified_date</label> <input type=date class=form-control name=modified_date id=field_modified_date ng-model=ticket.modified_date required/> <div ng-show=editForm.modified_date.$invalid> <p class=help-block ng-show=editForm.modified_date.$error.required translate=entity.validation.required> This field is required. </p> </div> </div> </div> <div class=modal-footer> <button type=button class=\"btn btn-default\" data-dismiss=modal ng-click=clear()> <span class=\"glyphicon glyphicon-ban-circle\"></span>&nbsp;<span translate=entity.action.cancel>Cancel</span> </button> <button type=submit ng-disabled=\"editForm.$invalid || editForm.$submitted\" class=\"btn btn-primary\"> <span class=\"glyphicon glyphicon-save\"></span>&nbsp;<span translate=entity.action.save>Save</span> </button> </div> </form>"
  );


  $templateCache.put('scripts/app/entities/ticket/tickets.html',
    "<div> <h2 translate=dgdtoolApp.ticket.home.title>Tickets</h2> <jh-alert></jh-alert> <div class=container> <div class=row> <div class=col-md-4> <button class=\"btn btn-primary\" ui-sref=ticket.new> <span class=\"glyphicon glyphicon-flash\"></span> <span translate=dgdtoolApp.ticket.home.createLabel>Create a new Ticket</span> </button> </div> <div class=col-md-8> <form name=searchForm class=form-inline> <div class=form-group> <input class=form-control ng-model=searchQuery id=searchQuery placeholder=query> </div> <button class=\"btn btn-info\" ng-click=search()><span class=\"glyphicon glyphicon-search\"></span> <span>Search a Ticket</span> </button> </form> </div> </div> </div> <div class=\"modal fade\" id=deleteTicketConfirmation> <div class=modal-dialog> <div class=modal-content> <form name=deleteForm ng-submit=confirmDelete(ticket.id)> <div class=modal-header> <button type=button class=close data-dismiss=modal aria-hidden=true ng-click=clear()>&times;</button> <h4 class=modal-title translate=entity.delete.title>Confirm delete operation</h4> </div> <div class=modal-body> <p translate=dgdtoolApp.ticket.delete.question translate-values=\"{id: '{{ticket.id}}'}\">Are you sure you want to delete this Ticket?</p> </div> <div class=modal-footer> <button type=button class=\"btn btn-default\" data-dismiss=modal ng-click=clear()> <span class=\"glyphicon glyphicon-ban-circle\"></span>&nbsp;<span translate=entity.action.cancel>Cancel</span> </button> <button type=submit ng-disabled=deleteForm.$invalid class=\"btn btn-danger\"> <span class=\"glyphicon glyphicon-remove-circle\"></span>&nbsp;<span translate=entity.action.delete>Delete</span> </button> </div> </form> </div> </div> </div> <div class=table-responsive> <table class=\"table table-striped\"> <thead> <tr> <th translate=global.field.id>ID</th> <th translate=dgdtoolApp.ticket.ticket_ref_number>Ticket_ref_number</th> <th translate=dgdtoolApp.ticket.ticket_created_date>Ticket_created_date</th> <th translate=dgdtoolApp.ticket.description>Description</th> <th translate=dgdtoolApp.ticket.status_id>Status_id</th> <th translate=dgdtoolApp.ticket.created_by>Created_by</th> <th translate=dgdtoolApp.ticket.created_date>Created_date</th> <th translate=dgdtoolApp.ticket.modified_by>Modified_by</th> <th translate=dgdtoolApp.ticket.modified_date>Modified_date</th> <th></th> </tr> </thead> <tbody> <tr ng-repeat=\"ticket in tickets track by ticket.id\"> <td><a ui-sref=ticket.detail({id:ticket.id})>{{ticket.id}}</a></td> <td>{{ticket.ticket_ref_number}}</td> <td>{{ticket.ticket_created_date | date:'medium'}}</td> <td>{{ticket.description}}</td> <td>{{ticket.status_id}}</td> <td>{{ticket.created_by}}</td> <td>{{ticket.created_date | date:'mediumDate'}}</td> <td>{{ticket.modified_by}}</td> <td>{{ticket.modified_date | date:'mediumDate'}}</td> <td> <button type=submit ui-sref=ticket.detail({id:ticket.id}) class=\"btn btn-info btn-sm\"> <span class=\"glyphicon glyphicon-eye-open\"></span>&nbsp;<span translate=entity.action.view> View</span> </button> <button type=submit ui-sref=ticket.edit({id:ticket.id}) class=\"btn btn-primary btn-sm\"> <span class=\"glyphicon glyphicon-pencil\"></span>&nbsp;<span translate=entity.action.edit> Edit</span> </button> <button type=submit ng-click=delete(ticket.id) class=\"btn btn-danger btn-sm\"> <span class=\"glyphicon glyphicon-remove-circle\"></span>&nbsp;<span translate=entity.action.delete> Delete</span> </button> </td> </tr> </tbody> </table> <nav> <ul class=pager> <li ng-show=\"links['first'] >= 0\" ng-click=\"loadPage(links['first'])\"><a href=#>&lt;&lt;</a></li> <li ng-show=\"page > 0\" ng-click=\"loadPage(links['prev'] || 0)\"><a href=#>&lt;</a></li> <li ng-show=\"links['next']\" ng-click=\"loadPage(links['next'])\"><a href=#>&gt;</a></li> <li ng-show=\"links['last'] > 0\" ng-click=\"loadPage(links['last'])\"><a href=#>&gt;&gt;</a></li> </ul> </nav> </div> </div>"
  );


  $templateCache.put('scripts/app/error/accessdenied.html',
    "<div ng-cloak> <div class=row> <div class=col-md-4> <span class=\"hipster img-responsive img-rounded\"></span> </div> <div class=col-md-8> <h1 translate=error.title>Error Page!</h1> <div class=\"alert alert-danger\" translate=error.403>You are not authorized to access the page. </div> </div> </div> </div>"
  );


  $templateCache.put('scripts/app/error/error.html',
    "<div ng-cloak> <div class=row> <div class=col-md-4> <span class=\"hipster img-responsive img-rounded\"></span> </div> <div class=col-md-8> <h1 translate=error.title>Error Page!</h1> <div ng-show=errorMessage> <div class=\"alert alert-danger\">{{errorMessage}} </div> </div> </div> </div> </div>"
  );


  $templateCache.put('scripts/app/main/main.html',
    "<div ng-cloak> <div class=row> <div class=col-md-4> <span class=\"hipster img-responsive img-rounded\"></span> </div> <div class=col-md-8> <h1 translate=main.title>Welcome, Java Hipster!</h1> <p class=lead translate=main.subtitle>This is your homepage</p> <div ng-switch=isAuthenticated()> <div class=\"alert alert-success\" ng-switch-when=true translate=main.logged.message translate-values=\"{username: '{{account.login}}'}\"> You are logged in as user \"{{account.login}}\". </div> <div class=\"alert alert-warning\" ng-switch-when=false translate=global.messages.info.authenticated> If you want to <a class=alert-link href=#/login>sign in</a>, you can try the default accounts:<br/>- Administrator (login=\"admin\" and password=\"admin\") <br/>- User (login=\"user\" and password=\"user\"). </div> <div class=\"alert alert-warning\" ng-switch-when=false translate=global.messages.info.register> You don't have an account yet? <a class=alert-link href=#/register>Register a new account</a> </div> </div> <p translate=main.question> If you have any question on JHipster: </p> <ul> <li><a href=\"http://jhipster.github.io/\" target=_blank translate=main.link.homepage>JHipster homepage</a></li> <li><a href=http://stackoverflow.com/tags/jhipster/info target=_blank translate=main.link.stackoverflow>JHipster on Stack Overflow</a></li> <li><a href=\"https://github.com/jhipster/generator-jhipster/issues?state=open\" target=_blank translate=main.link.bugtracker>JHipster bug tracker</a></li> <li><a href=https://gitter.im/jhipster/generator-jhipster target=_blank translate=main.link.chat>JHipster public chat room</a></li> <li><a href=https://twitter.com/java_hipster target=_blank translate=main.link.contact>contact @java_hipster on Twitter</a></li> </ul> <p> <span translate=main.like>If you like JHipster, don't forget to give us a star on </span>&nbsp;<a href=https://github.com/jhipster/generator-jhipster target=_blank translate=main.github>Github</a>! </p> </div> </div> </div>"
  );


  $templateCache.put('scripts/components/form/pager.html',
    "<nav> <ul class=dgdtoolApp-pager> <li ng-show=\"links['first'] >= 0\" ng-click=\"loadPage(links['first'])\"><a href=#>&lt;&lt;</a></li> <li ng-show=\"page > 0\" ng-click=\"loadPage(links['prev'] || 0)\"><a href=#>&lt;</a></li> <li ng-show=\"links['next']\" ng-click=\"loadPage(links['next'])\"><a href=#>&gt;</a></li> <li ng-show=\"links['last'] > 0\" ng-click=\"loadPage(links['last'])\"><a href=#>&gt;&gt;</a></li> </ul> </nav>"
  );


  $templateCache.put('scripts/components/form/pagination.html',
    "<nav> <ul class=dgdtoolApp-pagination> <li ng-show=\"links['first'] >= 0\" ng-click=\"loadPage(links['first'])\"><a>&lt;&lt;</a></li> <li ng-show=\"page > 0\" ng-click=\"loadPage(links['prev'] || 0)\"><a>&lt;</a></li> <li ng-show=\"page > 1\" ng-click=\"loadPage(page - 2)\"><a>{{page - 1}}</a></li> <li ng-show=\"page > 0\" ng-click=\"loadPage(page - 1)\"><a>{{page}}</a></li> <li class=active><a>{{page + 1}}</a></li> <li ng-show=\"page < links['last']\" ng-click=\"loadPage(page + 1)\"><a>{{page + 2}}</a></li> <li ng-show=\"page < links['last'] - 1\" ng-click=\"loadPage(page + 2)\"><a>{{page + 3}}</a></li> <li ng-show=\"links['next']\" ng-click=\"loadPage(links['next'])\"><a>&gt;</a></li> <li ng-show=\"links['last'] > 0\" ng-click=\"loadPage(links['last'])\"><a>&gt;&gt;</a></li> </ul> </nav>"
  );


  $templateCache.put('scripts/components/navbar/navbar.html',
    "<nav class=\"navbar navbar-default\" role=navigation> <div class=container> <div class=navbar-header> <button type=button class=navbar-toggle data-toggle=collapse data-target=#navbar-collapse> <span class=sr-only>Toggle navigation</span> <span class=icon-bar></span> <span class=icon-bar></span> <span class=icon-bar></span> </button> <a class=navbar-brand href=\"#/\"><span translate=global.title>jhipster</span> <span class=navbar-version>v{{VERSION}}</span></a> </div> <div class=\"collapse navbar-collapse\" id=navbar-collapse ng-switch=isAuthenticated()> <ul class=\"nav navbar-nav navbar-right\"> <li ui-sref-active=active> <a ui-sref=home data-toggle=collapse data-target=.navbar-collapse.in> <span class=\"glyphicon glyphicon-home\"></span> <span class=hidden-sm translate=global.menu.home>Home</span> </a> </li> <li ui-sref-active=active ng-switch-when=true class=\"dropdown pointer\"> <a class=dropdown-toggle data-toggle=dropdown href=\"\"> <span> <span class=\"glyphicon glyphicon-th-list\"></span> <span class=hidden-sm translate=global.menu.entities.main> Entities </span> <b class=caret></b> </span> </a> <ul class=dropdown-menu> <li ui-sref-active=active><a ui-sref=app data-toggle=collapse data-target=.navbar-collapse.in><span class=\"glyphicon glyphicon-asterisk\"></span> &#xA0;<span translate=global.menu.entities.app>app</span></a></li> <li ui-sref-active=active><a ui-sref=app_type data-toggle=collapse data-target=.navbar-collapse.in><span class=\"glyphicon glyphicon-asterisk\"></span> &#xA0;<span translate=global.menu.entities.app_type>app_type</span></a></li> <li ui-sref-active=active><a ui-sref=asset_type data-toggle=collapse data-target=.navbar-collapse.in><span class=\"glyphicon glyphicon-asterisk\"></span> &#xA0;<span translate=global.menu.entities.asset_type>asset_type</span></a></li> <li ui-sref-active=active><a ui-sref=data_state data-toggle=collapse data-target=.navbar-collapse.in><span class=\"glyphicon glyphicon-asterisk\"></span> &#xA0;<span translate=global.menu.entities.data_state>data_state</span></a></li> <li ui-sref-active=active><a ui-sref=data_type data-toggle=collapse data-target=.navbar-collapse.in><span class=\"glyphicon glyphicon-asterisk\"></span> &#xA0;<span translate=global.menu.entities.data_type>data_type</span></a></li> <li ui-sref-active=active><a ui-sref=datasource_type data-toggle=collapse data-target=.navbar-collapse.in><span class=\"glyphicon glyphicon-asterisk\"></span> &#xA0;<span translate=global.menu.entities.datasource_type>datasource_type</span></a></li> <li ui-sref-active=active><a ui-sref=decision data-toggle=collapse data-target=.navbar-collapse.in><span class=\"glyphicon glyphicon-asterisk\"></span> &#xA0;<span translate=global.menu.entities.decision>decision</span></a></li> <li ui-sref-active=active><a ui-sref=end_state_designation data-toggle=collapse data-target=.navbar-collapse.in><span class=\"glyphicon glyphicon-asterisk\"></span> &#xA0;<span translate=global.menu.entities.end_state_designation>end_state_designation</span></a></li> <li ui-sref-active=active><a ui-sref=environment data-toggle=collapse data-target=.navbar-collapse.in><span class=\"glyphicon glyphicon-asterisk\"></span> &#xA0;<span translate=global.menu.entities.environment>environment</span></a></li> <li ui-sref-active=active><a ui-sref=feedback data-toggle=collapse data-target=.navbar-collapse.in><span class=\"glyphicon glyphicon-asterisk\"></span> &#xA0;<span translate=global.menu.entities.feedback>feedback</span></a></li> <li ui-sref-active=active><a ui-sref=feedback_type data-toggle=collapse data-target=.navbar-collapse.in><span class=\"glyphicon glyphicon-asterisk\"></span> &#xA0;<span translate=global.menu.entities.feedback_type>feedback_type</span></a></li> <li ui-sref-active=active><a ui-sref=field_type data-toggle=collapse data-target=.navbar-collapse.in><span class=\"glyphicon glyphicon-asterisk\"></span> &#xA0;<span translate=global.menu.entities.field_type>field_type</span></a></li> <li ui-sref-active=active><a ui-sref=frequency data-toggle=collapse data-target=.navbar-collapse.in><span class=\"glyphicon glyphicon-asterisk\"></span> &#xA0;<span translate=global.menu.entities.frequency>frequency</span></a></li> <li ui-sref-active=active><a ui-sref=initiative data-toggle=collapse data-target=.navbar-collapse.in><span class=\"glyphicon glyphicon-asterisk\"></span> &#xA0;<span translate=global.menu.entities.initiative>initiative</span></a></li> <li ui-sref-active=active><a ui-sref=initiative_type data-toggle=collapse data-target=.navbar-collapse.in><span class=\"glyphicon glyphicon-asterisk\"></span> &#xA0;<span translate=global.menu.entities.initiative_type>initiative_type</span></a></li> <li ui-sref-active=active><a ui-sref=license_type data-toggle=collapse data-target=.navbar-collapse.in><span class=\"glyphicon glyphicon-asterisk\"></span> &#xA0;<span translate=global.menu.entities.license_type>license_type</span></a></li> <li ui-sref-active=active><a ui-sref=menu data-toggle=collapse data-target=.navbar-collapse.in><span class=\"glyphicon glyphicon-asterisk\"></span> &#xA0;<span translate=global.menu.entities.menu>menu</span></a></li> <li ui-sref-active=active><a ui-sref=message data-toggle=collapse data-target=.navbar-collapse.in><span class=\"glyphicon glyphicon-asterisk\"></span> &#xA0;<span translate=global.menu.entities.message>message</span></a></li> <li ui-sref-active=active><a ui-sref=os_type data-toggle=collapse data-target=.navbar-collapse.in><span class=\"glyphicon glyphicon-asterisk\"></span> &#xA0;<span translate=global.menu.entities.os_type>os_type</span></a></li> <li ui-sref-active=active><a ui-sref=os_version data-toggle=collapse data-target=.navbar-collapse.in><span class=\"glyphicon glyphicon-asterisk\"></span> &#xA0;<span translate=global.menu.entities.os_version>os_version</span></a></li> <li ui-sref-active=active><a ui-sref=package_type data-toggle=collapse data-target=.navbar-collapse.in><span class=\"glyphicon glyphicon-asterisk\"></span> &#xA0;<span translate=global.menu.entities.package_type>package_type</span></a></li> <li ui-sref-active=active><a ui-sref=package_version data-toggle=collapse data-target=.navbar-collapse.in><span class=\"glyphicon glyphicon-asterisk\"></span> &#xA0;<span translate=global.menu.entities.package_version>package_version</span></a></li> <li ui-sref-active=active><a ui-sref=packages data-toggle=collapse data-target=.navbar-collapse.in><span class=\"glyphicon glyphicon-asterisk\"></span> &#xA0;<span translate=global.menu.entities.packages>packages</span></a></li> <li ui-sref-active=active><a ui-sref=partner data-toggle=collapse data-target=.navbar-collapse.in><span class=\"glyphicon glyphicon-asterisk\"></span> &#xA0;<span translate=global.menu.entities.partner>partner</span></a></li> <li ui-sref-active=active><a ui-sref=partner_api data-toggle=collapse data-target=.navbar-collapse.in><span class=\"glyphicon glyphicon-asterisk\"></span> &#xA0;<span translate=global.menu.entities.partner_api>partner_api</span></a></li> <li ui-sref-active=active><a ui-sref=path data-toggle=collapse data-target=.navbar-collapse.in><span class=\"glyphicon glyphicon-asterisk\"></span> &#xA0;<span translate=global.menu.entities.path>path</span></a></li> <li ui-sref-active=active><a ui-sref=platform data-toggle=collapse data-target=.navbar-collapse.in><span class=\"glyphicon glyphicon-asterisk\"></span> &#xA0;<span translate=global.menu.entities.platform>platform</span></a></li> <li ui-sref-active=active><a ui-sref=project data-toggle=collapse data-target=.navbar-collapse.in><span class=\"glyphicon glyphicon-asterisk\"></span> &#xA0;<span translate=global.menu.entities.project>project</span></a></li> <li ui-sref-active=active><a ui-sref=project_phase data-toggle=collapse data-target=.navbar-collapse.in><span class=\"glyphicon glyphicon-asterisk\"></span> &#xA0;<span translate=global.menu.entities.project_phase>project_phase</span></a></li> <li ui-sref-active=active><a ui-sref=project_team data-toggle=collapse data-target=.navbar-collapse.in><span class=\"glyphicon glyphicon-asterisk\"></span> &#xA0;<span translate=global.menu.entities.project_team>project_team</span></a></li> <li ui-sref-active=active><a ui-sref=resource data-toggle=collapse data-target=.navbar-collapse.in><span class=\"glyphicon glyphicon-asterisk\"></span> &#xA0;<span translate=global.menu.entities.resource>resource</span></a></li> <li ui-sref-active=active><a ui-sref=role data-toggle=collapse data-target=.navbar-collapse.in><span class=\"glyphicon glyphicon-asterisk\"></span> &#xA0;<span translate=global.menu.entities.role>role</span></a></li> <li ui-sref-active=active><a ui-sref=security_solution data-toggle=collapse data-target=.navbar-collapse.in><span class=\"glyphicon glyphicon-asterisk\"></span> &#xA0;<span translate=global.menu.entities.security_solution>security_solution</span></a></li> <li ui-sref-active=active><a ui-sref=server_role data-toggle=collapse data-target=.navbar-collapse.in><span class=\"glyphicon glyphicon-asterisk\"></span> &#xA0;<span translate=global.menu.entities.server_role>server_role</span></a></li> <li ui-sref-active=active><a ui-sref=server_type data-toggle=collapse data-target=.navbar-collapse.in><span class=\"glyphicon glyphicon-asterisk\"></span> &#xA0;<span translate=global.menu.entities.server_type>server_type</span></a></li> <li ui-sref-active=active><a ui-sref=service data-toggle=collapse data-target=.navbar-collapse.in><span class=\"glyphicon glyphicon-asterisk\"></span> &#xA0;<span translate=global.menu.entities.service>service</span></a></li> <li ui-sref-active=active><a ui-sref=stage data-toggle=collapse data-target=.navbar-collapse.in><span class=\"glyphicon glyphicon-asterisk\"></span> &#xA0;<span translate=global.menu.entities.stage>stage</span></a></li> <li ui-sref-active=active><a ui-sref=status_type data-toggle=collapse data-target=.navbar-collapse.in><span class=\"glyphicon glyphicon-asterisk\"></span> &#xA0;<span translate=global.menu.entities.status_type>status_type</span></a></li> <li ui-sref-active=active><a ui-sref=statuses data-toggle=collapse data-target=.navbar-collapse.in><span class=\"glyphicon glyphicon-asterisk\"></span> &#xA0;<span translate=global.menu.entities.statuses>statuses</span></a></li> <li ui-sref-active=active><a ui-sref=support_level data-toggle=collapse data-target=.navbar-collapse.in><span class=\"glyphicon glyphicon-asterisk\"></span> &#xA0;<span translate=global.menu.entities.support_level>support_level</span></a></li> <li ui-sref-active=active><a ui-sref=ticket data-toggle=collapse data-target=.navbar-collapse.in><span class=\"glyphicon glyphicon-asterisk\"></span> &#xA0;<span translate=global.menu.entities.ticket>ticket</span></a></li> <!-- JHipster will add entities to the menu here --> </ul> </li> <li ng-class=\"{active: $state.includes('account')}\" class=\"dropdown pointer\"> <a class=dropdown-toggle data-toggle=dropdown href=\"\"> <span> <span class=\"glyphicon glyphicon-user\"></span> <span class=hidden-sm translate=global.menu.account.main> Account </span> <b class=caret></b> </span> </a> <ul class=dropdown-menu> <li ui-sref-active=active ng-switch-when=true><a ui-sref=settings data-toggle=collapse data-target=.navbar-collapse.in><span class=\"glyphicon glyphicon-wrench\"></span> &#xA0;<span translate=global.menu.account.settings>Settings</span></a></li> <li ui-sref-active=active ng-switch-when=true><a ui-sref=password data-toggle=collapse data-target=.navbar-collapse.in><span class=\"glyphicon glyphicon-lock\"></span> &#xA0;<span translate=global.menu.account.password>Password</span></a></li> <li ui-sref-active=active ng-switch-when=true><a ui-sref=sessions data-toggle=collapse data-target=.navbar-collapse.in><span class=\"glyphicon glyphicon-cloud\"></span> &#xA0;<span translate=global.menu.account.sessions>Sessions</span></a></li> <li ui-sref-active=active ng-switch-when=true><a href=\"\" ng-click=logout() data-toggle=collapse data-target=.navbar-collapse.in><span class=\"glyphicon glyphicon-log-out\"></span> &#xA0;<span translate=global.menu.account.logout>Sign out</span></a></li> <li ui-sref-active=active ng-switch-when=false><a ui-sref=login data-toggle=collapse data-target=.navbar-collapse.in><span class=\"glyphicon glyphicon-log-in\"></span> &#xA0;<span translate=global.menu.account.login>Sign in</span></a></li> <li ui-sref-active=active ng-switch-when=false><a ui-sref=register data-toggle=collapse data-target=.navbar-collapse.in><span class=\"glyphicon glyphicon-plus-sign\"></span> &#xA0;<span translate=global.menu.account.register>Register</span></a></li> </ul> </li> <li ng-class=\"{active: $state.includes('admin')}\" ng-switch-when=true has-authority=ROLE_ADMIN class=\"dropdown pointer\"> <a class=dropdown-toggle data-toggle=dropdown href=\"\"> <span> <span class=\"glyphicon glyphicon-tower\"></span> <span class=hidden-sm translate=global.menu.admin.main>Administration</span> <b class=caret></b> </span> </a> <ul class=dropdown-menu> <li ui-sref-active=active><a ui-sref=user-management data-toggle=collapse data-target=.navbar-collapse.in><span class=\"glyphicon glyphicon-user\"></span> &#xA0;<span translate=global.menu.admin.user-management>User management</span></a></li> <li ui-sref-active=active><a ui-sref=metrics data-toggle=collapse data-target=.navbar-collapse.in><span class=\"glyphicon glyphicon-dashboard\"></span> &#xA0;<span translate=global.menu.admin.metrics>Metrics</span></a></li> <li ui-sref-active=active><a ui-sref=health data-toggle=collapse data-target=.navbar-collapse.in><span class=\"glyphicon glyphicon-heart\"></span> &#xA0;<span translate=global.menu.admin.health>Health</span></a></li> <li ui-sref-active=active><a ui-sref=configuration data-toggle=collapse data-target=.navbar-collapse.in><span class=\"glyphicon glyphicon-list-alt\"></span> &#xA0;<span translate=global.menu.admin.configuration>Configuration</span></a></li> <li ui-sref-active=active><a ui-sref=audits data-toggle=collapse data-target=.navbar-collapse.in><span class=\"glyphicon glyphicon-bell\"></span> &#xA0;<span translate=global.menu.admin.audits>Audits</span></a></li> <li ui-sref-active=active><a ui-sref=logs data-toggle=collapse data-target=.navbar-collapse.in><span class=\"glyphicon glyphicon-tasks\"></span> &#xA0;<span translate=global.menu.admin.logs>Logs</span></a></li> <li ng-hide=inProduction ui-sref-active=active><a ui-sref=docs data-toggle=collapse data-target=.navbar-collapse.in><span class=\"glyphicon glyphicon-book\"></span> &#xA0;<span translate=global.menu.admin.apidocs>API</span></a></li> </ul> </li> <li ui-sref-active=active class=\"dropdown pointer\" ng-controller=LanguageController> <a class=dropdown-toggle data-toggle=dropdown href=\"\"> <span> <span class=\"glyphicon glyphicon-flag\"></span> <span class=hidden-sm translate=global.menu.language>Language</span> <b class=caret></b> </span> </a> <ul class=dropdown-menu> <li active-menu={{language}} ng-repeat=\"language in languages\"> <a href=\"\" ng-click=changeLanguage(language) data-toggle=collapse data-target=.navbar-collapse.in>{{language | findLanguageFromKey}}</a> </li> </ul> </li> </ul> </div> </div> </nav>"
  );

}]);
